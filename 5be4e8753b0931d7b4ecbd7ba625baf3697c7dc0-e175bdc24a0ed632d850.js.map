{"version":3,"file":"5be4e8753b0931d7b4ecbd7ba625baf3697c7dc0-e175bdc24a0ed632d850.js","mappings":"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","sources":["webpack://gatsby-l10n-example/./node_modules/fp-ts/lib/Applicative.js","webpack://gatsby-l10n-example/./node_modules/fp-ts/lib/Apply.js","webpack://gatsby-l10n-example/./node_modules/fp-ts/lib/Chain.js","webpack://gatsby-l10n-example/./node_modules/fp-ts/lib/Eq.js","webpack://gatsby-l10n-example/./node_modules/fp-ts/lib/FromEither.js","webpack://gatsby-l10n-example/./node_modules/fp-ts/lib/Functor.js","webpack://gatsby-l10n-example/./node_modules/fp-ts/lib/Magma.js","webpack://gatsby-l10n-example/./node_modules/fp-ts/lib/Option.js","webpack://gatsby-l10n-example/./node_modules/fp-ts/lib/Ord.js","webpack://gatsby-l10n-example/./node_modules/fp-ts/lib/Predicate.js","webpack://gatsby-l10n-example/./node_modules/fp-ts/lib/Semigroup.js","webpack://gatsby-l10n-example/./node_modules/fp-ts/lib/Separated.js","webpack://gatsby-l10n-example/./node_modules/fp-ts/lib/Witherable.js","webpack://gatsby-l10n-example/./node_modules/fp-ts/lib/Zero.js","webpack://gatsby-l10n-example/./node_modules/fp-ts/lib/function.js","webpack://gatsby-l10n-example/./node_modules/fp-ts/lib/internal.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getApplicativeComposition = exports.getApplicativeMonoid = void 0;\n/**\n * The `Applicative` type class extends the `Apply` type class with a `of` function, which can be used to create values\n * of type `f a` from values of type `a`.\n *\n * Where `Apply` provides the ability to lift functions of two or more arguments to functions whose arguments are\n * wrapped using `f`, and `Functor` provides the ability to lift functions of one argument, `pure` can be seen as the\n * function which lifts functions of _zero_ arguments. That is, `Applicative` functors support a lifting operation for\n * any number of function arguments.\n *\n * Instances must satisfy the following laws in addition to the `Apply` laws:\n *\n * 1. Identity: `A.ap(A.of(a => a), fa) <-> fa`\n * 2. Homomorphism: `A.ap(A.of(ab), A.of(a)) <-> A.of(ab(a))`\n * 3. Interchange: `A.ap(fab, A.of(a)) <-> A.ap(A.of(ab => ab(a)), fab)`\n *\n * Note. `Functor`'s `map` can be derived: `A.map(x, f) = A.ap(A.of(f), x)`\n *\n * @since 2.0.0\n */\n\nvar Apply_1 = require(\"./Apply\");\n\nvar function_1 = require(\"./function\");\n\nvar Functor_1 = require(\"./Functor\");\n\nfunction getApplicativeMonoid(F) {\n  var f = Apply_1.getApplySemigroup(F);\n  return function (M) {\n    return {\n      concat: f(M).concat,\n      empty: F.of(M.empty)\n    };\n  };\n}\n\nexports.getApplicativeMonoid = getApplicativeMonoid;\n/** @deprecated */\n\nfunction getApplicativeComposition(F, G) {\n  var map = Functor_1.getFunctorComposition(F, G).map;\n\n  var _ap = Apply_1.ap(F, G);\n\n  return {\n    map: map,\n    of: function of(a) {\n      return F.of(G.of(a));\n    },\n    ap: function ap(fgab, fga) {\n      return function_1.pipe(fgab, _ap(fga));\n    }\n  };\n}\n\nexports.getApplicativeComposition = getApplicativeComposition;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sequenceS = exports.sequenceT = exports.getApplySemigroup = exports.apS = exports.apSecond = exports.apFirst = exports.ap = void 0;\n\nvar function_1 = require(\"./function\");\n\nfunction ap(F, G) {\n  return function (fa) {\n    return function (fab) {\n      return F.ap(F.map(fab, function (gab) {\n        return function (ga) {\n          return G.ap(gab, ga);\n        };\n      }), fa);\n    };\n  };\n}\n\nexports.ap = ap;\n\nfunction apFirst(A) {\n  return function (second) {\n    return function (first) {\n      return A.ap(A.map(first, function (a) {\n        return function () {\n          return a;\n        };\n      }), second);\n    };\n  };\n}\n\nexports.apFirst = apFirst;\n\nfunction apSecond(A) {\n  return function (second) {\n    return function (first) {\n      return A.ap(A.map(first, function () {\n        return function (b) {\n          return b;\n        };\n      }), second);\n    };\n  };\n}\n\nexports.apSecond = apSecond;\n\nfunction apS(F) {\n  return function (name, fb) {\n    return function (fa) {\n      return F.ap(F.map(fa, function (a) {\n        return function (b) {\n          var _a;\n\n          return Object.assign({}, a, (_a = {}, _a[name] = b, _a));\n        };\n      }), fb);\n    };\n  };\n}\n\nexports.apS = apS;\n\nfunction getApplySemigroup(F) {\n  return function (S) {\n    return {\n      concat: function concat(first, second) {\n        return F.ap(F.map(first, function (x) {\n          return function (y) {\n            return S.concat(x, y);\n          };\n        }), second);\n      }\n    };\n  };\n}\n\nexports.getApplySemigroup = getApplySemigroup;\n\nfunction curried(f, n, acc) {\n  return function (x) {\n    var combined = Array(acc.length + 1);\n\n    for (var i = 0; i < acc.length; i++) {\n      combined[i] = acc[i];\n    }\n\n    combined[acc.length] = x;\n    return n === 0 ? f.apply(null, combined) : curried(f, n - 1, combined);\n  };\n}\n\nvar tupleConstructors = {\n  1: function _(a) {\n    return [a];\n  },\n  2: function _(a) {\n    return function (b) {\n      return [a, b];\n    };\n  },\n  3: function _(a) {\n    return function (b) {\n      return function (c) {\n        return [a, b, c];\n      };\n    };\n  },\n  4: function _(a) {\n    return function (b) {\n      return function (c) {\n        return function (d) {\n          return [a, b, c, d];\n        };\n      };\n    };\n  },\n  5: function _(a) {\n    return function (b) {\n      return function (c) {\n        return function (d) {\n          return function (e) {\n            return [a, b, c, d, e];\n          };\n        };\n      };\n    };\n  }\n};\n\nfunction getTupleConstructor(len) {\n  if (!tupleConstructors.hasOwnProperty(len)) {\n    tupleConstructors[len] = curried(function_1.tuple, len - 1, []);\n  }\n\n  return tupleConstructors[len];\n}\n\nfunction sequenceT(F) {\n  return function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    var len = args.length;\n    var f = getTupleConstructor(len);\n    var fas = F.map(args[0], f);\n\n    for (var i = 1; i < len; i++) {\n      fas = F.ap(fas, args[i]);\n    }\n\n    return fas;\n  };\n}\n\nexports.sequenceT = sequenceT;\n\nfunction getRecordConstructor(keys) {\n  var len = keys.length;\n\n  switch (len) {\n    case 1:\n      return function (a) {\n        var _a;\n\n        return _a = {}, _a[keys[0]] = a, _a;\n      };\n\n    case 2:\n      return function (a) {\n        return function (b) {\n          var _a;\n\n          return _a = {}, _a[keys[0]] = a, _a[keys[1]] = b, _a;\n        };\n      };\n\n    case 3:\n      return function (a) {\n        return function (b) {\n          return function (c) {\n            var _a;\n\n            return _a = {}, _a[keys[0]] = a, _a[keys[1]] = b, _a[keys[2]] = c, _a;\n          };\n        };\n      };\n\n    case 4:\n      return function (a) {\n        return function (b) {\n          return function (c) {\n            return function (d) {\n              var _a;\n\n              return _a = {}, _a[keys[0]] = a, _a[keys[1]] = b, _a[keys[2]] = c, _a[keys[3]] = d, _a;\n            };\n          };\n        };\n      };\n\n    case 5:\n      return function (a) {\n        return function (b) {\n          return function (c) {\n            return function (d) {\n              return function (e) {\n                var _a;\n\n                return _a = {}, _a[keys[0]] = a, _a[keys[1]] = b, _a[keys[2]] = c, _a[keys[3]] = d, _a[keys[4]] = e, _a;\n              };\n            };\n          };\n        };\n      };\n\n    default:\n      return curried(function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        var r = {};\n\n        for (var i = 0; i < len; i++) {\n          r[keys[i]] = args[i];\n        }\n\n        return r;\n      }, len - 1, []);\n  }\n}\n\nfunction sequenceS(F) {\n  return function (r) {\n    var keys = Object.keys(r);\n    var len = keys.length;\n    var f = getRecordConstructor(keys);\n    var fr = F.map(r[keys[0]], f);\n\n    for (var i = 1; i < len; i++) {\n      fr = F.ap(fr, r[keys[i]]);\n    }\n\n    return fr;\n  };\n}\n\nexports.sequenceS = sequenceS;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bind = exports.chainFirst = void 0;\n\nfunction chainFirst(M) {\n  return function (f) {\n    return function (first) {\n      return M.chain(first, function (a) {\n        return M.map(f(a), function () {\n          return a;\n        });\n      });\n    };\n  };\n}\n\nexports.chainFirst = chainFirst;\n\nfunction bind(M) {\n  return function (name, f) {\n    return function (ma) {\n      return M.chain(ma, function (a) {\n        return M.map(f(a), function (b) {\n          var _a;\n\n          return Object.assign({}, a, (_a = {}, _a[name] = b, _a));\n        });\n      });\n    };\n  };\n}\n\nexports.bind = bind;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.eqDate = exports.eqNumber = exports.eqString = exports.eqBoolean = exports.eq = exports.strictEqual = exports.getStructEq = exports.getTupleEq = exports.Contravariant = exports.getMonoid = exports.getSemigroup = exports.eqStrict = exports.URI = exports.contramap = exports.tuple = exports.struct = exports.fromEquals = void 0;\n\nvar function_1 = require(\"./function\"); // -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n\n/**\n * @category constructors\n * @since 2.0.0\n */\n\n\nvar fromEquals = function fromEquals(_equals) {\n  return {\n    equals: function equals(x, y) {\n      return x === y || _equals(x, y);\n    }\n  };\n};\n\nexports.fromEquals = fromEquals; // -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n\n/**\n * @category combinators\n * @since 2.10.0\n */\n\nvar struct = function struct(eqs) {\n  return exports.fromEquals(function (first, second) {\n    for (var key in eqs) {\n      if (!eqs[key].equals(first[key], second[key])) {\n        return false;\n      }\n    }\n\n    return true;\n  });\n};\n\nexports.struct = struct;\n/**\n * Given a tuple of `Eq`s returns a `Eq` for the tuple\n *\n * @example\n * import { tuple } from 'fp-ts/Eq'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import * as B from 'fp-ts/boolean'\n *\n * const E = tuple(S.Eq, N.Eq, B.Eq)\n * assert.strictEqual(E.equals(['a', 1, true], ['a', 1, true]), true)\n * assert.strictEqual(E.equals(['a', 1, true], ['b', 1, true]), false)\n * assert.strictEqual(E.equals(['a', 1, true], ['a', 2, true]), false)\n * assert.strictEqual(E.equals(['a', 1, true], ['a', 1, false]), false)\n *\n * @category combinators\n * @since 2.10.0\n */\n\nvar tuple = function tuple() {\n  var eqs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    eqs[_i] = arguments[_i];\n  }\n\n  return exports.fromEquals(function (first, second) {\n    return eqs.every(function (E, i) {\n      return E.equals(first[i], second[i]);\n    });\n  });\n};\n\nexports.tuple = tuple; // -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n\n/* istanbul ignore next */\n\nvar contramap_ = function contramap_(fa, f) {\n  return function_1.pipe(fa, exports.contramap(f));\n}; // -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n\n/**\n * @category Contravariant\n * @since 2.0.0\n */\n\n\nvar contramap = function contramap(f) {\n  return function (fa) {\n    return exports.fromEquals(function (x, y) {\n      return fa.equals(f(x), f(y));\n    });\n  };\n};\n\nexports.contramap = contramap; // -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n\n/**\n * @category instances\n * @since 2.0.0\n */\n\nexports.URI = 'Eq';\n/**\n * @category instances\n * @since 2.5.0\n */\n\nexports.eqStrict = {\n  equals: function equals(a, b) {\n    return a === b;\n  }\n};\nvar empty = {\n  equals: function equals() {\n    return true;\n  }\n};\n/**\n * @category instances\n * @since 2.10.0\n */\n\nvar getSemigroup = function getSemigroup() {\n  return {\n    concat: function concat(x, y) {\n      return exports.fromEquals(function (a, b) {\n        return x.equals(a, b) && y.equals(a, b);\n      });\n    }\n  };\n};\n\nexports.getSemigroup = getSemigroup;\n/**\n * @category instances\n * @since 2.6.0\n */\n\nvar getMonoid = function getMonoid() {\n  return {\n    concat: exports.getSemigroup().concat,\n    empty: empty\n  };\n};\n\nexports.getMonoid = getMonoid;\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Contravariant = {\n  URI: exports.URI,\n  contramap: contramap_\n}; // -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n\n/**\n * Use [`tuple`](#tuple) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\n\nexports.getTupleEq = exports.tuple;\n/**\n * Use [`struct`](#struct) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\n\nexports.getStructEq = exports.struct;\n/**\n * Use [`eqStrict`](#eqstrict) instead\n *\n * @since 2.0.0\n * @deprecated\n */\n\nexports.strictEqual = exports.eqStrict.equals;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nexports.eq = exports.Contravariant;\n/**\n * Use [`Eq`](./boolean.ts.html#eq) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nexports.eqBoolean = exports.eqStrict;\n/**\n * Use [`Eq`](./string.ts.html#eq) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nexports.eqString = exports.eqStrict;\n/**\n * Use [`Eq`](./number.ts.html#eq) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nexports.eqNumber = exports.eqStrict;\n/**\n * Use [`Eq`](./Date.ts.html#eq) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nexports.eqDate = {\n  equals: function equals(first, second) {\n    return first.valueOf() === second.valueOf();\n  }\n};","\"use strict\";\n/**\n * The `FromEither` type class represents those data types which support errors.\n *\n * @since 2.10.0\n */\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.filterOrElse = exports.chainEitherK = exports.fromEitherK = exports.chainOptionK = exports.fromOptionK = exports.fromPredicate = exports.fromOption = void 0;\n\nvar function_1 = require(\"./function\");\n\nvar _ = __importStar(require(\"./internal\"));\n\nfunction fromOption(F) {\n  return function (onNone) {\n    return function (ma) {\n      return F.fromEither(_.isNone(ma) ? _.left(onNone()) : _.right(ma.value));\n    };\n  };\n}\n\nexports.fromOption = fromOption;\n\nfunction fromPredicate(F) {\n  return function (predicate, onFalse) {\n    return function (a) {\n      return F.fromEither(predicate(a) ? _.right(a) : _.left(onFalse(a)));\n    };\n  };\n}\n\nexports.fromPredicate = fromPredicate;\n\nfunction fromOptionK(F) {\n  var fromOptionF = fromOption(F);\n  return function (onNone) {\n    var from = fromOptionF(onNone);\n    return function (f) {\n      return function_1.flow(f, from);\n    };\n  };\n}\n\nexports.fromOptionK = fromOptionK;\n\nfunction chainOptionK(F, M) {\n  var fromOptionKF = fromOptionK(F);\n  return function (onNone) {\n    var from = fromOptionKF(onNone);\n    return function (f) {\n      return function (ma) {\n        return M.chain(ma, from(f));\n      };\n    };\n  };\n}\n\nexports.chainOptionK = chainOptionK;\n\nfunction fromEitherK(F) {\n  return function (f) {\n    return function_1.flow(f, F.fromEither);\n  };\n}\n\nexports.fromEitherK = fromEitherK;\n\nfunction chainEitherK(F, M) {\n  var fromEitherKF = fromEitherK(F);\n  return function (f) {\n    return function (ma) {\n      return M.chain(ma, fromEitherKF(f));\n    };\n  };\n}\n\nexports.chainEitherK = chainEitherK;\n\nfunction filterOrElse(F, M) {\n  return function (predicate, onFalse) {\n    return function (ma) {\n      return M.chain(ma, function (a) {\n        return F.fromEither(predicate(a) ? _.right(a) : _.left(onFalse(a)));\n      });\n    };\n  };\n}\n\nexports.filterOrElse = filterOrElse;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFunctorComposition = exports.bindTo = exports.flap = exports.map = void 0;\n/**\n * A `Functor` is a type constructor which supports a mapping operation `map`.\n *\n * `map` can be used to turn functions `a -> b` into functions `f a -> f b` whose argument and return types use the type\n * constructor `f` to represent some computational context.\n *\n * Instances must satisfy the following laws:\n *\n * 1. Identity: `F.map(fa, a => a) <-> fa`\n * 2. Composition: `F.map(fa, a => bc(ab(a))) <-> F.map(F.map(fa, ab), bc)`\n *\n * @since 2.0.0\n */\n\nvar function_1 = require(\"./function\");\n\nfunction map(F, G) {\n  return function (f) {\n    return function (fa) {\n      return F.map(fa, function (ga) {\n        return G.map(ga, f);\n      });\n    };\n  };\n}\n\nexports.map = map;\n\nfunction flap(F) {\n  return function (a) {\n    return function (fab) {\n      return F.map(fab, function (f) {\n        return f(a);\n      });\n    };\n  };\n}\n\nexports.flap = flap;\n\nfunction bindTo(F) {\n  return function (name) {\n    return function (fa) {\n      return F.map(fa, function (a) {\n        var _a;\n\n        return _a = {}, _a[name] = a, _a;\n      });\n    };\n  };\n}\n\nexports.bindTo = bindTo;\n/** @deprecated */\n\nfunction getFunctorComposition(F, G) {\n  var _map = map(F, G);\n\n  return {\n    map: function map(fga, f) {\n      return function_1.pipe(fga, _map(f));\n    }\n  };\n}\n\nexports.getFunctorComposition = getFunctorComposition;","\"use strict\";\n/**\n * A `Magma` is a pair `(A, concat)` in which `A` is a non-empty set and `concat` is a binary operation on `A`\n *\n * See [Semigroup](https://gcanti.github.io/fp-ts/modules/Semigroup.ts.html) for some instances.\n *\n * @since 2.0.0\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.concatAll = exports.endo = exports.filterSecond = exports.filterFirst = exports.reverse = void 0; // -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n\n/**\n * The dual of a `Magma`, obtained by swapping the arguments of `concat`.\n *\n * @example\n * import { reverse, concatAll } from 'fp-ts/Magma'\n * import * as N from 'fp-ts/number'\n *\n * const subAll = concatAll(reverse(N.MagmaSub))(0)\n *\n * assert.deepStrictEqual(subAll([1, 2, 3]), 2)\n *\n * @category combinators\n * @since 2.11.0\n */\n\nvar reverse = function reverse(M) {\n  return {\n    concat: function concat(first, second) {\n      return M.concat(second, first);\n    }\n  };\n};\n\nexports.reverse = reverse;\n/**\n * @category combinators\n * @since 2.11.0\n */\n\nvar filterFirst = function filterFirst(predicate) {\n  return function (M) {\n    return {\n      concat: function concat(first, second) {\n        return predicate(first) ? M.concat(first, second) : second;\n      }\n    };\n  };\n};\n\nexports.filterFirst = filterFirst;\n/**\n * @category combinators\n * @since 2.11.0\n */\n\nvar filterSecond = function filterSecond(predicate) {\n  return function (M) {\n    return {\n      concat: function concat(first, second) {\n        return predicate(second) ? M.concat(first, second) : first;\n      }\n    };\n  };\n};\n\nexports.filterSecond = filterSecond;\n/**\n * @category combinators\n * @since 2.11.0\n */\n\nvar endo = function endo(f) {\n  return function (M) {\n    return {\n      concat: function concat(first, second) {\n        return M.concat(f(first), f(second));\n      }\n    };\n  };\n};\n\nexports.endo = endo; // -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n\n/**\n * Given a sequence of `as`, concat them and return the total.\n *\n * If `as` is empty, return the provided `startWith` value.\n *\n * @example\n * import { concatAll } from 'fp-ts/Magma'\n * import * as N from 'fp-ts/number'\n *\n * const subAll = concatAll(N.MagmaSub)(0)\n *\n * assert.deepStrictEqual(subAll([1, 2, 3]), -6)\n *\n * @since 2.11.0\n */\n\nvar concatAll = function concatAll(M) {\n  return function (startWith) {\n    return function (as) {\n      return as.reduce(function (a, acc) {\n        return M.concat(a, acc);\n      }, startWith);\n    };\n  };\n};\n\nexports.concatAll = concatAll;","\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fromEither = exports.MonadThrow = exports.throwError = exports.Witherable = exports.wilt = exports.wither = exports.Traversable = exports.sequence = exports.traverse = exports.Filterable = exports.partitionMap = exports.partition = exports.filterMap = exports.filter = exports.Compactable = exports.separate = exports.compact = exports.Extend = exports.extend = exports.Alternative = exports.guard = exports.Zero = exports.zero = exports.Alt = exports.alt = exports.altW = exports.Foldable = exports.reduceRight = exports.foldMap = exports.reduce = exports.Monad = exports.Chain = exports.chain = exports.Applicative = exports.Apply = exports.ap = exports.Pointed = exports.of = exports.Functor = exports.map = exports.getMonoid = exports.getOrd = exports.getEq = exports.getShow = exports.URI = exports.getRight = exports.getLeft = exports.fromPredicate = exports.some = exports.none = void 0;\nexports.getLastMonoid = exports.getFirstMonoid = exports.getApplyMonoid = exports.getApplySemigroup = exports.option = exports.mapNullable = exports.getRefinement = exports.sequenceArray = exports.traverseArray = exports.traverseArrayWithIndex = exports.traverseReadonlyArrayWithIndex = exports.traverseReadonlyNonEmptyArrayWithIndex = exports.ApT = exports.apS = exports.bind = exports.bindTo = exports.Do = exports.exists = exports.elem = exports.toUndefined = exports.toNullable = exports.chainNullableK = exports.fromNullableK = exports.tryCatchK = exports.tryCatch = exports.fromNullable = exports.chainEitherK = exports.fromEitherK = exports.duplicate = exports.chainFirst = exports.flatten = exports.apSecond = exports.apFirst = exports.flap = exports.getOrElse = exports.getOrElseW = exports.fold = exports.match = exports.foldW = exports.matchW = exports.isNone = exports.isSome = exports.FromEither = void 0;\n\nvar Applicative_1 = require(\"./Applicative\");\n\nvar Apply_1 = require(\"./Apply\");\n\nvar Chain_1 = require(\"./Chain\");\n\nvar FromEither_1 = require(\"./FromEither\");\n\nvar function_1 = require(\"./function\");\n\nvar Functor_1 = require(\"./Functor\");\n\nvar _ = __importStar(require(\"./internal\"));\n\nvar Predicate_1 = require(\"./Predicate\");\n\nvar Semigroup_1 = require(\"./Semigroup\");\n\nvar Separated_1 = require(\"./Separated\");\n\nvar Witherable_1 = require(\"./Witherable\");\n\nvar Zero_1 = require(\"./Zero\"); // -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n\n/**\n * `None` doesn't have a constructor, instead you can use it directly as a value. Represents a missing value.\n *\n * @category constructors\n * @since 2.0.0\n */\n\n\nexports.none = _.none;\n/**\n * Constructs a `Some`. Represents an optional value that exists.\n *\n * @category constructors\n * @since 2.0.0\n */\n\nexports.some = _.some;\n\nfunction fromPredicate(predicate) {\n  return function (a) {\n    return predicate(a) ? exports.some(a) : exports.none;\n  };\n}\n\nexports.fromPredicate = fromPredicate;\n/**\n * Returns the `Left` value of an `Either` if possible.\n *\n * @example\n * import { getLeft, none, some } from 'fp-ts/Option'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(getLeft(right(1)), none)\n * assert.deepStrictEqual(getLeft(left('a')), some('a'))\n *\n * @category constructors\n * @since 2.0.0\n */\n\nvar getLeft = function getLeft(ma) {\n  return ma._tag === 'Right' ? exports.none : exports.some(ma.left);\n};\n\nexports.getLeft = getLeft;\n/**\n * Returns the `Right` value of an `Either` if possible.\n *\n * @example\n * import { getRight, none, some } from 'fp-ts/Option'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(getRight(right(1)), some(1))\n * assert.deepStrictEqual(getRight(left('a')), none)\n *\n * @category constructors\n * @since 2.0.0\n */\n\nvar getRight = function getRight(ma) {\n  return ma._tag === 'Left' ? exports.none : exports.some(ma.right);\n};\n\nexports.getRight = getRight; // -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n\nvar _map = function _map(fa, f) {\n  return function_1.pipe(fa, exports.map(f));\n};\n\nvar _ap = function _ap(fab, fa) {\n  return function_1.pipe(fab, exports.ap(fa));\n};\n\nvar _chain = function _chain(ma, f) {\n  return function_1.pipe(ma, exports.chain(f));\n};\n\nvar _reduce = function _reduce(fa, b, f) {\n  return function_1.pipe(fa, exports.reduce(b, f));\n};\n\nvar _foldMap = function _foldMap(M) {\n  var foldMapM = exports.foldMap(M);\n  return function (fa, f) {\n    return function_1.pipe(fa, foldMapM(f));\n  };\n};\n\nvar _reduceRight = function _reduceRight(fa, b, f) {\n  return function_1.pipe(fa, exports.reduceRight(b, f));\n};\n\nvar _traverse = function _traverse(F) {\n  var traverseF = exports.traverse(F);\n  return function (ta, f) {\n    return function_1.pipe(ta, traverseF(f));\n  };\n};\n/* istanbul ignore next */\n\n\nvar _alt = function _alt(fa, that) {\n  return function_1.pipe(fa, exports.alt(that));\n};\n\nvar _filter = function _filter(fa, predicate) {\n  return function_1.pipe(fa, exports.filter(predicate));\n};\n/* istanbul ignore next */\n\n\nvar _filterMap = function _filterMap(fa, f) {\n  return function_1.pipe(fa, exports.filterMap(f));\n};\n/* istanbul ignore next */\n\n\nvar _extend = function _extend(wa, f) {\n  return function_1.pipe(wa, exports.extend(f));\n};\n/* istanbul ignore next */\n\n\nvar _partition = function _partition(fa, predicate) {\n  return function_1.pipe(fa, exports.partition(predicate));\n};\n/* istanbul ignore next */\n\n\nvar _partitionMap = function _partitionMap(fa, f) {\n  return function_1.pipe(fa, exports.partitionMap(f));\n}; // -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n\n/**\n * @category instances\n * @since 2.0.0\n */\n\n\nexports.URI = 'Option';\n/**\n * @category instances\n * @since 2.0.0\n */\n\nvar getShow = function getShow(S) {\n  return {\n    show: function show(ma) {\n      return exports.isNone(ma) ? 'none' : \"some(\" + S.show(ma.value) + \")\";\n    }\n  };\n};\n\nexports.getShow = getShow;\n/**\n * @example\n * import { none, some, getEq } from 'fp-ts/Option'\n * import * as N from 'fp-ts/number'\n *\n * const E = getEq(N.Eq)\n * assert.strictEqual(E.equals(none, none), true)\n * assert.strictEqual(E.equals(none, some(1)), false)\n * assert.strictEqual(E.equals(some(1), none), false)\n * assert.strictEqual(E.equals(some(1), some(2)), false)\n * assert.strictEqual(E.equals(some(1), some(1)), true)\n *\n * @category instances\n * @since 2.0.0\n */\n\nvar getEq = function getEq(E) {\n  return {\n    equals: function equals(x, y) {\n      return x === y || (exports.isNone(x) ? exports.isNone(y) : exports.isNone(y) ? false : E.equals(x.value, y.value));\n    }\n  };\n};\n\nexports.getEq = getEq;\n/**\n * The `Ord` instance allows `Option` values to be compared with\n * `compare`, whenever there is an `Ord` instance for\n * the type the `Option` contains.\n *\n * `None` is considered to be less than any `Some` value.\n *\n *\n * @example\n * import { none, some, getOrd } from 'fp-ts/Option'\n * import * as N from 'fp-ts/number'\n *\n * const O = getOrd(N.Ord)\n * assert.strictEqual(O.compare(none, none), 0)\n * assert.strictEqual(O.compare(none, some(1)), -1)\n * assert.strictEqual(O.compare(some(1), none), 1)\n * assert.strictEqual(O.compare(some(1), some(2)), -1)\n * assert.strictEqual(O.compare(some(1), some(1)), 0)\n *\n * @category instances\n * @since 2.0.0\n */\n\nvar getOrd = function getOrd(O) {\n  return {\n    equals: exports.getEq(O).equals,\n    compare: function compare(x, y) {\n      return x === y ? 0 : exports.isSome(x) ? exports.isSome(y) ? O.compare(x.value, y.value) : 1 : -1;\n    }\n  };\n};\n\nexports.getOrd = getOrd;\n/**\n * Monoid returning the left-most non-`None` value. If both operands are `Some`s then the inner values are\n * concatenated using the provided `Semigroup`\n *\n * | x       | y       | concat(x, y)       |\n * | ------- | ------- | ------------------ |\n * | none    | none    | none               |\n * | some(a) | none    | some(a)            |\n * | none    | some(b) | some(b)            |\n * | some(a) | some(b) | some(concat(a, b)) |\n *\n * @example\n * import { getMonoid, some, none } from 'fp-ts/Option'\n * import { SemigroupSum } from 'fp-ts/number'\n *\n * const M = getMonoid(SemigroupSum)\n * assert.deepStrictEqual(M.concat(none, none), none)\n * assert.deepStrictEqual(M.concat(some(1), none), some(1))\n * assert.deepStrictEqual(M.concat(none, some(1)), some(1))\n * assert.deepStrictEqual(M.concat(some(1), some(2)), some(3))\n *\n * @category instances\n * @since 2.0.0\n */\n\nvar getMonoid = function getMonoid(S) {\n  return {\n    concat: function concat(x, y) {\n      return exports.isNone(x) ? y : exports.isNone(y) ? x : exports.some(S.concat(x.value, y.value));\n    },\n    empty: exports.none\n  };\n};\n\nexports.getMonoid = getMonoid;\n/**\n * @category instance operations\n * @since 2.0.0\n */\n\nvar map = function map(f) {\n  return function (fa) {\n    return exports.isNone(fa) ? exports.none : exports.some(f(fa.value));\n  };\n};\n\nexports.map = map;\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Functor = {\n  URI: exports.URI,\n  map: _map\n};\n/**\n * @category instance operations\n * @since 2.7.0\n */\n\nexports.of = exports.some;\n/**\n * @category instances\n * @since 2.10.0\n */\n\nexports.Pointed = {\n  URI: exports.URI,\n  of: exports.of\n};\n/**\n * @category instance operations\n * @since 2.0.0\n */\n\nvar ap = function ap(fa) {\n  return function (fab) {\n    return exports.isNone(fab) ? exports.none : exports.isNone(fa) ? exports.none : exports.some(fab.value(fa.value));\n  };\n};\n\nexports.ap = ap;\n/**\n * @category instances\n * @since 2.10.0\n */\n\nexports.Apply = {\n  URI: exports.URI,\n  map: _map,\n  ap: _ap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Applicative = {\n  URI: exports.URI,\n  map: _map,\n  ap: _ap,\n  of: exports.of\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category instance operations\n * @since 2.0.0\n */\n\nvar chain = function chain(f) {\n  return function (ma) {\n    return exports.isNone(ma) ? exports.none : f(ma.value);\n  };\n};\n\nexports.chain = chain;\n/**\n * @category instances\n * @since 2.10.0\n */\n\nexports.Chain = {\n  URI: exports.URI,\n  map: _map,\n  ap: _ap,\n  chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Monad = {\n  URI: exports.URI,\n  map: _map,\n  ap: _ap,\n  of: exports.of,\n  chain: _chain\n};\n/**\n * @category instance operations\n * @since 2.0.0\n */\n\nvar reduce = function reduce(b, f) {\n  return function (fa) {\n    return exports.isNone(fa) ? b : f(b, fa.value);\n  };\n};\n\nexports.reduce = reduce;\n/**\n * @category instance operations\n * @since 2.0.0\n */\n\nvar foldMap = function foldMap(M) {\n  return function (f) {\n    return function (fa) {\n      return exports.isNone(fa) ? M.empty : f(fa.value);\n    };\n  };\n};\n\nexports.foldMap = foldMap;\n/**\n * @category instance operations\n * @since 2.0.0\n */\n\nvar reduceRight = function reduceRight(b, f) {\n  return function (fa) {\n    return exports.isNone(fa) ? b : f(fa.value, b);\n  };\n};\n\nexports.reduceRight = reduceRight;\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Foldable = {\n  URI: exports.URI,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight\n};\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category instance operations\n * @since 2.9.0\n */\n\nvar altW = function altW(that) {\n  return function (fa) {\n    return exports.isNone(fa) ? that() : fa;\n  };\n};\n\nexports.altW = altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * In case of `Option` returns the left-most non-`None` value.\n *\n * @example\n * import * as O from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     O.some('a'),\n *     O.alt(() => O.some('b'))\n *   ),\n *   O.some('a')\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     O.none,\n *     O.alt(() => O.some('b'))\n *   ),\n *   O.some('b')\n * )\n *\n * @category instance operations\n * @since 2.0.0\n */\n\nexports.alt = exports.altW;\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Alt = {\n  URI: exports.URI,\n  map: _map,\n  alt: _alt\n};\n/**\n * @category instance operations\n * @since 2.7.0\n */\n\nvar zero = function zero() {\n  return exports.none;\n};\n\nexports.zero = zero;\n/**\n * @category instances\n * @since 2.11.0\n */\n\nexports.Zero = {\n  URI: exports.URI,\n  zero: exports.zero\n};\n/**\n * @category constructors\n * @since 2.11.0\n */\n\nexports.guard = /*#__PURE__*/Zero_1.guard(exports.Zero, exports.Pointed);\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Alternative = {\n  URI: exports.URI,\n  map: _map,\n  ap: _ap,\n  of: exports.of,\n  alt: _alt,\n  zero: exports.zero\n};\n/**\n * @category instance operations\n * @since 2.0.0\n */\n\nvar extend = function extend(f) {\n  return function (wa) {\n    return exports.isNone(wa) ? exports.none : exports.some(f(wa));\n  };\n};\n\nexports.extend = extend;\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Extend = {\n  URI: exports.URI,\n  map: _map,\n  extend: _extend\n};\n/**\n * @category instance operations\n * @since 2.0.0\n */\n\nexports.compact = /*#__PURE__*/exports.chain(function_1.identity);\nvar defaultSeparated = /*#__PURE__*/Separated_1.separated(exports.none, exports.none);\n/**\n * @category instance operations\n * @since 2.0.0\n */\n\nvar separate = function separate(ma) {\n  return exports.isNone(ma) ? defaultSeparated : Separated_1.separated(exports.getLeft(ma.value), exports.getRight(ma.value));\n};\n\nexports.separate = separate;\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Compactable = {\n  URI: exports.URI,\n  compact: exports.compact,\n  separate: exports.separate\n};\n/**\n * @category instance operations\n * @since 2.0.0\n */\n\nvar filter = function filter(predicate) {\n  return function (fa) {\n    return exports.isNone(fa) ? exports.none : predicate(fa.value) ? fa : exports.none;\n  };\n};\n\nexports.filter = filter;\n/**\n * @category instance operations\n * @since 2.0.0\n */\n\nvar filterMap = function filterMap(f) {\n  return function (fa) {\n    return exports.isNone(fa) ? exports.none : f(fa.value);\n  };\n};\n\nexports.filterMap = filterMap;\n/**\n * @category instance operations\n * @since 2.0.0\n */\n\nvar partition = function partition(predicate) {\n  return function (fa) {\n    return Separated_1.separated(_filter(fa, Predicate_1.not(predicate)), _filter(fa, predicate));\n  };\n};\n\nexports.partition = partition;\n/**\n * @category instance operations\n * @since 2.0.0\n */\n\nvar partitionMap = function partitionMap(f) {\n  return function_1.flow(exports.map(f), exports.separate);\n};\n\nexports.partitionMap = partitionMap;\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Filterable = {\n  URI: exports.URI,\n  map: _map,\n  compact: exports.compact,\n  separate: exports.separate,\n  filter: _filter,\n  filterMap: _filterMap,\n  partition: _partition,\n  partitionMap: _partitionMap\n};\n/**\n * @category instance operations\n * @since 2.6.3\n */\n\nvar traverse = function traverse(F) {\n  return function (f) {\n    return function (ta) {\n      return exports.isNone(ta) ? F.of(exports.none) : F.map(f(ta.value), exports.some);\n    };\n  };\n};\n\nexports.traverse = traverse;\n/**\n * @category instance operations\n * @since 2.6.3\n */\n\nvar sequence = function sequence(F) {\n  return function (ta) {\n    return exports.isNone(ta) ? F.of(exports.none) : F.map(ta.value, exports.some);\n  };\n};\n\nexports.sequence = sequence;\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Traversable = {\n  URI: exports.URI,\n  map: _map,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  traverse: _traverse,\n  sequence: exports.sequence\n};\n\nvar _wither = /*#__PURE__*/Witherable_1.witherDefault(exports.Traversable, exports.Compactable);\n\nvar _wilt = /*#__PURE__*/Witherable_1.wiltDefault(exports.Traversable, exports.Compactable);\n/**\n * @category instance operations\n * @since 2.6.5\n */\n\n\nvar wither = function wither(F) {\n  var _witherF = _wither(F);\n\n  return function (f) {\n    return function (fa) {\n      return _witherF(fa, f);\n    };\n  };\n};\n\nexports.wither = wither;\n/**\n * @category instance operations\n * @since 2.6.5\n */\n\nvar wilt = function wilt(F) {\n  var _wiltF = _wilt(F);\n\n  return function (f) {\n    return function (fa) {\n      return _wiltF(fa, f);\n    };\n  };\n};\n\nexports.wilt = wilt;\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Witherable = {\n  URI: exports.URI,\n  map: _map,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  traverse: _traverse,\n  sequence: exports.sequence,\n  compact: exports.compact,\n  separate: exports.separate,\n  filter: _filter,\n  filterMap: _filterMap,\n  partition: _partition,\n  partitionMap: _partitionMap,\n  wither: _wither,\n  wilt: _wilt\n};\n/**\n * @category instance operations\n * @since 2.7.0\n */\n\nvar throwError = function throwError() {\n  return exports.none;\n};\n\nexports.throwError = throwError;\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.MonadThrow = {\n  URI: exports.URI,\n  map: _map,\n  ap: _ap,\n  of: exports.of,\n  chain: _chain,\n  throwError: exports.throwError\n};\n/**\n * Transforms an `Either` to an `Option` discarding the error.\n *\n * Alias of [getRight](#getright)\n *\n * @category natural transformations\n * @since 2.0.0\n */\n\nexports.fromEither = exports.getRight;\n/**\n * @category instances\n * @since 2.11.0\n */\n\nexports.FromEither = {\n  URI: exports.URI,\n  fromEither: exports.fromEither\n}; // -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n\n/**\n * Returns `true` if the option is an instance of `Some`, `false` otherwise.\n *\n * @example\n * import { some, none, isSome } from 'fp-ts/Option'\n *\n * assert.strictEqual(isSome(some(1)), true)\n * assert.strictEqual(isSome(none), false)\n *\n * @category refinements\n * @since 2.0.0\n */\n\nexports.isSome = _.isSome;\n/**\n * Returns `true` if the option is `None`, `false` otherwise.\n *\n * @example\n * import { some, none, isNone } from 'fp-ts/Option'\n *\n * assert.strictEqual(isNone(some(1)), false)\n * assert.strictEqual(isNone(none), true)\n *\n * @category refinements\n * @since 2.0.0\n */\n\nvar isNone = function isNone(fa) {\n  return fa._tag === 'None';\n};\n\nexports.isNone = isNone; // -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n\n/**\n * Less strict version of [`match`](#match).\n *\n * @category destructors\n * @since 2.10.0\n */\n\nvar matchW = function matchW(onNone, onSome) {\n  return function (ma) {\n    return exports.isNone(ma) ? onNone() : onSome(ma.value);\n  };\n};\n\nexports.matchW = matchW;\n/**\n * Alias of [`matchW`](#matchw).\n *\n * @category destructors\n * @since 2.10.0\n */\n\nexports.foldW = exports.matchW;\n/**\n * Takes a (lazy) default value, a function, and an `Option` value, if the `Option` value is `None` the default value is\n * returned, otherwise the function is applied to the value inside the `Some` and the result is returned.\n *\n * @example\n * import { some, none, match } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     match(() => 'a none', a => `a some containing ${a}`)\n *   ),\n *   'a some containing 1'\n * )\n *\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     match(() => 'a none', a => `a some containing ${a}`)\n *   ),\n *   'a none'\n * )\n *\n * @category destructors\n * @since 2.10.0\n */\n\nexports.match = exports.matchW;\n/**\n * Alias of [`match`](#match).\n *\n * @category destructors\n * @since 2.0.0\n */\n\nexports.fold = exports.match;\n/**\n * Less strict version of [`getOrElse`](#getorelse).\n *\n * @category destructors\n * @since 2.6.0\n */\n\nvar getOrElseW = function getOrElseW(onNone) {\n  return function (ma) {\n    return exports.isNone(ma) ? onNone() : ma.value;\n  };\n};\n\nexports.getOrElseW = getOrElseW;\n/**\n * Extracts the value out of the structure, if it exists. Otherwise returns the given default value\n *\n * @example\n * import { some, none, getOrElse } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     getOrElse(() => 0)\n *   ),\n *   1\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     getOrElse(() => 0)\n *   ),\n *   0\n * )\n *\n * @category destructors\n * @since 2.0.0\n */\n\nexports.getOrElse = exports.getOrElseW; // -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\n\nexports.flap = /*#__PURE__*/Functor_1.flap(exports.Functor);\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexports.apFirst = /*#__PURE__*/Apply_1.apFirst(exports.Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexports.apSecond = /*#__PURE__*/Apply_1.apSecond(exports.Apply);\n/**\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexports.flatten = exports.compact;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexports.chainFirst = /*#__PURE__*/Chain_1.chainFirst(exports.Chain);\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexports.duplicate = /*#__PURE__*/exports.extend(function_1.identity);\n/**\n * @category combinators\n * @since 2.11.0\n */\n\nexports.fromEitherK = /*#__PURE__*/FromEither_1.fromEitherK(exports.FromEither);\n/**\n * @category combinators\n * @since 2.11.0\n */\n\nexports.chainEitherK = /*#__PURE__*/FromEither_1.chainEitherK(exports.FromEither, exports.Chain); // -------------------------------------------------------------------------------------\n// interop\n// -------------------------------------------------------------------------------------\n\n/**\n * Constructs a new `Option` from a nullable type. If the value is `null` or `undefined`, returns `None`, otherwise\n * returns the value wrapped in a `Some`.\n *\n * @example\n * import { none, some, fromNullable } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(fromNullable(undefined), none)\n * assert.deepStrictEqual(fromNullable(null), none)\n * assert.deepStrictEqual(fromNullable(1), some(1))\n *\n * @category interop\n * @since 2.0.0\n */\n\nvar fromNullable = function fromNullable(a) {\n  return a == null ? exports.none : exports.some(a);\n};\n\nexports.fromNullable = fromNullable;\n/**\n * Transforms an exception into an `Option`. If `f` throws, returns `None`, otherwise returns the output wrapped in a\n * `Some`.\n *\n * See also [`tryCatchK`](#trycatchk).\n *\n * @example\n * import { none, some, tryCatch } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   tryCatch(() => {\n *     throw new Error()\n *   }),\n *   none\n * )\n * assert.deepStrictEqual(tryCatch(() => 1), some(1))\n *\n * @category interop\n * @since 2.0.0\n */\n\nvar tryCatch = function tryCatch(f) {\n  try {\n    return exports.some(f());\n  } catch (e) {\n    return exports.none;\n  }\n};\n\nexports.tryCatch = tryCatch;\n/**\n * Converts a function that may throw to one returning a `Option`.\n *\n * @category interop\n * @since 2.10.0\n */\n\nvar tryCatchK = function tryCatchK(f) {\n  return function () {\n    var a = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      a[_i] = arguments[_i];\n    }\n\n    return exports.tryCatch(function () {\n      return f.apply(void 0, a);\n    });\n  };\n};\n\nexports.tryCatchK = tryCatchK;\n/**\n * Returns a *smart constructor* from a function that returns a nullable value.\n *\n * @example\n * import { fromNullableK, none, some } from 'fp-ts/Option'\n *\n * const f = (s: string): number | undefined => {\n *   const n = parseFloat(s)\n *   return isNaN(n) ? undefined : n\n * }\n *\n * const g = fromNullableK(f)\n *\n * assert.deepStrictEqual(g('1'), some(1))\n * assert.deepStrictEqual(g('a'), none)\n *\n * @category interop\n * @since 2.9.0\n */\n\nvar fromNullableK = function fromNullableK(f) {\n  return function_1.flow(f, exports.fromNullable);\n};\n\nexports.fromNullableK = fromNullableK;\n/**\n * This is `chain` + `fromNullable`, useful when working with optional values.\n *\n * @example\n * import { some, none, fromNullable, chainNullableK } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Employee {\n *   readonly company?: {\n *     readonly address?: {\n *       readonly street?: {\n *         readonly name?: string\n *       }\n *     }\n *   }\n * }\n *\n * const employee1: Employee = { company: { address: { street: { name: 'high street' } } } }\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     fromNullable(employee1.company),\n *     chainNullableK(company => company.address),\n *     chainNullableK(address => address.street),\n *     chainNullableK(street => street.name)\n *   ),\n *   some('high street')\n * )\n *\n * const employee2: Employee = { company: { address: { street: {} } } }\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     fromNullable(employee2.company),\n *     chainNullableK(company => company.address),\n *     chainNullableK(address => address.street),\n *     chainNullableK(street => street.name)\n *   ),\n *   none\n * )\n *\n * @category interop\n * @since 2.9.0\n */\n\nvar chainNullableK = function chainNullableK(f) {\n  return function (ma) {\n    return exports.isNone(ma) ? exports.none : exports.fromNullable(f(ma.value));\n  };\n};\n\nexports.chainNullableK = chainNullableK;\n/**\n * Extracts the value out of the structure, if it exists. Otherwise returns `null`.\n *\n * @example\n * import { some, none, toNullable } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     toNullable\n *   ),\n *   1\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     toNullable\n *   ),\n *   null\n * )\n *\n * @category interop\n * @since 2.0.0\n */\n\nexports.toNullable = /*#__PURE__*/exports.match(function_1.constNull, function_1.identity);\n/**\n * Extracts the value out of the structure, if it exists. Otherwise returns `undefined`.\n *\n * @example\n * import { some, none, toUndefined } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     toUndefined\n *   ),\n *   1\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     toUndefined\n *   ),\n *   undefined\n * )\n *\n * @category interop\n * @since 2.0.0\n */\n\nexports.toUndefined = /*#__PURE__*/exports.match(function_1.constUndefined, function_1.identity);\n\nfunction elem(E) {\n  return function (a, ma) {\n    if (ma === undefined) {\n      var elemE_1 = elem(E);\n      return function (ma) {\n        return elemE_1(a, ma);\n      };\n    }\n\n    return exports.isNone(ma) ? false : E.equals(a, ma.value);\n  };\n}\n\nexports.elem = elem;\n/**\n * Returns `true` if the predicate is satisfied by the wrapped value\n *\n * @example\n * import { some, none, exists } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     exists(n => n > 0)\n *   ),\n *   true\n * )\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     exists(n => n > 1)\n *   ),\n *   false\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     exists(n => n > 0)\n *   ),\n *   false\n * )\n *\n * @since 2.0.0\n */\n\nvar exists = function exists(predicate) {\n  return function (ma) {\n    return exports.isNone(ma) ? false : predicate(ma.value);\n  };\n};\n\nexports.exists = exists; // -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n\n/**\n * @since 2.9.0\n */\n\nexports.Do = /*#__PURE__*/exports.of(_.emptyRecord);\n/**\n * @since 2.8.0\n */\n\nexports.bindTo = /*#__PURE__*/Functor_1.bindTo(exports.Functor);\n/**\n * @since 2.8.0\n */\n\nexports.bind = /*#__PURE__*/Chain_1.bind(exports.Chain); // -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n\n/**\n * @since 2.8.0\n */\n\nexports.apS = /*#__PURE__*/Apply_1.apS(exports.Apply); // -------------------------------------------------------------------------------------\n// sequence T\n// -------------------------------------------------------------------------------------\n\n/**\n * @since 2.11.0\n */\n\nexports.ApT = /*#__PURE__*/exports.of(_.emptyReadonlyArray); // -------------------------------------------------------------------------------------\n// array utils\n// -------------------------------------------------------------------------------------\n\n/**\n * Equivalent to `ReadonlyNonEmptyArray#traverseWithIndex(Applicative)`.\n *\n * @since 2.11.0\n */\n\nvar traverseReadonlyNonEmptyArrayWithIndex = function traverseReadonlyNonEmptyArrayWithIndex(f) {\n  return function (as) {\n    var o = f(0, _.head(as));\n\n    if (exports.isNone(o)) {\n      return exports.none;\n    }\n\n    var out = [o.value];\n\n    for (var i = 1; i < as.length; i++) {\n      var o_1 = f(i, as[i]);\n\n      if (exports.isNone(o_1)) {\n        return exports.none;\n      }\n\n      out.push(o_1.value);\n    }\n\n    return exports.some(out);\n  };\n};\n\nexports.traverseReadonlyNonEmptyArrayWithIndex = traverseReadonlyNonEmptyArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(Applicative)`.\n *\n * @since 2.11.0\n */\n\nvar traverseReadonlyArrayWithIndex = function traverseReadonlyArrayWithIndex(f) {\n  var g = exports.traverseReadonlyNonEmptyArrayWithIndex(f);\n  return function (as) {\n    return _.isNonEmpty(as) ? g(as) : exports.ApT;\n  };\n};\n\nexports.traverseReadonlyArrayWithIndex = traverseReadonlyArrayWithIndex;\n/**\n * @since 2.9.0\n */\n\nexports.traverseArrayWithIndex = exports.traverseReadonlyArrayWithIndex;\n/**\n * @since 2.9.0\n */\n\nvar traverseArray = function traverseArray(f) {\n  return exports.traverseReadonlyArrayWithIndex(function (_, a) {\n    return f(a);\n  });\n};\n\nexports.traverseArray = traverseArray;\n/**\n * @since 2.9.0\n */\n\nexports.sequenceArray = /*#__PURE__*/exports.traverseArray(function_1.identity); // -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n// tslint:disable: deprecation\n\n/**\n * Use `Refinement` module instead.\n *\n * @since 2.0.0\n * @deprecated\n */\n\nfunction getRefinement(getOption) {\n  return function (a) {\n    return exports.isSome(getOption(a));\n  };\n}\n\nexports.getRefinement = getRefinement;\n/**\n * Use [`chainNullableK`](#chainnullablek) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\n\nexports.mapNullable = exports.chainNullableK;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nexports.option = {\n  URI: exports.URI,\n  map: _map,\n  of: exports.of,\n  ap: _ap,\n  chain: _chain,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  traverse: _traverse,\n  sequence: exports.sequence,\n  zero: exports.zero,\n  alt: _alt,\n  extend: _extend,\n  compact: exports.compact,\n  separate: exports.separate,\n  filter: _filter,\n  filterMap: _filterMap,\n  partition: _partition,\n  partitionMap: _partitionMap,\n  wither: _wither,\n  wilt: _wilt,\n  throwError: exports.throwError\n};\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getapplysemigroup) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nexports.getApplySemigroup = /*#__PURE__*/Apply_1.getApplySemigroup(exports.Apply);\n/**\n * Use [`getApplicativeMonoid`](./Applicative.ts.html#getapplicativemonoid) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nexports.getApplyMonoid = /*#__PURE__*/Applicative_1.getApplicativeMonoid(exports.Applicative);\n/**\n * Use\n *\n * ```ts\n * import { first } from 'fp-ts/Semigroup'\n * import { getMonoid } from 'fp-ts/Option'\n *\n * getMonoid(first())\n * ```\n *\n * instead.\n *\n * Monoid returning the left-most non-`None` value\n *\n * | x       | y       | concat(x, y) |\n * | ------- | ------- | ------------ |\n * | none    | none    | none         |\n * | some(a) | none    | some(a)      |\n * | none    | some(b) | some(b)      |\n * | some(a) | some(b) | some(a)      |\n *\n * @example\n * import { getFirstMonoid, some, none } from 'fp-ts/Option'\n *\n * const M = getFirstMonoid<number>()\n * assert.deepStrictEqual(M.concat(none, none), none)\n * assert.deepStrictEqual(M.concat(some(1), none), some(1))\n * assert.deepStrictEqual(M.concat(none, some(2)), some(2))\n * assert.deepStrictEqual(M.concat(some(1), some(2)), some(1))\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nvar getFirstMonoid = function getFirstMonoid() {\n  return exports.getMonoid(Semigroup_1.first());\n};\n\nexports.getFirstMonoid = getFirstMonoid;\n/**\n * Use\n *\n * ```ts\n * import { last } from 'fp-ts/Semigroup'\n * import { getMonoid } from 'fp-ts/Option'\n *\n * getMonoid(last())\n * ```\n *\n * instead.\n *\n * Monoid returning the right-most non-`None` value\n *\n * | x       | y       | concat(x, y) |\n * | ------- | ------- | ------------ |\n * | none    | none    | none         |\n * | some(a) | none    | some(a)      |\n * | none    | some(b) | some(b)      |\n * | some(a) | some(b) | some(b)      |\n *\n * @example\n * import { getLastMonoid, some, none } from 'fp-ts/Option'\n *\n * const M = getLastMonoid<number>()\n * assert.deepStrictEqual(M.concat(none, none), none)\n * assert.deepStrictEqual(M.concat(some(1), none), some(1))\n * assert.deepStrictEqual(M.concat(none, some(2)), some(2))\n * assert.deepStrictEqual(M.concat(some(1), some(2)), some(2))\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nvar getLastMonoid = function getLastMonoid() {\n  return exports.getMonoid(Semigroup_1.last());\n};\n\nexports.getLastMonoid = getLastMonoid;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ordDate = exports.ordNumber = exports.ordString = exports.ordBoolean = exports.ord = exports.getDualOrd = exports.getTupleOrd = exports.between = exports.clamp = exports.max = exports.min = exports.geq = exports.leq = exports.gt = exports.lt = exports.equals = exports.trivial = exports.Contravariant = exports.getMonoid = exports.getSemigroup = exports.URI = exports.contramap = exports.reverse = exports.tuple = exports.fromCompare = exports.equalsDefault = void 0;\n\nvar Eq_1 = require(\"./Eq\");\n\nvar function_1 = require(\"./function\"); // -------------------------------------------------------------------------------------\n// defaults\n// -------------------------------------------------------------------------------------\n\n/**\n * @category defaults\n * @since 2.10.0\n */\n\n\nvar equalsDefault = function equalsDefault(compare) {\n  return function (first, second) {\n    return first === second || compare(first, second) === 0;\n  };\n};\n\nexports.equalsDefault = equalsDefault; // -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n\n/**\n * @category constructors\n * @since 2.0.0\n */\n\nvar fromCompare = function fromCompare(_compare) {\n  return {\n    equals: exports.equalsDefault(_compare),\n    compare: function compare(first, second) {\n      return first === second ? 0 : _compare(first, second);\n    }\n  };\n};\n\nexports.fromCompare = fromCompare; // -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n\n/**\n * Given a tuple of `Ord`s returns an `Ord` for the tuple.\n *\n * @example\n * import { tuple } from 'fp-ts/Ord'\n * import * as B from 'fp-ts/boolean'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n *\n * const O = tuple(S.Ord, N.Ord, B.Ord)\n * assert.strictEqual(O.compare(['a', 1, true], ['b', 2, true]), -1)\n * assert.strictEqual(O.compare(['a', 1, true], ['a', 2, true]), -1)\n * assert.strictEqual(O.compare(['a', 1, true], ['a', 1, false]), 1)\n *\n * @category combinators\n * @since 2.10.0\n */\n\nvar tuple = function tuple() {\n  var ords = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    ords[_i] = arguments[_i];\n  }\n\n  return exports.fromCompare(function (first, second) {\n    var i = 0;\n\n    for (; i < ords.length - 1; i++) {\n      var r = ords[i].compare(first[i], second[i]);\n\n      if (r !== 0) {\n        return r;\n      }\n    }\n\n    return ords[i].compare(first[i], second[i]);\n  });\n};\n\nexports.tuple = tuple;\n/**\n * @category combinators\n * @since 2.10.0\n */\n\nvar reverse = function reverse(O) {\n  return exports.fromCompare(function (first, second) {\n    return O.compare(second, first);\n  });\n};\n\nexports.reverse = reverse; // -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n\n/* istanbul ignore next */\n\nvar contramap_ = function contramap_(fa, f) {\n  return function_1.pipe(fa, exports.contramap(f));\n}; // -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n\n/**\n * @category Contravariant\n * @since 2.0.0\n */\n\n\nvar contramap = function contramap(f) {\n  return function (fa) {\n    return exports.fromCompare(function (first, second) {\n      return fa.compare(f(first), f(second));\n    });\n  };\n};\n\nexports.contramap = contramap; // -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n\n/**\n * @category instances\n * @since 2.0.0\n */\n\nexports.URI = 'Ord';\n/**\n * @category instances\n * @since 2.0.0\n */\n\nvar getSemigroup = function getSemigroup() {\n  return {\n    concat: function concat(first, second) {\n      return exports.fromCompare(function (a, b) {\n        var ox = first.compare(a, b);\n        return ox !== 0 ? ox : second.compare(a, b);\n      });\n    }\n  };\n};\n\nexports.getSemigroup = getSemigroup;\n/**\n * Returns a `Monoid` such that:\n *\n * - its `concat(ord1, ord2)` operation will order first by `ord1`, and then by `ord2`\n * - its `empty` value is an `Ord` that always considers compared elements equal\n *\n * @example\n * import { sort } from 'fp-ts/Array'\n * import { contramap, reverse, getMonoid } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as B from 'fp-ts/boolean'\n * import { pipe } from 'fp-ts/function'\n * import { concatAll } from 'fp-ts/Monoid'\n * import * as N from 'fp-ts/number'\n *\n * interface User {\n *   readonly id: number\n *   readonly name: string\n *   readonly age: number\n *   readonly rememberMe: boolean\n * }\n *\n * const byName = pipe(\n *   S.Ord,\n *   contramap((p: User) => p.name)\n * )\n *\n * const byAge = pipe(\n *   N.Ord,\n *   contramap((p: User) => p.age)\n * )\n *\n * const byRememberMe = pipe(\n *   B.Ord,\n *   contramap((p: User) => p.rememberMe)\n * )\n *\n * const M = getMonoid<User>()\n *\n * const users: Array<User> = [\n *   { id: 1, name: 'Guido', age: 47, rememberMe: false },\n *   { id: 2, name: 'Guido', age: 46, rememberMe: true },\n *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },\n *   { id: 4, name: 'Giulio', age: 44, rememberMe: true }\n * ]\n *\n * // sort by name, then by age, then by `rememberMe`\n * const O1 = concatAll(M)([byName, byAge, byRememberMe])\n * assert.deepStrictEqual(sort(O1)(users), [\n *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },\n *   { id: 4, name: 'Giulio', age: 44, rememberMe: true },\n *   { id: 2, name: 'Guido', age: 46, rememberMe: true },\n *   { id: 1, name: 'Guido', age: 47, rememberMe: false }\n * ])\n *\n * // now `rememberMe = true` first, then by name, then by age\n * const O2 = concatAll(M)([reverse(byRememberMe), byName, byAge])\n * assert.deepStrictEqual(sort(O2)(users), [\n *   { id: 4, name: 'Giulio', age: 44, rememberMe: true },\n *   { id: 2, name: 'Guido', age: 46, rememberMe: true },\n *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },\n *   { id: 1, name: 'Guido', age: 47, rememberMe: false }\n * ])\n *\n * @category instances\n * @since 2.4.0\n */\n\nvar getMonoid = function getMonoid() {\n  return {\n    concat: exports.getSemigroup().concat,\n    empty: exports.fromCompare(function () {\n      return 0;\n    })\n  };\n};\n\nexports.getMonoid = getMonoid;\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Contravariant = {\n  URI: exports.URI,\n  contramap: contramap_\n}; // -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n\n/**\n * @since 2.11.0\n */\n\nexports.trivial = {\n  equals: function_1.constTrue,\n  compare: /*#__PURE__*/function_1.constant(0)\n};\n/**\n * @since 2.11.0\n */\n\nvar equals = function equals(O) {\n  return function (second) {\n    return function (first) {\n      return first === second || O.compare(first, second) === 0;\n    };\n  };\n};\n\nexports.equals = equals; // TODO: curry in v3\n\n/**\n * Test whether one value is _strictly less than_ another\n *\n * @since 2.0.0\n */\n\nvar lt = function lt(O) {\n  return function (first, second) {\n    return O.compare(first, second) === -1;\n  };\n};\n\nexports.lt = lt; // TODO: curry in v3\n\n/**\n * Test whether one value is _strictly greater than_ another\n *\n * @since 2.0.0\n */\n\nvar gt = function gt(O) {\n  return function (first, second) {\n    return O.compare(first, second) === 1;\n  };\n};\n\nexports.gt = gt; // TODO: curry in v3\n\n/**\n * Test whether one value is _non-strictly less than_ another\n *\n * @since 2.0.0\n */\n\nvar leq = function leq(O) {\n  return function (first, second) {\n    return O.compare(first, second) !== 1;\n  };\n};\n\nexports.leq = leq; // TODO: curry in v3\n\n/**\n * Test whether one value is _non-strictly greater than_ another\n *\n * @since 2.0.0\n */\n\nvar geq = function geq(O) {\n  return function (first, second) {\n    return O.compare(first, second) !== -1;\n  };\n};\n\nexports.geq = geq; // TODO: curry in v3\n\n/**\n * Take the minimum of two values. If they are considered equal, the first argument is chosen\n *\n * @since 2.0.0\n */\n\nvar min = function min(O) {\n  return function (first, second) {\n    return first === second || O.compare(first, second) < 1 ? first : second;\n  };\n};\n\nexports.min = min; // TODO: curry in v3\n\n/**\n * Take the maximum of two values. If they are considered equal, the first argument is chosen\n *\n * @since 2.0.0\n */\n\nvar max = function max(O) {\n  return function (first, second) {\n    return first === second || O.compare(first, second) > -1 ? first : second;\n  };\n};\n\nexports.max = max;\n/**\n * Clamp a value between a minimum and a maximum\n *\n * @since 2.0.0\n */\n\nvar clamp = function clamp(O) {\n  var minO = exports.min(O);\n  var maxO = exports.max(O);\n  return function (low, hi) {\n    return function (a) {\n      return maxO(minO(a, hi), low);\n    };\n  };\n};\n\nexports.clamp = clamp;\n/**\n * Test whether a value is between a minimum and a maximum (inclusive)\n *\n * @since 2.0.0\n */\n\nvar between = function between(O) {\n  var ltO = exports.lt(O);\n  var gtO = exports.gt(O);\n  return function (low, hi) {\n    return function (a) {\n      return ltO(a, low) || gtO(a, hi) ? false : true;\n    };\n  };\n};\n\nexports.between = between; // -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n// tslint:disable: deprecation\n\n/**\n * Use [`tuple`](#tuple) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\n\nexports.getTupleOrd = exports.tuple;\n/**\n * Use [`reverse`](#reverse) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\n\nexports.getDualOrd = exports.reverse;\n/**\n * Use [`Contravariant`](#contravariant) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nexports.ord = exports.Contravariant; // default compare for primitive types\n\nfunction compare(first, second) {\n  return first < second ? -1 : first > second ? 1 : 0;\n}\n\nvar strictOrd = {\n  equals: Eq_1.eqStrict.equals,\n  compare: compare\n};\n/**\n * Use [`Ord`](./boolean.ts.html#ord) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nexports.ordBoolean = strictOrd;\n/**\n * Use [`Ord`](./string.ts.html#ord) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nexports.ordString = strictOrd;\n/**\n * Use [`Ord`](./number.ts.html#ord) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nexports.ordNumber = strictOrd;\n/**\n * Use [`Ord`](./Date.ts.html#ord) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nexports.ordDate = /*#__PURE__*/function_1.pipe(exports.ordNumber, /*#__PURE__*/exports.contramap(function (date) {\n  return date.valueOf();\n}));","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.and = exports.or = exports.not = exports.Contravariant = exports.getMonoidAll = exports.getSemigroupAll = exports.getMonoidAny = exports.getSemigroupAny = exports.URI = exports.contramap = void 0;\n\nvar function_1 = require(\"./function\"); // -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n\n\nvar contramap_ = function contramap_(predicate, f) {\n  return function_1.pipe(predicate, exports.contramap(f));\n};\n/**\n * @category Contravariant\n * @since 2.11.0\n */\n\n\nvar contramap = function contramap(f) {\n  return function (predicate) {\n    return function_1.flow(f, predicate);\n  };\n};\n\nexports.contramap = contramap; // -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n\n/**\n * @category instances\n * @since 2.11.0\n */\n\nexports.URI = 'Predicate';\n/**\n * @category instances\n * @since 2.11.0\n */\n\nvar getSemigroupAny = function getSemigroupAny() {\n  return {\n    concat: function concat(first, second) {\n      return function_1.pipe(first, exports.or(second));\n    }\n  };\n};\n\nexports.getSemigroupAny = getSemigroupAny;\n/**\n * @category instances\n * @since 2.11.0\n */\n\nvar getMonoidAny = function getMonoidAny() {\n  return {\n    concat: exports.getSemigroupAny().concat,\n    empty: function_1.constFalse\n  };\n};\n\nexports.getMonoidAny = getMonoidAny;\n/**\n * @category instances\n * @since 2.11.0\n */\n\nvar getSemigroupAll = function getSemigroupAll() {\n  return {\n    concat: function concat(first, second) {\n      return function_1.pipe(first, exports.and(second));\n    }\n  };\n};\n\nexports.getSemigroupAll = getSemigroupAll;\n/**\n * @category instances\n * @since 2.11.0\n */\n\nvar getMonoidAll = function getMonoidAll() {\n  return {\n    concat: exports.getSemigroupAll().concat,\n    empty: function_1.constTrue\n  };\n};\n\nexports.getMonoidAll = getMonoidAll;\n/**\n * @category instances\n * @since 2.11.0\n */\n\nexports.Contravariant = {\n  URI: exports.URI,\n  contramap: contramap_\n}; // -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n\n/**\n * @since 2.11.0\n */\n\nvar not = function not(predicate) {\n  return function (a) {\n    return !predicate(a);\n  };\n};\n\nexports.not = not;\n/**\n * @since 2.11.0\n */\n\nvar or = function or(second) {\n  return function (first) {\n    return function (a) {\n      return first(a) || second(a);\n    };\n  };\n};\n\nexports.or = or;\n/**\n * @since 2.11.0\n */\n\nvar and = function and(second) {\n  return function (first) {\n    return function (a) {\n      return first(a) && second(a);\n    };\n  };\n};\n\nexports.and = and;","\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.semigroupProduct = exports.semigroupSum = exports.semigroupString = exports.getFunctionSemigroup = exports.semigroupAny = exports.semigroupAll = exports.fold = exports.getIntercalateSemigroup = exports.getMeetSemigroup = exports.getJoinSemigroup = exports.getDualSemigroup = exports.getStructSemigroup = exports.getTupleSemigroup = exports.getFirstSemigroup = exports.getLastSemigroup = exports.getObjectSemigroup = exports.semigroupVoid = exports.concatAll = exports.last = exports.first = exports.intercalate = exports.tuple = exports.struct = exports.reverse = exports.constant = exports.max = exports.min = void 0;\n/**\n * If a type `A` can form a `Semigroup` it has an **associative** binary operation.\n *\n * ```ts\n * interface Semigroup<A> {\n *   readonly concat: (x: A, y: A) => A\n * }\n * ```\n *\n * Associativity means the following equality must hold for any choice of `x`, `y`, and `z`.\n *\n * ```ts\n * concat(x, concat(y, z)) = concat(concat(x, y), z)\n * ```\n *\n * A common example of a semigroup is the type `string` with the operation `+`.\n *\n * ```ts\n * import { Semigroup } from 'fp-ts/Semigroup'\n *\n * const semigroupString: Semigroup<string> = {\n *   concat: (x, y) => x + y\n * }\n *\n * const x = 'x'\n * const y = 'y'\n * const z = 'z'\n *\n * semigroupString.concat(x, y) // 'xy'\n *\n * semigroupString.concat(x, semigroupString.concat(y, z)) // 'xyz'\n *\n * semigroupString.concat(semigroupString.concat(x, y), z) // 'xyz'\n * ```\n *\n * *Adapted from https://typelevel.org/cats*\n *\n * @since 2.0.0\n */\n\nvar function_1 = require(\"./function\");\n\nvar _ = __importStar(require(\"./internal\"));\n\nvar M = __importStar(require(\"./Magma\"));\n\nvar Or = __importStar(require(\"./Ord\")); // -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n\n/**\n * Get a semigroup where `concat` will return the minimum, based on the provided order.\n *\n * @example\n * import * as N from 'fp-ts/number'\n * import * as S from 'fp-ts/Semigroup'\n *\n * const S1 = S.min(N.Ord)\n *\n * assert.deepStrictEqual(S1.concat(1, 2), 1)\n *\n * @category constructors\n * @since 2.10.0\n */\n\n\nvar min = function min(O) {\n  return {\n    concat: Or.min(O)\n  };\n};\n\nexports.min = min;\n/**\n * Get a semigroup where `concat` will return the maximum, based on the provided order.\n *\n * @example\n * import * as N from 'fp-ts/number'\n * import * as S from 'fp-ts/Semigroup'\n *\n * const S1 = S.max(N.Ord)\n *\n * assert.deepStrictEqual(S1.concat(1, 2), 2)\n *\n * @category constructors\n * @since 2.10.0\n */\n\nvar max = function max(O) {\n  return {\n    concat: Or.max(O)\n  };\n};\n\nexports.max = max;\n/**\n * @category constructors\n * @since 2.10.0\n */\n\nvar constant = function constant(a) {\n  return {\n    concat: function concat() {\n      return a;\n    }\n  };\n};\n\nexports.constant = constant; // -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n\n/**\n * The dual of a `Semigroup`, obtained by swapping the arguments of `concat`.\n *\n * @example\n * import { reverse } from 'fp-ts/Semigroup'\n * import * as S from 'fp-ts/string'\n *\n * assert.deepStrictEqual(reverse(S.Semigroup).concat('a', 'b'), 'ba')\n *\n * @category combinators\n * @since 2.10.0\n */\n\nexports.reverse = M.reverse;\n/**\n * Given a struct of semigroups returns a semigroup for the struct.\n *\n * @example\n * import { struct } from 'fp-ts/Semigroup'\n * import * as N from 'fp-ts/number'\n *\n * interface Point {\n *   readonly x: number\n *   readonly y: number\n * }\n *\n * const S = struct<Point>({\n *   x: N.SemigroupSum,\n *   y: N.SemigroupSum\n * })\n *\n * assert.deepStrictEqual(S.concat({ x: 1, y: 2 }, { x: 3, y: 4 }), { x: 4, y: 6 })\n *\n * @category combinators\n * @since 2.10.0\n */\n\nvar struct = function struct(semigroups) {\n  return {\n    concat: function concat(first, second) {\n      var r = {};\n\n      for (var k in semigroups) {\n        if (_.has.call(semigroups, k)) {\n          r[k] = semigroups[k].concat(first[k], second[k]);\n        }\n      }\n\n      return r;\n    }\n  };\n};\n\nexports.struct = struct;\n/**\n * Given a tuple of semigroups returns a semigroup for the tuple.\n *\n * @example\n * import { tuple } from 'fp-ts/Semigroup'\n * import * as B from 'fp-ts/boolean'\n * import * as N from 'fp-ts/number'\n * import * as S from 'fp-ts/string'\n *\n * const S1 = tuple(S.Semigroup, N.SemigroupSum)\n * assert.deepStrictEqual(S1.concat(['a', 1], ['b', 2]), ['ab', 3])\n *\n * const S2 = tuple(S.Semigroup, N.SemigroupSum, B.SemigroupAll)\n * assert.deepStrictEqual(S2.concat(['a', 1, true], ['b', 2, false]), ['ab', 3, false])\n *\n * @category combinators\n * @since 2.10.0\n */\n\nvar tuple = function tuple() {\n  var semigroups = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    semigroups[_i] = arguments[_i];\n  }\n\n  return {\n    concat: function concat(first, second) {\n      return semigroups.map(function (s, i) {\n        return s.concat(first[i], second[i]);\n      });\n    }\n  };\n};\n\nexports.tuple = tuple;\n/**\n * Between each pair of elements insert `middle`.\n *\n * @example\n * import { intercalate } from 'fp-ts/Semigroup'\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * const S1 = pipe(S.Semigroup, intercalate(' + '))\n *\n * assert.strictEqual(S1.concat('a', 'b'), 'a + b')\n *\n * @category combinators\n * @since 2.10.0\n */\n\nvar intercalate = function intercalate(middle) {\n  return function (S) {\n    return {\n      concat: function concat(x, y) {\n        return S.concat(x, S.concat(middle, y));\n      }\n    };\n  };\n};\n\nexports.intercalate = intercalate; // -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n\n/**\n * Always return the first argument.\n *\n * @example\n * import * as S from 'fp-ts/Semigroup'\n *\n * assert.deepStrictEqual(S.first<number>().concat(1, 2), 1)\n *\n * @category instances\n * @since 2.10.0\n */\n\nvar first = function first() {\n  return {\n    concat: function_1.identity\n  };\n};\n\nexports.first = first;\n/**\n * Always return the last argument.\n *\n * @example\n * import * as S from 'fp-ts/Semigroup'\n *\n * assert.deepStrictEqual(S.last<number>().concat(1, 2), 2)\n *\n * @category instances\n * @since 2.10.0\n */\n\nvar last = function last() {\n  return {\n    concat: function concat(_, y) {\n      return y;\n    }\n  };\n};\n\nexports.last = last; // -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n\n/**\n * Given a sequence of `as`, concat them and return the total.\n *\n * If `as` is empty, return the provided `startWith` value.\n *\n * @example\n * import { concatAll } from 'fp-ts/Semigroup'\n * import * as N from 'fp-ts/number'\n *\n * const sum = concatAll(N.SemigroupSum)(0)\n *\n * assert.deepStrictEqual(sum([1, 2, 3]), 6)\n * assert.deepStrictEqual(sum([]), 0)\n *\n * @since 2.10.0\n */\n\nexports.concatAll = M.concatAll; // -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n\n/**\n * Use `void` module instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nexports.semigroupVoid = exports.constant(undefined);\n/**\n * Use [`getAssignSemigroup`](./struct.ts.html#getAssignSemigroup) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nvar getObjectSemigroup = function getObjectSemigroup() {\n  return {\n    concat: function concat(first, second) {\n      return Object.assign({}, first, second);\n    }\n  };\n};\n\nexports.getObjectSemigroup = getObjectSemigroup;\n/**\n * Use [`last`](#last) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nexports.getLastSemigroup = exports.last;\n/**\n * Use [`first`](#first) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nexports.getFirstSemigroup = exports.first;\n/**\n * Use [`tuple`](#tuple) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\n\nexports.getTupleSemigroup = exports.tuple;\n/**\n * Use [`struct`](#struct) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\n\nexports.getStructSemigroup = exports.struct;\n/**\n * Use [`reverse`](#reverse) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\n\nexports.getDualSemigroup = exports.reverse;\n/**\n * Use [`max`](#max) instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\n\nexports.getJoinSemigroup = exports.max;\n/**\n * Use [`min`](#min) instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\n\nexports.getMeetSemigroup = exports.min;\n/**\n * Use [`intercalate`](#intercalate) instead.\n *\n * @category combinators\n * @since 2.5.0\n * @deprecated\n */\n\nexports.getIntercalateSemigroup = exports.intercalate;\n\nfunction fold(S) {\n  var concatAllS = exports.concatAll(S);\n  return function (startWith, as) {\n    return as === undefined ? concatAllS(startWith) : concatAllS(startWith)(as);\n  };\n}\n\nexports.fold = fold;\n/**\n * Use [`SemigroupAll`](./boolean.ts.html#SemigroupAll) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nexports.semigroupAll = {\n  concat: function concat(x, y) {\n    return x && y;\n  }\n};\n/**\n * Use [`SemigroupAny`](./boolean.ts.html#SemigroupAny) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nexports.semigroupAny = {\n  concat: function concat(x, y) {\n    return x || y;\n  }\n};\n/**\n * Use [`getSemigroup`](./function.ts.html#getSemigroup) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nexports.getFunctionSemigroup = function_1.getSemigroup;\n/**\n * Use [`Semigroup`](./string.ts.html#Semigroup) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nexports.semigroupString = {\n  concat: function concat(x, y) {\n    return x + y;\n  }\n};\n/**\n * Use [`SemigroupSum`](./number.ts.html#SemigroupSum) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nexports.semigroupSum = {\n  concat: function concat(x, y) {\n    return x + y;\n  }\n};\n/**\n * Use [`SemigroupProduct`](./number.ts.html#SemigroupProduct) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nexports.semigroupProduct = {\n  concat: function concat(x, y) {\n    return x * y;\n  }\n};","\"use strict\";\n/**\n * ```ts\n * interface Separated<E, A> {\n *    readonly left: E\n *    readonly right: A\n * }\n * ```\n *\n * Represents a result of separating a whole into two parts.\n *\n * @since 2.10.0\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.right = exports.left = exports.flap = exports.Functor = exports.Bifunctor = exports.URI = exports.bimap = exports.mapLeft = exports.map = exports.separated = void 0;\n\nvar function_1 = require(\"./function\");\n\nvar Functor_1 = require(\"./Functor\"); // -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n\n/**\n * @category constructors\n * @since 2.10.0\n */\n\n\nvar separated = function separated(left, right) {\n  return {\n    left: left,\n    right: right\n  };\n};\n\nexports.separated = separated; // -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n\nvar _map = function _map(fa, f) {\n  return function_1.pipe(fa, exports.map(f));\n};\n\nvar _mapLeft = function _mapLeft(fa, f) {\n  return function_1.pipe(fa, exports.mapLeft(f));\n};\n\nvar _bimap = function _bimap(fa, g, f) {\n  return function_1.pipe(fa, exports.bimap(g, f));\n}; // -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.10.0\n */\n\n\nvar map = function map(f) {\n  return function (fa) {\n    return exports.separated(exports.left(fa), f(exports.right(fa)));\n  };\n};\n\nexports.map = map;\n/**\n * Map a function over the first type argument of a bifunctor.\n *\n * @category Bifunctor\n * @since 2.10.0\n */\n\nvar mapLeft = function mapLeft(f) {\n  return function (fa) {\n    return exports.separated(f(exports.left(fa)), exports.right(fa));\n  };\n};\n\nexports.mapLeft = mapLeft;\n/**\n * Map a pair of functions over the two type arguments of the bifunctor.\n *\n * @category Bifunctor\n * @since 2.10.0\n */\n\nvar bimap = function bimap(f, g) {\n  return function (fa) {\n    return exports.separated(f(exports.left(fa)), g(exports.right(fa)));\n  };\n};\n\nexports.bimap = bimap; // -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n\n/**\n * @category instances\n * @since 2.10.0\n */\n\nexports.URI = 'Separated';\n/**\n * @category instances\n * @since 2.10.0\n */\n\nexports.Bifunctor = {\n  URI: exports.URI,\n  mapLeft: _mapLeft,\n  bimap: _bimap\n};\n/**\n * @category instances\n * @since 2.10.0\n */\n\nexports.Functor = {\n  URI: exports.URI,\n  map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\n\nexports.flap = /*#__PURE__*/Functor_1.flap(exports.Functor); // -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n\n/**\n * @since 2.10.0\n */\n\nvar left = function left(s) {\n  return s.left;\n};\n\nexports.left = left;\n/**\n * @since 2.10.0\n */\n\nvar right = function right(s) {\n  return s.right;\n};\n\nexports.right = right;","\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.filterE = exports.witherDefault = exports.wiltDefault = void 0;\n\nvar _ = __importStar(require(\"./internal\"));\n\nfunction wiltDefault(T, C) {\n  return function (F) {\n    var traverseF = T.traverse(F);\n    return function (wa, f) {\n      return F.map(traverseF(wa, f), C.separate);\n    };\n  };\n}\n\nexports.wiltDefault = wiltDefault;\n\nfunction witherDefault(T, C) {\n  return function (F) {\n    var traverseF = T.traverse(F);\n    return function (wa, f) {\n      return F.map(traverseF(wa, f), C.compact);\n    };\n  };\n}\n\nexports.witherDefault = witherDefault;\n\nfunction filterE(W) {\n  return function (F) {\n    var witherF = W.wither(F);\n    return function (predicate) {\n      return function (ga) {\n        return witherF(ga, function (a) {\n          return F.map(predicate(a), function (b) {\n            return b ? _.some(a) : _.none;\n          });\n        });\n      };\n    };\n  };\n}\n\nexports.filterE = filterE;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.guard = void 0;\n\nfunction guard(F, P) {\n  return function (b) {\n    return b ? P.of(undefined) : F.zero();\n  };\n}\n\nexports.guard = guard;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getEndomorphismMonoid = exports.not = exports.SK = exports.hole = exports.pipe = exports.untupled = exports.tupled = exports.absurd = exports.decrement = exports.increment = exports.tuple = exports.flow = exports.flip = exports.constVoid = exports.constUndefined = exports.constNull = exports.constFalse = exports.constTrue = exports.constant = exports.unsafeCoerce = exports.identity = exports.apply = exports.getRing = exports.getSemiring = exports.getMonoid = exports.getSemigroup = exports.getBooleanAlgebra = void 0; // -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n\n/**\n * @category instances\n * @since 2.10.0\n */\n\nvar getBooleanAlgebra = function getBooleanAlgebra(B) {\n  return function () {\n    return {\n      meet: function meet(x, y) {\n        return function (a) {\n          return B.meet(x(a), y(a));\n        };\n      },\n      join: function join(x, y) {\n        return function (a) {\n          return B.join(x(a), y(a));\n        };\n      },\n      zero: function zero() {\n        return B.zero;\n      },\n      one: function one() {\n        return B.one;\n      },\n      implies: function implies(x, y) {\n        return function (a) {\n          return B.implies(x(a), y(a));\n        };\n      },\n      not: function not(x) {\n        return function (a) {\n          return B.not(x(a));\n        };\n      }\n    };\n  };\n};\n\nexports.getBooleanAlgebra = getBooleanAlgebra;\n/**\n * Unary functions form a semigroup as long as you can provide a semigroup for the codomain.\n *\n * @example\n * import { Predicate, getSemigroup } from 'fp-ts/function'\n * import * as B from 'fp-ts/boolean'\n *\n * const f: Predicate<number> = (n) => n <= 2\n * const g: Predicate<number> = (n) => n >= 0\n *\n * const S1 = getSemigroup(B.SemigroupAll)<number>()\n *\n * assert.deepStrictEqual(S1.concat(f, g)(1), true)\n * assert.deepStrictEqual(S1.concat(f, g)(3), false)\n *\n * const S2 = getSemigroup(B.SemigroupAny)<number>()\n *\n * assert.deepStrictEqual(S2.concat(f, g)(1), true)\n * assert.deepStrictEqual(S2.concat(f, g)(3), true)\n *\n * @category instances\n * @since 2.10.0\n */\n\nvar getSemigroup = function getSemigroup(S) {\n  return function () {\n    return {\n      concat: function concat(f, g) {\n        return function (a) {\n          return S.concat(f(a), g(a));\n        };\n      }\n    };\n  };\n};\n\nexports.getSemigroup = getSemigroup;\n/**\n * Unary functions form a monoid as long as you can provide a monoid for the codomain.\n *\n * @example\n * import { Predicate } from 'fp-ts/Predicate'\n * import { getMonoid } from 'fp-ts/function'\n * import * as B from 'fp-ts/boolean'\n *\n * const f: Predicate<number> = (n) => n <= 2\n * const g: Predicate<number> = (n) => n >= 0\n *\n * const M1 = getMonoid(B.MonoidAll)<number>()\n *\n * assert.deepStrictEqual(M1.concat(f, g)(1), true)\n * assert.deepStrictEqual(M1.concat(f, g)(3), false)\n *\n * const M2 = getMonoid(B.MonoidAny)<number>()\n *\n * assert.deepStrictEqual(M2.concat(f, g)(1), true)\n * assert.deepStrictEqual(M2.concat(f, g)(3), true)\n *\n * @category instances\n * @since 2.10.0\n */\n\nvar getMonoid = function getMonoid(M) {\n  var getSemigroupM = exports.getSemigroup(M);\n  return function () {\n    return {\n      concat: getSemigroupM().concat,\n      empty: function empty() {\n        return M.empty;\n      }\n    };\n  };\n};\n\nexports.getMonoid = getMonoid;\n/**\n * @category instances\n * @since 2.10.0\n */\n\nvar getSemiring = function getSemiring(S) {\n  return {\n    add: function add(f, g) {\n      return function (x) {\n        return S.add(f(x), g(x));\n      };\n    },\n    zero: function zero() {\n      return S.zero;\n    },\n    mul: function mul(f, g) {\n      return function (x) {\n        return S.mul(f(x), g(x));\n      };\n    },\n    one: function one() {\n      return S.one;\n    }\n  };\n};\n\nexports.getSemiring = getSemiring;\n/**\n * @category instances\n * @since 2.10.0\n */\n\nvar getRing = function getRing(R) {\n  var S = exports.getSemiring(R);\n  return {\n    add: S.add,\n    mul: S.mul,\n    one: S.one,\n    zero: S.zero,\n    sub: function sub(f, g) {\n      return function (x) {\n        return R.sub(f(x), g(x));\n      };\n    }\n  };\n};\n\nexports.getRing = getRing; // -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n\n/**\n * @since 2.11.0\n */\n\nvar apply = function apply(a) {\n  return function (f) {\n    return f(a);\n  };\n};\n\nexports.apply = apply;\n/**\n * @since 2.0.0\n */\n\nfunction identity(a) {\n  return a;\n}\n\nexports.identity = identity;\n/**\n * @since 2.0.0\n */\n\nexports.unsafeCoerce = identity;\n/**\n * @since 2.0.0\n */\n\nfunction constant(a) {\n  return function () {\n    return a;\n  };\n}\n\nexports.constant = constant;\n/**\n * A thunk that returns always `true`.\n *\n * @since 2.0.0\n */\n\nexports.constTrue = /*#__PURE__*/constant(true);\n/**\n * A thunk that returns always `false`.\n *\n * @since 2.0.0\n */\n\nexports.constFalse = /*#__PURE__*/constant(false);\n/**\n * A thunk that returns always `null`.\n *\n * @since 2.0.0\n */\n\nexports.constNull = /*#__PURE__*/constant(null);\n/**\n * A thunk that returns always `undefined`.\n *\n * @since 2.0.0\n */\n\nexports.constUndefined = /*#__PURE__*/constant(undefined);\n/**\n * A thunk that returns always `void`.\n *\n * @since 2.0.0\n */\n\nexports.constVoid = exports.constUndefined;\n/**\n * Flips the order of the arguments of a function of two arguments.\n *\n * @since 2.0.0\n */\n\nfunction flip(f) {\n  return function (b, a) {\n    return f(a, b);\n  };\n}\n\nexports.flip = flip;\n\nfunction flow(ab, bc, cd, de, ef, fg, gh, hi, ij) {\n  switch (arguments.length) {\n    case 1:\n      return ab;\n\n    case 2:\n      return function () {\n        return bc(ab.apply(this, arguments));\n      };\n\n    case 3:\n      return function () {\n        return cd(bc(ab.apply(this, arguments)));\n      };\n\n    case 4:\n      return function () {\n        return de(cd(bc(ab.apply(this, arguments))));\n      };\n\n    case 5:\n      return function () {\n        return ef(de(cd(bc(ab.apply(this, arguments)))));\n      };\n\n    case 6:\n      return function () {\n        return fg(ef(de(cd(bc(ab.apply(this, arguments))))));\n      };\n\n    case 7:\n      return function () {\n        return gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))));\n      };\n\n    case 8:\n      return function () {\n        return hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments))))))));\n      };\n\n    case 9:\n      return function () {\n        return ij(hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))))));\n      };\n  }\n\n  return;\n}\n\nexports.flow = flow;\n/**\n * @since 2.0.0\n */\n\nfunction tuple() {\n  var t = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    t[_i] = arguments[_i];\n  }\n\n  return t;\n}\n\nexports.tuple = tuple;\n/**\n * @since 2.0.0\n */\n\nfunction increment(n) {\n  return n + 1;\n}\n\nexports.increment = increment;\n/**\n * @since 2.0.0\n */\n\nfunction decrement(n) {\n  return n - 1;\n}\n\nexports.decrement = decrement;\n/**\n * @since 2.0.0\n */\n\nfunction absurd(_) {\n  throw new Error('Called `absurd` function which should be uncallable');\n}\n\nexports.absurd = absurd;\n/**\n * Creates a tupled version of this function: instead of `n` arguments, it accepts a single tuple argument.\n *\n * @example\n * import { tupled } from 'fp-ts/function'\n *\n * const add = tupled((x: number, y: number): number => x + y)\n *\n * assert.strictEqual(add([1, 2]), 3)\n *\n * @since 2.4.0\n */\n\nfunction tupled(f) {\n  return function (a) {\n    return f.apply(void 0, a);\n  };\n}\n\nexports.tupled = tupled;\n/**\n * Inverse function of `tupled`\n *\n * @since 2.4.0\n */\n\nfunction untupled(f) {\n  return function () {\n    var a = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      a[_i] = arguments[_i];\n    }\n\n    return f(a);\n  };\n}\n\nexports.untupled = untupled;\n\nfunction pipe(a, ab, bc, cd, de, ef, fg, gh, hi) {\n  switch (arguments.length) {\n    case 1:\n      return a;\n\n    case 2:\n      return ab(a);\n\n    case 3:\n      return bc(ab(a));\n\n    case 4:\n      return cd(bc(ab(a)));\n\n    case 5:\n      return de(cd(bc(ab(a))));\n\n    case 6:\n      return ef(de(cd(bc(ab(a)))));\n\n    case 7:\n      return fg(ef(de(cd(bc(ab(a))))));\n\n    case 8:\n      return gh(fg(ef(de(cd(bc(ab(a)))))));\n\n    case 9:\n      return hi(gh(fg(ef(de(cd(bc(ab(a))))))));\n\n    default:\n      var ret = arguments[0];\n\n      for (var i = 1; i < arguments.length; i++) {\n        ret = arguments[i](ret);\n      }\n\n      return ret;\n  }\n}\n\nexports.pipe = pipe;\n/**\n * Type hole simulation\n *\n * @since 2.7.0\n */\n\nexports.hole = absurd;\n/**\n * @since 2.11.0\n */\n\nvar SK = function SK(_, b) {\n  return b;\n};\n\nexports.SK = SK;\n/**\n * Use `Predicate` module instead.\n *\n * @since 2.0.0\n * @deprecated\n */\n\nfunction not(predicate) {\n  return function (a) {\n    return !predicate(a);\n  };\n}\n\nexports.not = not;\n/**\n * Use `Endomorphism` module instead.\n *\n * @category instances\n * @since 2.10.0\n * @deprecated\n */\n\nvar getEndomorphismMonoid = function getEndomorphismMonoid() {\n  return {\n    concat: function concat(first, second) {\n      return flow(first, second);\n    },\n    empty: identity\n  };\n};\n\nexports.getEndomorphismMonoid = getEndomorphismMonoid;","\"use strict\";\n\nvar __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {\n    to[j] = from[i];\n  }\n\n  return to;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fromReadonlyNonEmptyArray = exports.has = exports.emptyRecord = exports.emptyReadonlyArray = exports.tail = exports.head = exports.isNonEmpty = exports.singleton = exports.right = exports.left = exports.isRight = exports.isLeft = exports.some = exports.none = exports.isSome = exports.isNone = void 0; // -------------------------------------------------------------------------------------\n// Option\n// -------------------------------------------------------------------------------------\n\n/** @internal */\n\nvar isNone = function isNone(fa) {\n  return fa._tag === 'None';\n};\n\nexports.isNone = isNone;\n/** @internal */\n\nvar isSome = function isSome(fa) {\n  return fa._tag === 'Some';\n};\n\nexports.isSome = isSome;\n/** @internal */\n\nexports.none = {\n  _tag: 'None'\n};\n/** @internal */\n\nvar some = function some(a) {\n  return {\n    _tag: 'Some',\n    value: a\n  };\n};\n\nexports.some = some; // -------------------------------------------------------------------------------------\n// Either\n// -------------------------------------------------------------------------------------\n\n/** @internal */\n\nvar isLeft = function isLeft(ma) {\n  return ma._tag === 'Left';\n};\n\nexports.isLeft = isLeft;\n/** @internal */\n\nvar isRight = function isRight(ma) {\n  return ma._tag === 'Right';\n};\n\nexports.isRight = isRight;\n/** @internal */\n\nvar left = function left(e) {\n  return {\n    _tag: 'Left',\n    left: e\n  };\n};\n\nexports.left = left;\n/** @internal */\n\nvar right = function right(a) {\n  return {\n    _tag: 'Right',\n    right: a\n  };\n};\n\nexports.right = right; // -------------------------------------------------------------------------------------\n// ReadonlyNonEmptyArray\n// -------------------------------------------------------------------------------------\n\n/** @internal */\n\nvar singleton = function singleton(a) {\n  return [a];\n};\n\nexports.singleton = singleton;\n/** @internal */\n\nvar isNonEmpty = function isNonEmpty(as) {\n  return as.length > 0;\n};\n\nexports.isNonEmpty = isNonEmpty;\n/** @internal */\n\nvar head = function head(as) {\n  return as[0];\n};\n\nexports.head = head;\n/** @internal */\n\nvar tail = function tail(as) {\n  return as.slice(1);\n};\n\nexports.tail = tail; // -------------------------------------------------------------------------------------\n// empty\n// -------------------------------------------------------------------------------------\n\n/** @internal */\n\nexports.emptyReadonlyArray = [];\n/** @internal */\n\nexports.emptyRecord = {}; // -------------------------------------------------------------------------------------\n// Record\n// -------------------------------------------------------------------------------------\n\n/** @internal */\n\nexports.has = Object.prototype.hasOwnProperty; // -------------------------------------------------------------------------------------\n// NonEmptyArray\n// -------------------------------------------------------------------------------------\n\n/** @internal */\n\nvar fromReadonlyNonEmptyArray = function fromReadonlyNonEmptyArray(as) {\n  return __spreadArray([as[0]], as.slice(1));\n};\n\nexports.fromReadonlyNonEmptyArray = fromReadonlyNonEmptyArray;"],"names":["Object","defineProperty","exports","value","getApplicativeComposition","getApplicativeMonoid","Apply_1","function_1","Functor_1","F","f","getApplySemigroup","M","concat","empty","of","G","map","getFunctorComposition","_ap","ap","a","fgab","fga","pipe","sequenceS","sequenceT","apS","apSecond","apFirst","curried","n","acc","x","combined","Array","length","i","apply","fa","fab","gab","ga","A","second","first","b","name","fb","_a","assign","S","y","tupleConstructors","c","d","e","getTupleConstructor","len","hasOwnProperty","tuple","args","_i","arguments","fas","r","keys","getRecordConstructor","fr","bind","chainFirst","chain","ma","eqDate","eqNumber","eqString","eqBoolean","eq","strictEqual","getStructEq","getTupleEq","Contravariant","getMonoid","getSemigroup","eqStrict","URI","contramap","struct","fromEquals","_equals","equals","eqs","key","every","E","valueOf","__createBinding","this","create","o","m","k","k2","undefined","enumerable","get","__setModuleDefault","v","__importStar","mod","__esModule","result","prototype","call","filterOrElse","chainEitherK","fromEitherK","chainOptionK","fromOptionK","fromPredicate","fromOption","_","onNone","fromEither","isNone","left","right","fromOptionF","from","flow","predicate","onFalse","fromOptionKF","fromEitherKF","bindTo","flap","_map","concatAll","endo","filterSecond","filterFirst","reverse","startWith","as","reduce","MonadThrow","throwError","Witherable","wilt","wither","Traversable","sequence","traverse","Filterable","partitionMap","partition","filterMap","filter","Compactable","separate","compact","Extend","extend","Alternative","guard","Zero","zero","Alt","alt","altW","Foldable","reduceRight","foldMap","Monad","Chain","Applicative","Apply","Pointed","Functor","getOrd","getEq","getShow","getRight","getLeft","some","none","getLastMonoid","getFirstMonoid","getApplyMonoid","option","mapNullable","getRefinement","sequenceArray","traverseArray","traverseArrayWithIndex","traverseReadonlyArrayWithIndex","traverseReadonlyNonEmptyArrayWithIndex","ApT","Do","exists","elem","toUndefined","toNullable","chainNullableK","fromNullableK","tryCatchK","tryCatch","fromNullable","duplicate","flatten","getOrElse","getOrElseW","fold","match","foldW","matchW","isSome","FromEither","Applicative_1","Chain_1","FromEither_1","Predicate_1","Semigroup_1","Separated_1","Witherable_1","Zero_1","_tag","_chain","_reduce","_foldMap","foldMapM","_reduceRight","_traverse","traverseF","ta","_alt","that","_filter","_filterMap","_extend","wa","_partition","_partitionMap","show","O","compare","identity","defaultSeparated","separated","not","_wither","witherDefault","_wilt","wiltDefault","_witherF","_wiltF","onSome","constNull","constUndefined","elemE_1","emptyRecord","emptyReadonlyArray","head","out","o_1","push","g","isNonEmpty","getOption","last","ordDate","ordNumber","ordString","ordBoolean","ord","getDualOrd","getTupleOrd","between","clamp","max","min","geq","leq","gt","lt","trivial","fromCompare","equalsDefault","Eq_1","_compare","ords","ox","constTrue","constant","minO","maxO","low","hi","ltO","gtO","strictOrd","date","and","or","getMonoidAll","getSemigroupAll","getMonoidAny","getSemigroupAny","constFalse","semigroupProduct","semigroupSum","semigroupString","getFunctionSemigroup","semigroupAny","semigroupAll","getIntercalateSemigroup","getMeetSemigroup","getJoinSemigroup","getDualSemigroup","getStructSemigroup","getTupleSemigroup","getFirstSemigroup","getLastSemigroup","getObjectSemigroup","semigroupVoid","intercalate","Or","semigroups","has","s","middle","concatAllS","Bifunctor","bimap","mapLeft","filterE","T","C","W","witherF","P","getEndomorphismMonoid","SK","hole","untupled","tupled","absurd","decrement","increment","flip","constVoid","unsafeCoerce","getRing","getSemiring","getBooleanAlgebra","B","meet","join","one","implies","getSemigroupM","add","mul","R","sub","ab","bc","cd","de","ef","fg","gh","ij","Error","t","ret","__spreadArray","to","il","j","fromReadonlyNonEmptyArray","tail","singleton","isRight","isLeft","slice"],"sourceRoot":""}