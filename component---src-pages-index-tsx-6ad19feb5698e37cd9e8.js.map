{"version":3,"file":"component---src-pages-index-tsx-6ad19feb5698e37cd9e8.js","mappings":"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","sources":["webpack://gatsby-l10n-example/./node_modules/fp-ts/lib/Array.js","webpack://gatsby-l10n-example/./node_modules/fp-ts/lib/NonEmptyArray.js","webpack://gatsby-l10n-example/./node_modules/fp-ts/lib/ReadonlyArray.js","webpack://gatsby-l10n-example/./node_modules/fp-ts/lib/ReadonlyNonEmptyArray.js","webpack://gatsby-l10n-example/./node_modules/fp-ts/lib/number.js","webpack://gatsby-l10n-example/./src/utils/useLanguageNavigationEffect.ts","webpack://gatsby-l10n-example/./src/pages/index.tsx"],"sourcesContent":["\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.lefts = exports.rights = exports.reverse = exports.modifyAt = exports.deleteAt = exports.updateAt = exports.insertAt = exports.copy = exports.findLastIndex = exports.findLastMap = exports.findLast = exports.findFirstMap = exports.findFirst = exports.findIndex = exports.dropLeftWhile = exports.dropRight = exports.dropLeft = exports.spanLeft = exports.takeLeftWhile = exports.takeRight = exports.takeLeft = exports.init = exports.tail = exports.last = exports.head = exports.lookup = exports.isOutOfBound = exports.size = exports.scanRight = exports.scanLeft = exports.chainWithIndex = exports.foldRight = exports.matchRight = exports.matchRightW = exports.foldLeft = exports.matchLeft = exports.matchLeftW = exports.match = exports.matchW = exports.fromEither = exports.fromOption = exports.fromPredicate = exports.replicate = exports.makeBy = exports.appendW = exports.append = exports.prependW = exports.prepend = exports.isNonEmpty = exports.isEmpty = void 0;\nexports.traverseWithIndex = exports.sequence = exports.traverse = exports.reduceRightWithIndex = exports.reduceRight = exports.reduceWithIndex = exports.reduce = exports.foldMapWithIndex = exports.foldMap = exports.duplicate = exports.extend = exports.filterWithIndex = exports.alt = exports.altW = exports.partitionMapWithIndex = exports.partitionMap = exports.partitionWithIndex = exports.partition = exports.filter = exports.separate = exports.compact = exports.filterMap = exports.filterMapWithIndex = exports.mapWithIndex = exports.flatten = exports.chain = exports.ap = exports.map = exports.zero = exports.of = exports.difference = exports.intersection = exports.union = exports.concat = exports.concatW = exports.comprehension = exports.fromOptionK = exports.chunksOf = exports.splitAt = exports.chop = exports.sortBy = exports.uniq = exports.elem = exports.rotate = exports.intersperse = exports.prependAll = exports.unzip = exports.zip = exports.zipWith = exports.sort = void 0;\nexports.some = exports.every = exports.unsafeDeleteAt = exports.unsafeUpdateAt = exports.unsafeInsertAt = exports.fromEitherK = exports.FromEither = exports.filterE = exports.ChainRecBreadthFirst = exports.chainRecBreadthFirst = exports.ChainRecDepthFirst = exports.chainRecDepthFirst = exports.Witherable = exports.TraversableWithIndex = exports.Traversable = exports.FoldableWithIndex = exports.Foldable = exports.FilterableWithIndex = exports.Filterable = exports.Compactable = exports.Extend = exports.Alternative = exports.guard = exports.Zero = exports.Alt = exports.Unfoldable = exports.Monad = exports.chainFirst = exports.Chain = exports.Applicative = exports.apSecond = exports.apFirst = exports.Apply = exports.FunctorWithIndex = exports.Pointed = exports.flap = exports.Functor = exports.getDifferenceMagma = exports.getIntersectionSemigroup = exports.getUnionMonoid = exports.getUnionSemigroup = exports.getOrd = exports.getEq = exports.getMonoid = exports.getSemigroup = exports.getShow = exports.URI = exports.unfold = exports.wilt = exports.wither = void 0;\nexports.array = exports.prependToAll = exports.snoc = exports.cons = exports.empty = exports.range = exports.apS = exports.bind = exports.bindTo = exports.Do = exports.exists = void 0;\n\nvar Apply_1 = require(\"./Apply\");\n\nvar Chain_1 = require(\"./Chain\");\n\nvar FromEither_1 = require(\"./FromEither\");\n\nvar function_1 = require(\"./function\");\n\nvar Functor_1 = require(\"./Functor\");\n\nvar _ = __importStar(require(\"./internal\"));\n\nvar NEA = __importStar(require(\"./NonEmptyArray\"));\n\nvar RA = __importStar(require(\"./ReadonlyArray\"));\n\nvar Separated_1 = require(\"./Separated\");\n\nvar Witherable_1 = require(\"./Witherable\");\n\nvar Zero_1 = require(\"./Zero\"); // -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n\n/**\n * Test whether an array is empty\n *\n * @example\n * import { isEmpty } from 'fp-ts/Array'\n *\n * assert.strictEqual(isEmpty([]), true)\n * assert.strictEqual(isEmpty(['a']), false)\n *\n * @category refinements\n * @since 2.0.0\n */\n\n\nvar isEmpty = function isEmpty(as) {\n  return as.length === 0;\n};\n\nexports.isEmpty = isEmpty;\n/**\n * Test whether an array is non empty narrowing down the type to `NonEmptyArray<A>`\n *\n * @example\n * import { isNonEmpty } from 'fp-ts/Array'\n *\n * assert.strictEqual(isNonEmpty([]), false)\n * assert.strictEqual(isNonEmpty(['a']), true)\n *\n * @category refinements\n * @since 2.0.0\n */\n\nexports.isNonEmpty = NEA.isNonEmpty; // -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n\n/**\n * Prepend an element to the front of a `Array`, creating a new `NonEmptyArray`.\n *\n * @example\n * import { prepend } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([2, 3, 4], prepend(1)), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.10.0\n */\n\nexports.prepend = NEA.prepend;\n/**\n * Less strict version of [`prepend`](#prepend).\n *\n * @example\n * import { prependW } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([2, 3, 4], prependW(\"a\")), [\"a\", 2, 3, 4]);\n *\n * @category constructors\n * @since 2.11.0\n */\n\nexports.prependW = NEA.prependW;\n/**\n * Append an element to the end of a `Array`, creating a new `NonEmptyArray`.\n *\n * @example\n * import { append } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], append(4)), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.10.0\n */\n\nexports.append = NEA.append;\n/**\n * Less strict version of [`append`](#append).\n *\n * @example\n * import { appendW } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], appendW(\"d\")), [1, 2, 3, \"d\"]);\n *\n * @category constructors\n * @since 2.11.0\n */\n\nexports.appendW = NEA.appendW;\n/**\n * Return a `Array` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { makeBy } from 'fp-ts/Array'\n *\n * const double = (i: number): number => i * 2\n * assert.deepStrictEqual(makeBy(5, double), [0, 2, 4, 6, 8])\n * assert.deepStrictEqual(makeBy(-3, double), [])\n * assert.deepStrictEqual(makeBy(4.32164, double), [0, 2, 4, 6])\n *\n * @category constructors\n * @since 2.0.0\n */\n\nvar makeBy = function makeBy(n, f) {\n  return n <= 0 ? [] : NEA.makeBy(f)(n);\n};\n\nexports.makeBy = makeBy;\n/**\n * Create a `Array` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { replicate } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(replicate(3, 'a'), ['a', 'a', 'a'])\n * assert.deepStrictEqual(replicate(-3, 'a'), [])\n * assert.deepStrictEqual(replicate(2.985647, 'a'), ['a', 'a'])\n *\n * @category constructors\n * @since 2.0.0\n */\n\nvar replicate = function replicate(n, a) {\n  return exports.makeBy(n, function () {\n    return a;\n  });\n};\n\nexports.replicate = replicate;\n\nfunction fromPredicate(predicate) {\n  return function (a) {\n    return predicate(a) ? [a] : [];\n  };\n}\n\nexports.fromPredicate = fromPredicate; // -------------------------------------------------------------------------------------\n// natural transformations\n// -------------------------------------------------------------------------------------\n\n/**\n * Create an array from an `Option`. The resulting array will contain the content of the\n * `Option` if it is `Some` and it will be empty if the `Option` is `None`.\n *\n * @example\n * import { fromOption } from 'fp-ts/Array'\n * import { option } from \"fp-ts\";\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(option.some(\"a\"), fromOption),[\"a\"])\n * assert.deepStrictEqual(pipe(option.none, fromOption),[])\n *\n * @category natural transformations\n * @since 2.11.0\n */\n\nvar fromOption = function fromOption(ma) {\n  return _.isNone(ma) ? [] : [ma.value];\n};\n\nexports.fromOption = fromOption;\n/**\n * Create an array from an `Either`. The resulting array will contain the content of the\n * `Either` if it is `Right` and it will be empty if the `Either` is `Left`.\n *\n * @example\n * import { fromEither } from 'fp-ts/Array'\n * import { either } from \"fp-ts\";\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(either.right(\"r\"), fromEither), [\"r\"]);\n * assert.deepStrictEqual(pipe(either.left(\"l\"), fromEither), []);\n *\n * @category natural transformations\n * @since 2.11.0\n */\n\nvar fromEither = function fromEither(e) {\n  return _.isLeft(e) ? [] : [e.right];\n};\n\nexports.fromEither = fromEither; // -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n\n/**\n * Less strict version of [`match`](#match). It will work when `onEmpty` and `onNonEmpty`\n * have different return types.\n *\n * @example\n * import { matchW } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const matcherW = matchW(\n *   () => \"No elements\",\n *   (as) => as.length\n * );\n * assert.deepStrictEqual(pipe([1, 2, 3, 4], matcherW), 4);\n * assert.deepStrictEqual(pipe([], matcherW), \"No elements\");\n *\n * @category destructors\n * @since 2.11.0\n */\n\nvar matchW = function matchW(onEmpty, onNonEmpty) {\n  return function (as) {\n    return exports.isNonEmpty(as) ? onNonEmpty(as) : onEmpty();\n  };\n};\n\nexports.matchW = matchW;\n/**\n * Takes an array, if the array is empty it returns the result of `onEmpty`, otherwise\n * it passes the array to `onNonEmpty` and returns the result.\n *\n * @example\n * import { match } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const matcher = match(\n *   () => \"No elements\",\n *   (as) => `Found ${as.length} element(s)`\n * );\n * assert.deepStrictEqual(pipe([1, 2, 3, 4], matcher), \"Found 4 element(s)\");\n * assert.deepStrictEqual(pipe([], matcher), \"No elements\");\n *\n * @category destructors\n * @since 2.11.0\n */\n\nexports.match = exports.matchW;\n/**\n * Less strict version of [`matchLeft`](#matchleft). It will work when `onEmpty` and\n * `onNonEmpty` have different return types.\n *\n * @example\n * import { matchLeftW } from 'fp-ts/Array'\n *\n * const f = matchLeftW(\n *   () => 0,\n *   (head: string, tail: string[]) => `Found \"${head}\" followed by ${tail.length} elements`\n * );\n * assert.strictEqual(f([\"a\", \"b\", \"c\"]), 'Found \"a\" followed by 2 elements');\n * assert.strictEqual(f([]), 0);\n *\n * @category destructors\n * @since 2.11.0\n */\n\nvar matchLeftW = function matchLeftW(onEmpty, onNonEmpty) {\n  return function (as) {\n    return exports.isNonEmpty(as) ? onNonEmpty(NEA.head(as), NEA.tail(as)) : onEmpty();\n  };\n};\n\nexports.matchLeftW = matchLeftW;\n/**\n * Takes an array, if the array is empty it returns the result of `onEmpty`, otherwise\n * it passes the array to `onNonEmpty` broken into its first element and remaining elements.\n *\n * @example\n * import { matchLeft } from 'fp-ts/Array'\n *\n * const len: <A>(as: Array<A>) => number = matchLeft(() => 0, (_, tail) => 1 + len(tail))\n * assert.strictEqual(len([1, 2, 3]), 3)\n *\n * @category destructors\n * @since 2.10.0\n */\n\nexports.matchLeft = exports.matchLeftW;\n/**\n * Alias of [`matchLeft`](#matchleft).\n *\n * @category destructors\n * @since 2.0.0\n */\n\nexports.foldLeft = exports.matchLeft;\n/**\n * Less strict version of [`matchRight`](#matchright). It will work when `onEmpty` and\n * `onNonEmpty` have different return types.\n *\n * @example\n * import { matchRightW } from 'fp-ts/Array'\n *\n * const f = matchRightW(\n *   () => 0,\n *   (head: string[], tail: string) => `Found ${head.length} elements folllowed by \"${tail}\"`\n * );\n * assert.strictEqual(f([\"a\", \"b\", \"c\"]), 'Found 2 elements folllowed by \"c\"');\n * assert.strictEqual(f([]), 0);\n *\n * @category destructors\n * @since 2.11.0\n */\n\nvar matchRightW = function matchRightW(onEmpty, onNonEmpty) {\n  return function (as) {\n    return exports.isNonEmpty(as) ? onNonEmpty(NEA.init(as), NEA.last(as)) : onEmpty();\n  };\n};\n\nexports.matchRightW = matchRightW;\n/**\n * Takes an array, if the array is empty it returns the result of `onEmpty`, otherwise\n * it passes the array to `onNonEmpty` broken  into its initial elements and the last element.\n *\n * @example\n * import { matchRight } from 'fp-ts/Array'\n *\n * const len: <A>(as: Array<A>) => number = matchRight(\n *   () => 0,\n *   (head, _) => 1 + len(head)\n * );\n * assert.strictEqual(len([1, 2, 3]), 3);\n *\n * @category destructors\n * @since 2.10.0\n */\n\nexports.matchRight = exports.matchRightW;\n/**\n * Alias of [`matchRight`](#matchright).\n *\n * @category destructors\n * @since 2.0.0\n */\n\nexports.foldRight = exports.matchRight; // -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n\n/**\n * Same as [`chain`](#chain), but passing also the index to the iterating function.\n *\n * @example\n * import { chainWithIndex, replicate } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const f = (index: number, x: string) => replicate(2, `${x}${index}`);\n * assert.deepStrictEqual(pipe([\"a\", \"b\", \"c\"], chainWithIndex(f)), [\"a0\", \"a0\", \"b1\", \"b1\", \"c2\", \"c2\"]);\n *\n * @category combinators\n * @since 2.7.0\n */\n\nvar chainWithIndex = function chainWithIndex(f) {\n  return function (as) {\n    var out = [];\n\n    for (var i = 0; i < as.length; i++) {\n      out.push.apply(out, f(i, as[i]));\n    }\n\n    return out;\n  };\n};\n\nexports.chainWithIndex = chainWithIndex;\n/**\n * Same as `reduce` but it carries over the intermediate steps\n *\n * @example\n * import { scanLeft } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(scanLeft(10, (b, a: number) => b - a)([1, 2, 3]), [10, 9, 7, 4])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nvar scanLeft = function scanLeft(b, f) {\n  return function (as) {\n    var len = as.length;\n    var out = new Array(len + 1);\n    out[0] = b;\n\n    for (var i = 0; i < len; i++) {\n      out[i + 1] = f(out[i], as[i]);\n    }\n\n    return out;\n  };\n};\n\nexports.scanLeft = scanLeft;\n/**\n * Fold an array from the right, keeping all intermediate results instead of only the final result\n *\n * @example\n * import { scanRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(scanRight(10, (a: number, b) => b - a)([1, 2, 3]), [4, 5, 7, 10])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nvar scanRight = function scanRight(b, f) {\n  return function (as) {\n    var len = as.length;\n    var out = new Array(len + 1);\n    out[len] = b;\n\n    for (var i = len - 1; i >= 0; i--) {\n      out[i] = f(as[i], out[i + 1]);\n    }\n\n    return out;\n  };\n};\n\nexports.scanRight = scanRight;\n/**\n * Calculate the number of elements in a `Array`.\n *\n * @example\n * import { size } from 'fp-ts/Array'\n *\n * assert.strictEqual(size([\"a\",\"b\",\"c\"]),3)\n *\n * @since 2.10.0\n */\n\nvar size = function size(as) {\n  return as.length;\n};\n\nexports.size = size;\n/**\n * Test whether an array contains a particular index\n *\n * @example\n * import { isOutOfBound } from 'fp-ts/Array'\n *\n * assert.strictEqual(isOutOfBound(1,[\"a\",\"b\",\"c\"]),false)\n * assert.strictEqual(isOutOfBound(-1,[\"a\",\"b\",\"c\"]),true)\n * assert.strictEqual(isOutOfBound(3,[\"a\",\"b\",\"c\"]),true)\n *\n * @since 2.0.0\n */\n\nexports.isOutOfBound = NEA.isOutOfBound; // TODO: remove non-curried overloading in v3\n\n/**\n * This function provides a safe way to read a value at a particular index from an array.\n * It returns a `none` if the index is out of bounds, and a `some` of the element if the\n * index is valid.\n *\n * @example\n * import { lookup } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], lookup(1)), some(2))\n * assert.deepStrictEqual(pipe([1, 2, 3], lookup(3)), none)\n *\n * @since 2.0.0\n */\n\nexports.lookup = RA.lookup;\n/**\n * Get the first element in an array, or `None` if the array is empty\n *\n * @example\n * import { head } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(head([1, 2, 3]), some(1))\n * assert.deepStrictEqual(head([]), none)\n *\n * @category destructors\n * @since 2.0.0\n */\n\nexports.head = RA.head;\n/**\n * Get the last element in an array, or `None` if the array is empty\n *\n * @example\n * import { last } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(last([1, 2, 3]), some(3))\n * assert.deepStrictEqual(last([]), none)\n *\n * @category destructors\n * @since 2.0.0\n */\n\nexports.last = RA.last;\n/**\n * Get all but the first element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { tail } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(tail([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(tail([]), none)\n *\n * @category destructors\n * @since 2.0.0\n */\n\nvar tail = function tail(as) {\n  return exports.isNonEmpty(as) ? _.some(NEA.tail(as)) : _.none;\n};\n\nexports.tail = tail;\n/**\n * Get all but the last element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { init } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), some([1, 2]))\n * assert.deepStrictEqual(init([]), none)\n *\n * @category destructors\n * @since 2.0.0\n */\n\nvar init = function init(as) {\n  return exports.isNonEmpty(as) ? _.some(NEA.init(as)) : _.none;\n};\n\nexports.init = init;\n/**\n * Keep only a max number of elements from the start of an `Array`, creating a new `Array`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { takeLeft } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(takeLeft(2)([1, 2, 3, 4, 5]), [1, 2]);\n * assert.deepStrictEqual(takeLeft(7)([1, 2, 3, 4, 5]), [1, 2, 3, 4, 5]);\n * assert.deepStrictEqual(takeLeft(0)([1, 2, 3, 4, 5]), []);\n * assert.deepStrictEqual(takeLeft(-1)([1, 2, 3, 4, 5]), [1, 2, 3, 4, 5]);\n *\n * @category combinators\n * @since 2.0.0\n */\n\nvar takeLeft = function takeLeft(n) {\n  return function (as) {\n    return exports.isOutOfBound(n, as) ? exports.copy(as) : as.slice(0, n);\n  };\n};\n\nexports.takeLeft = takeLeft;\n/**\n * Keep only a max number of elements from the end of an `Array`, creating a new `Array`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { takeRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(takeRight(2)([1, 2, 3, 4, 5]), [4, 5]);\n * assert.deepStrictEqual(takeRight(7)([1, 2, 3, 4, 5]), [1, 2, 3, 4, 5]);\n * assert.deepStrictEqual(takeRight(0)([1, 2, 3, 4, 5]), []);\n * assert.deepStrictEqual(takeRight(-1)([1, 2, 3, 4, 5]), [1, 2, 3, 4, 5]);\n *\n * @category combinators\n * @since 2.0.0\n */\n\nvar takeRight = function takeRight(n) {\n  return function (as) {\n    return exports.isOutOfBound(n, as) ? exports.copy(as) : n === 0 ? [] : as.slice(-n);\n  };\n};\n\nexports.takeRight = takeRight;\n\nfunction takeLeftWhile(predicate) {\n  return function (as) {\n    var out = [];\n\n    for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n      var a = as_1[_i];\n\n      if (!predicate(a)) {\n        break;\n      }\n\n      out.push(a);\n    }\n\n    return out;\n  };\n}\n\nexports.takeLeftWhile = takeLeftWhile;\n\nvar spanLeftIndex = function spanLeftIndex(as, predicate) {\n  var l = as.length;\n  var i = 0;\n\n  for (; i < l; i++) {\n    if (!predicate(as[i])) {\n      break;\n    }\n  }\n\n  return i;\n};\n\nfunction spanLeft(predicate) {\n  return function (as) {\n    var _a = exports.splitAt(spanLeftIndex(as, predicate))(as),\n        init = _a[0],\n        rest = _a[1];\n\n    return {\n      init: init,\n      rest: rest\n    };\n  };\n}\n\nexports.spanLeft = spanLeft;\n/**\n * Creates a new `Array` which is a copy of the input dropping a max number of elements from the start.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { dropLeft } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(dropLeft(2)([1, 2, 3]), [3]);\n * assert.deepStrictEqual(dropLeft(5)([1, 2, 3]), []);\n * assert.deepStrictEqual(dropLeft(0)([1, 2, 3]), [1, 2, 3]);\n * assert.deepStrictEqual(dropLeft(-2)([1, 2, 3]), [1, 2, 3]);\n *\n * @category combinators\n * @since 2.0.0\n */\n\nvar dropLeft = function dropLeft(n) {\n  return function (as) {\n    return n <= 0 || exports.isEmpty(as) ? exports.copy(as) : n >= as.length ? [] : as.slice(n, as.length);\n  };\n};\n\nexports.dropLeft = dropLeft;\n/**\n * Creates a new `Array` which is a copy of the input dropping a max number of elements from the end.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { dropRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(dropRight(2)([1, 2, 3]), [1]);\n * assert.deepStrictEqual(dropRight(5)([1, 2, 3]), []);\n * assert.deepStrictEqual(dropRight(0)([1, 2, 3]), [1, 2, 3]);\n * assert.deepStrictEqual(dropRight(-2)([1, 2, 3]), [1, 2, 3]);\n *\n * @category combinators\n * @since 2.0.0\n */\n\nvar dropRight = function dropRight(n) {\n  return function (as) {\n    return n <= 0 || exports.isEmpty(as) ? exports.copy(as) : n >= as.length ? [] : as.slice(0, as.length - n);\n  };\n};\n\nexports.dropRight = dropRight;\n\nfunction dropLeftWhile(predicate) {\n  return function (as) {\n    return as.slice(spanLeftIndex(as, predicate));\n  };\n}\n\nexports.dropLeftWhile = dropLeftWhile;\n/**\n * `findIndex` returns an `Option` containing the first index for which a predicate holds.\n * It returns `None` if no element satisfies the predicate.\n * Similar to [`findFirst`](#findFirst) but returning the index instead of the element.\n *\n * @example\n * import { findIndex } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([1, 2, 3]), some(1))\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([]), none)\n *\n * @since 2.0.0\n */\n\nexports.findIndex = RA.findIndex;\n\nfunction findFirst(predicate) {\n  return RA.findFirst(predicate);\n}\n\nexports.findFirst = findFirst;\n/**\n * Given a selector function which takes an element and returns an option,\n * this function applies the selector to each element of the array and\n * returns the first `Some` result. Otherwise it returns `None`.\n *\n * @example\n * import { findFirstMap } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string;\n *   readonly age: number;\n * }\n *\n * const persons: Array<Person> = [\n *   { name: \"John\", age: 16 },\n *   { name: \"Mary\", age: 45 },\n *   { name: \"Joey\", age: 28 },\n * ];\n *\n * const nameOfPersonAbove18 = (p: Person) => (p.age <= 18 ? none : some(p.name));\n * const nameOfPersonAbove70 = (p: Person) => (p.age <= 70 ? none : some(p.name));\n * assert.deepStrictEqual(findFirstMap(nameOfPersonAbove18)(persons), some(\"Mary\"));\n * assert.deepStrictEqual(findFirstMap(nameOfPersonAbove70)(persons), none);\n *\n * @category destructors\n * @since 2.0.0\n */\n\nexports.findFirstMap = RA.findFirstMap;\n\nfunction findLast(predicate) {\n  return RA.findLast(predicate);\n}\n\nexports.findLast = findLast;\n/**\n * Given a selector function which takes an element and returns an option,\n * this function applies the selector to each element of the array starting from the\n * end and returns the last `Some` result. Otherwise it returns `None`.\n *\n * @example\n * import { findLastMap } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string;\n *   readonly age: number;\n * }\n *\n * const persons: Array<Person> = [\n *   { name: \"John\", age: 16 },\n *   { name: \"Mary\", age: 45 },\n *   { name: \"Joey\", age: 28 },\n * ];\n *\n * const nameOfPersonAbove18 = (p: Person) => (p.age <= 18 ? none : some(p.name));\n * const nameOfPersonAbove70 = (p: Person) => (p.age <= 70 ? none : some(p.name));\n * assert.deepStrictEqual(findLastMap(nameOfPersonAbove18)(persons), some(\"Joey\"));\n * assert.deepStrictEqual(findLastMap(nameOfPersonAbove70)(persons), none);\n *\n * @category destructors\n * @since 2.0.0\n */\n\nexports.findLastMap = RA.findLastMap;\n/**\n * Returns the index of the last element of the list which matches the predicate.\n * It returns an `Option` containing the index or `None` if not found.\n *\n * @example\n * import { findLastIndex } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface X {\n *   readonly a: number\n *   readonly b: number\n * }\n * const xs: Array<X> = [{ a: 1, b: 0 }, { a: 1, b: 1 }]\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 1)(xs), some(1))\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 4)(xs), none)\n *\n * @since 2.0.0\n */\n\nexports.findLastIndex = RA.findLastIndex;\n/**\n * This function takes an array and makes a new array containing the same elements.\n *\n * @category combinators\n * @since 2.0.0\n */\n\nvar copy = function copy(as) {\n  return as.slice();\n};\n\nexports.copy = copy;\n/**\n * Insert an element at the specified index, creating a new array,\n * or returning `None` if the index is out of bounds.\n *\n * @example\n * import { insertAt } from 'fp-ts/Array'\n * import { some } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(insertAt(2, 5)([1, 2, 3, 4]), some([1, 2, 5, 3, 4]))\n *\n * @since 2.0.0\n */\n\nvar insertAt = function insertAt(i, a) {\n  return function (as) {\n    return i < 0 || i > as.length ? _.none : _.some(exports.unsafeInsertAt(i, a, as));\n  };\n};\n\nexports.insertAt = insertAt;\n/**\n * Change the element at the specified index, creating a new array,\n * or returning `None` if the index is out of bounds.\n *\n * @example\n * import { updateAt } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(updateAt(1, 1)([1, 2, 3]), some([1, 1, 3]))\n * assert.deepStrictEqual(updateAt(1, 1)([]), none)\n *\n * @since 2.0.0\n */\n\nvar updateAt = function updateAt(i, a) {\n  return exports.modifyAt(i, function () {\n    return a;\n  });\n};\n\nexports.updateAt = updateAt;\n/**\n * Delete the element at the specified index, creating a new array, or returning `None` if the index is out of bounds.\n *\n * @example\n * import { deleteAt } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(deleteAt(0)([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(deleteAt(1)([]), none)\n *\n * @since 2.0.0\n */\n\nvar deleteAt = function deleteAt(i) {\n  return function (as) {\n    return exports.isOutOfBound(i, as) ? _.none : _.some(exports.unsafeDeleteAt(i, as));\n  };\n};\n\nexports.deleteAt = deleteAt;\n/**\n * Apply a function to the element at the specified index, creating a new array, or returning `None` if the index is out\n * of bounds.\n *\n * @example\n * import { modifyAt } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * const double = (x: number): number => x * 2\n * assert.deepStrictEqual(modifyAt(1, double)([1, 2, 3]), some([1, 4, 3]))\n * assert.deepStrictEqual(modifyAt(1, double)([]), none)\n *\n * @since 2.0.0\n */\n\nvar modifyAt = function modifyAt(i, f) {\n  return function (as) {\n    return exports.isOutOfBound(i, as) ? _.none : _.some(exports.unsafeUpdateAt(i, f(as[i]), as));\n  };\n};\n\nexports.modifyAt = modifyAt;\n/**\n * Reverse an array, creating a new array\n *\n * @example\n * import { reverse } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(reverse([1, 2, 3]), [3, 2, 1])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nvar reverse = function reverse(as) {\n  return exports.isEmpty(as) ? [] : as.slice().reverse();\n};\n\nexports.reverse = reverse;\n/**\n * Takes an `Array` of `Either` and produces a new `Array` containing\n * the values of all the `Right` elements in the same order.\n *\n * @example\n * import { rights } from 'fp-ts/Array'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(rights([right(1), left('foo'), right(2)]), [1, 2])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nvar rights = function rights(as) {\n  var r = [];\n\n  for (var i = 0; i < as.length; i++) {\n    var a = as[i];\n\n    if (a._tag === 'Right') {\n      r.push(a.right);\n    }\n  }\n\n  return r;\n};\n\nexports.rights = rights;\n/**\n * Takes an `Array` of `Either` and produces a new `Array` containing\n * the values of all the `Left` elements in the same order.\n *\n * @example\n * import { lefts } from 'fp-ts/Array'\n * import { left, right } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(lefts([right(1), left('foo'), right(2)]), ['foo'])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nvar lefts = function lefts(as) {\n  var r = [];\n\n  for (var i = 0; i < as.length; i++) {\n    var a = as[i];\n\n    if (a._tag === 'Left') {\n      r.push(a.left);\n    }\n  }\n\n  return r;\n};\n\nexports.lefts = lefts;\n/**\n * Sort the elements of an array in increasing order, creating a new array\n *\n * @example\n * import { sort } from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(sort(N.Ord)([3, 2, 1]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nvar sort = function sort(O) {\n  return function (as) {\n    return as.length <= 1 ? exports.copy(as) : as.slice().sort(O.compare);\n  };\n};\n\nexports.sort = sort;\n/**\n * Apply a function to pairs of elements at the same index in two arrays, collecting the results in a new array. If one\n * input array is short, excess elements of the longer array are discarded.\n *\n * @example\n * import { zipWith } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(zipWith([1, 2, 3], ['a', 'b', 'c', 'd'], (n, s) => s + n), ['a1', 'b2', 'c3'])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nvar zipWith = function zipWith(fa, fb, f) {\n  var fc = [];\n  var len = Math.min(fa.length, fb.length);\n\n  for (var i = 0; i < len; i++) {\n    fc[i] = f(fa[i], fb[i]);\n  }\n\n  return fc;\n};\n\nexports.zipWith = zipWith;\n\nfunction zip(as, bs) {\n  if (bs === undefined) {\n    return function (bs) {\n      return zip(bs, as);\n    };\n  }\n\n  return exports.zipWith(as, bs, function (a, b) {\n    return [a, b];\n  });\n}\n\nexports.zip = zip;\n/**\n * The function is reverse of `zip`. Takes an array of pairs and return two corresponding arrays\n *\n * @example\n * import { unzip } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(unzip([[1, 'a'], [2, 'b'], [3, 'c']]), [[1, 2, 3], ['a', 'b', 'c']])\n *\n * @since 2.0.0\n */\n\nvar unzip = function unzip(as) {\n  var fa = [];\n  var fb = [];\n\n  for (var i = 0; i < as.length; i++) {\n    fa[i] = as[i][0];\n    fb[i] = as[i][1];\n  }\n\n  return [fa, fb];\n};\n\nexports.unzip = unzip;\n/**\n * Creates a new `Array`, prepending an element to every member of the input `Array`.\n *\n * @example\n * import { prependAll } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.10.0\n */\n\nvar prependAll = function prependAll(middle) {\n  var f = NEA.prependAll(middle);\n  return function (as) {\n    return exports.isNonEmpty(as) ? f(as) : [];\n  };\n};\n\nexports.prependAll = prependAll;\n/**\n * Creates a new `Array` placing an element in between members of the input `Array`.\n *\n * @example\n * import { intersperse } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\n\nvar intersperse = function intersperse(middle) {\n  var f = NEA.intersperse(middle);\n  return function (as) {\n    return exports.isNonEmpty(as) ? f(as) : exports.copy(as);\n  };\n};\n\nexports.intersperse = intersperse;\n/**\n * Creates a new `Array` rotating the input `Array` by `n` steps.\n *\n * @example\n * import { rotate } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nvar rotate = function rotate(n) {\n  var f = NEA.rotate(n);\n  return function (as) {\n    return exports.isNonEmpty(as) ? f(as) : exports.copy(as);\n  };\n};\n\nexports.rotate = rotate; // TODO: remove non-curried overloading in v3\n\n/**\n * Test if a value is a member of an `Array`. Takes a `Eq<A>` as a single\n * argument which returns the function to use to search for a value of type `A` in\n * an `Array<A>`.\n *\n * @example\n * import { elem } from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(pipe([1, 2, 3], elem(N.Eq)(2)), true)\n * assert.strictEqual(pipe([1, 2, 3], elem(N.Eq)(0)), false)\n *\n * @since 2.0.0\n */\n\nexports.elem = RA.elem;\n/**\n * Creates a new `Array` removing duplicate elements, keeping the first occurrence of an element,\n * based on a `Eq<A>`.\n *\n * @example\n * import { uniq } from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nvar uniq = function uniq(E) {\n  var f = NEA.uniq(E);\n  return function (as) {\n    return exports.isNonEmpty(as) ? f(as) : exports.copy(as);\n  };\n};\n\nexports.uniq = uniq;\n/**\n * Sort the elements of an array in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import { sortBy } from 'fp-ts/Array'\n * import { contramap } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age: number\n * }\n * const byName = pipe(S.Ord, contramap((p: Person) => p.name))\n * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))\n *\n * const sortByNameByAge = sortBy([byName, byAge])\n *\n * const persons = [{ name: 'a', age: 1 }, { name: 'b', age: 3 }, { name: 'c', age: 2 }, { name: 'b', age: 2 }]\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nvar sortBy = function sortBy(ords) {\n  var f = NEA.sortBy(ords);\n  return function (as) {\n    return exports.isNonEmpty(as) ? f(as) : exports.copy(as);\n  };\n};\n\nexports.sortBy = sortBy;\n/**\n * A useful recursion pattern for processing an array to produce a new array, often used for \"chopping\" up the input\n * array. Typically chop is called with some function that will consume an initial prefix of the array and produce a\n * value and the rest of the array.\n *\n * @example\n * import { Eq } from 'fp-ts/Eq'\n * import * as A from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * const group = <A>(S: Eq<A>): ((as: Array<A>) => Array<Array<A>>) => {\n *   return A.chop(as => {\n *     const { init, rest } = pipe(as, A.spanLeft((a: A) => S.equals(a, as[0])))\n *     return [init, rest]\n *   })\n * }\n * assert.deepStrictEqual(group(N.Eq)([1, 1, 2, 3, 3, 4]), [[1, 1], [2], [3, 3], [4]])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nvar chop = function chop(f) {\n  var g = NEA.chop(f);\n  return function (as) {\n    return exports.isNonEmpty(as) ? g(as) : [];\n  };\n};\n\nexports.chop = chop;\n/**\n * Splits an `Array` into two pieces, the first piece has max `n` elements.\n *\n * @example\n * import { splitAt } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(splitAt(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4, 5]])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nvar splitAt = function splitAt(n) {\n  return function (as) {\n    return n >= 1 && exports.isNonEmpty(as) ? NEA.splitAt(n)(as) : exports.isEmpty(as) ? [exports.copy(as), []] : [[], exports.copy(as)];\n  };\n};\n\nexports.splitAt = splitAt;\n/**\n * Splits an array into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the array. Note that `chunksOf(n)([])` is `[]`, not `[[]]`. This is intentional, and is consistent with a recursive\n * definition of `chunksOf`; it satisfies the property that\n *\n * ```ts\n * chunksOf(n)(xs).concat(chunksOf(n)(ys)) == chunksOf(n)(xs.concat(ys)))\n * ```\n *\n * whenever `n` evenly divides the length of `xs`.\n *\n * @example\n * import { chunksOf } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(chunksOf(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4], [5]])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nvar chunksOf = function chunksOf(n) {\n  var f = NEA.chunksOf(n);\n  return function (as) {\n    return exports.isNonEmpty(as) ? f(as) : [];\n  };\n};\n\nexports.chunksOf = chunksOf;\n/**\n * @category combinators\n * @since 2.11.0\n */\n\nvar fromOptionK = function fromOptionK(f) {\n  return function () {\n    var a = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      a[_i] = arguments[_i];\n    }\n\n    return exports.fromOption(f.apply(void 0, a));\n  };\n};\n\nexports.fromOptionK = fromOptionK;\n\nfunction comprehension(input, f, g) {\n  if (g === void 0) {\n    g = function g() {\n      return true;\n    };\n  }\n\n  var go = function go(scope, input) {\n    return exports.isNonEmpty(input) ? function_1.pipe(NEA.head(input), exports.chain(function (x) {\n      return go(function_1.pipe(scope, exports.append(x)), NEA.tail(input));\n    })) : g.apply(void 0, scope) ? [f.apply(void 0, scope)] : [];\n  };\n\n  return go([], input);\n}\n\nexports.comprehension = comprehension;\n/**\n * @category combinators\n * @since 2.11.0\n */\n\nvar concatW = function concatW(second) {\n  return function (first) {\n    return exports.isEmpty(first) ? exports.copy(second) : exports.isEmpty(second) ? exports.copy(first) : first.concat(second);\n  };\n};\n\nexports.concatW = concatW;\n/**\n * @category combinators\n * @since 2.11.0\n */\n\nexports.concat = exports.concatW;\n\nfunction union(E) {\n  var unionE = NEA.union(E);\n  return function (first, second) {\n    if (second === undefined) {\n      var unionE_1 = union(E);\n      return function (second) {\n        return unionE_1(second, first);\n      };\n    }\n\n    return exports.isNonEmpty(first) && exports.isNonEmpty(second) ? unionE(second)(first) : exports.isNonEmpty(first) ? exports.copy(first) : exports.copy(second);\n  };\n}\n\nexports.union = union;\n\nfunction intersection(E) {\n  var elemE = exports.elem(E);\n  return function (xs, ys) {\n    if (ys === undefined) {\n      var intersectionE_1 = intersection(E);\n      return function (ys) {\n        return intersectionE_1(ys, xs);\n      };\n    }\n\n    return xs.filter(function (a) {\n      return elemE(a, ys);\n    });\n  };\n}\n\nexports.intersection = intersection;\n\nfunction difference(E) {\n  var elemE = exports.elem(E);\n  return function (xs, ys) {\n    if (ys === undefined) {\n      var differenceE_1 = difference(E);\n      return function (ys) {\n        return differenceE_1(ys, xs);\n      };\n    }\n\n    return xs.filter(function (a) {\n      return !elemE(a, ys);\n    });\n  };\n}\n\nexports.difference = difference; // -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n\nvar _map = function _map(fa, f) {\n  return function_1.pipe(fa, exports.map(f));\n};\n/* istanbul ignore next */\n\n\nvar _mapWithIndex = function _mapWithIndex(fa, f) {\n  return function_1.pipe(fa, exports.mapWithIndex(f));\n};\n\nvar _ap = function _ap(fab, fa) {\n  return function_1.pipe(fab, exports.ap(fa));\n};\n\nvar _chain = function _chain(ma, f) {\n  return function_1.pipe(ma, exports.chain(f));\n};\n/* istanbul ignore next */\n\n\nvar _filter = function _filter(fa, predicate) {\n  return function_1.pipe(fa, exports.filter(predicate));\n};\n/* istanbul ignore next */\n\n\nvar _filterMap = function _filterMap(fa, f) {\n  return function_1.pipe(fa, exports.filterMap(f));\n};\n/* istanbul ignore next */\n\n\nvar _partition = function _partition(fa, predicate) {\n  return function_1.pipe(fa, exports.partition(predicate));\n};\n/* istanbul ignore next */\n\n\nvar _partitionMap = function _partitionMap(fa, f) {\n  return function_1.pipe(fa, exports.partitionMap(f));\n};\n/* istanbul ignore next */\n\n\nvar _partitionWithIndex = function _partitionWithIndex(fa, predicateWithIndex) {\n  return function_1.pipe(fa, exports.partitionWithIndex(predicateWithIndex));\n};\n/* istanbul ignore next */\n\n\nvar _partitionMapWithIndex = function _partitionMapWithIndex(fa, f) {\n  return function_1.pipe(fa, exports.partitionMapWithIndex(f));\n};\n/* istanbul ignore next */\n\n\nvar _alt = function _alt(fa, that) {\n  return function_1.pipe(fa, exports.alt(that));\n};\n\nvar _reduce = function _reduce(fa, b, f) {\n  return function_1.pipe(fa, exports.reduce(b, f));\n};\n/* istanbul ignore next */\n\n\nvar _foldMap = function _foldMap(M) {\n  var foldMapM = exports.foldMap(M);\n  return function (fa, f) {\n    return function_1.pipe(fa, foldMapM(f));\n  };\n};\n/* istanbul ignore next */\n\n\nvar _reduceRight = function _reduceRight(fa, b, f) {\n  return function_1.pipe(fa, exports.reduceRight(b, f));\n};\n/* istanbul ignore next */\n\n\nvar _reduceWithIndex = function _reduceWithIndex(fa, b, f) {\n  return function_1.pipe(fa, exports.reduceWithIndex(b, f));\n};\n/* istanbul ignore next */\n\n\nvar _foldMapWithIndex = function _foldMapWithIndex(M) {\n  var foldMapWithIndexM = exports.foldMapWithIndex(M);\n  return function (fa, f) {\n    return function_1.pipe(fa, foldMapWithIndexM(f));\n  };\n};\n/* istanbul ignore next */\n\n\nvar _reduceRightWithIndex = function _reduceRightWithIndex(fa, b, f) {\n  return function_1.pipe(fa, exports.reduceRightWithIndex(b, f));\n};\n/* istanbul ignore next */\n\n\nvar _filterMapWithIndex = function _filterMapWithIndex(fa, f) {\n  return function_1.pipe(fa, exports.filterMapWithIndex(f));\n};\n/* istanbul ignore next */\n\n\nvar _filterWithIndex = function _filterWithIndex(fa, predicateWithIndex) {\n  return function_1.pipe(fa, exports.filterWithIndex(predicateWithIndex));\n};\n/* istanbul ignore next */\n\n\nvar _extend = function _extend(fa, f) {\n  return function_1.pipe(fa, exports.extend(f));\n};\n/* istanbul ignore next */\n\n\nvar _traverse = function _traverse(F) {\n  var traverseF = exports.traverse(F);\n  return function (ta, f) {\n    return function_1.pipe(ta, traverseF(f));\n  };\n};\n/* istanbul ignore next */\n\n\nvar _traverseWithIndex = function _traverseWithIndex(F) {\n  var traverseWithIndexF = exports.traverseWithIndex(F);\n  return function (ta, f) {\n    return function_1.pipe(ta, traverseWithIndexF(f));\n  };\n};\n\nvar _chainRecDepthFirst = RA._chainRecDepthFirst;\nvar _chainRecBreadthFirst = RA._chainRecBreadthFirst; // -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n\n/**\n * Given an element of the base type, `of` builds an `Array` containing just that\n * element of the base type (this is useful for building a `Monad`).\n *\n * @example\n * import { of } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(of(\"a\"), [\"a\"]);\n *\n * @category Pointed\n * @since 2.0.0\n */\n\nexports.of = NEA.of;\n/**\n * Makes an empty `Array`, useful for building a [`Monoid`](#Monoid)\n *\n * @category Zero\n * @since 2.7.0\n */\n\nvar zero = function zero() {\n  return [];\n};\n\nexports.zero = zero;\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: Array<A>) => Array<B>`.\n * In practice it applies the base function to each element of the array and collects the\n * results in a new array.\n *\n * @example\n * import { map } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const f = (n: number) => n * 2;\n * assert.deepStrictEqual(pipe([1, 2, 3], map(f)), [2, 4, 6]);\n *\n * @category Functor\n * @since 2.0.0\n */\n\nvar map = function map(f) {\n  return function (fa) {\n    return fa.map(function (a) {\n      return f(a);\n    });\n  };\n};\n\nexports.map = map;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * It can be used to extend the concept of [`map`](#map) to a function that\n * takes more than one parameter as described\n * read [here](https://dev.to/gcanti/getting-started-with-fp-ts-applicative-1kb3)\n *\n * @example\n * import { ap, map, of } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * // a curried function with 3 input parameteres\n * const f = (s1: string) => (n: number) => (s2: string) => s1 + n + s2;\n *\n * // let's use `ap` to iterate `f` over an array for each input parameter\n * assert.deepStrictEqual(pipe([\"a\", \"b\"], map(f), ap([1, 2]), ap([\"😀\", \"😫\", \"😎\"])), [\n *   \"a1😀\", \"a1😫\", \"a1😎\",\n *   \"a2😀\", \"a2😫\", \"a2😎\",\n *   \"b1😀\", \"b1😫\", \"b1😎\",\n *   \"b2😀\", \"b2😫\", \"b2😎\",\n * ]);\n *\n * // given Array implements the Applicative interface with the `of` method,\n * // we can write exactly the same thing in a more symmetric way\n * // using `of` on `f` and `ap` on each array in input\n * assert.deepStrictEqual(\n *   pipe(of(f), ap([\"a\", \"b\"]), ap([1, 2]), ap([\"😀\", \"😫\", \"😎\"])),\n *   pipe([\"a\", \"b\"], map(f), ap([1, 2]), ap([\"😀\", \"😫\", \"😎\"]))\n * );\n *\n * @category Apply\n * @since 2.0.0\n */\n\nvar ap = function ap(fa) {\n  return exports.chain(function (f) {\n    return function_1.pipe(fa, exports.map(f));\n  });\n};\n\nexports.ap = ap;\n/**\n * Composes computations in sequence, using the return value of one computation to\n * determine the next computation.\n *\n * In other words it takes a function `f` that produces an array from a single element of\n * the base type `A` and returns a new function which applies `f` to each element of the\n * input array (like [`map`](#map)) and, instead of returning an array of arrays, concatenates the\n * results into a single array (like [`flatten`](#flatten)).\n *\n * This is the `chain` component of the array `Monad`.\n *\n * @example\n * import { chain, map, replicate } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const f = (n: number) => replicate(n, `${n}`);\n * assert.deepStrictEqual(pipe([1, 2, 3], map(f)), [[\"1\"], [\"2\", \"2\"], [\"3\", \"3\", \"3\"]]);\n * assert.deepStrictEqual(pipe([1, 2, 3], chain(f)), [\"1\", \"2\", \"2\", \"3\", \"3\", \"3\"]);\n *\n * @category Monad\n * @since 2.0.0\n */\n\nvar chain = function chain(f) {\n  return function (ma) {\n    return function_1.pipe(ma, exports.chainWithIndex(function (_, a) {\n      return f(a);\n    }));\n  };\n};\n\nexports.chain = chain;\n/**\n * Takes an array of arrays of `A` and flattens them into an array of `A`\n * by concatenating the elements of each array in order.\n *\n * Derivable from [`chain`](#chain).\n *\n * @example\n * import { flatten } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(flatten([[\"a\"], [\"b\", \"c\"], [\"d\", \"e\", \"f\"]]), [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"]);\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexports.flatten = /*#__PURE__*/exports.chain(function_1.identity);\n/**\n * Same as [`map`](#map), but the iterating function takes both the index and the value\n * of the element.\n *\n * @example\n * import { mapWithIndex } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const f = (i: number, s: string) => `${s} - ${i}`;\n * assert.deepStrictEqual(pipe([\"a\", \"b\", \"c\"], mapWithIndex(f)), [\"a - 0\", \"b - 1\", \"c - 2\"]);\n *\n * @category FunctorWithIndex\n * @since 2.0.0\n */\n\nvar mapWithIndex = function mapWithIndex(f) {\n  return function (fa) {\n    return fa.map(function (a, i) {\n      return f(i, a);\n    });\n  };\n};\n\nexports.mapWithIndex = mapWithIndex;\n/**\n * Maps an array with an iterating function that takes the index and the value of\n * each element and returns an `Option`. It keeps only the `Some` values discarding\n * the `None`s.\n *\n * Same as [`filterMap`](#filterMap), but with an iterating function which takes also\n * the index as input.\n *\n * @example\n * import { filterMapWithIndex } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n * import { option } from \"fp-ts\";\n *\n * const f = (i: number, s: string) => (i % 2 === 1 ? option.some(s.toUpperCase()) : option.none);\n * assert.deepStrictEqual(pipe([\"a\", \"no\", \"neither\", \"b\"], filterMapWithIndex(f)), [\"NO\", \"B\"]);\n *\n * @category FilterableWithIndex\n * @since 2.0.0\n */\n\nvar filterMapWithIndex = function filterMapWithIndex(f) {\n  return function (fa) {\n    var out = [];\n\n    for (var i = 0; i < fa.length; i++) {\n      var optionB = f(i, fa[i]);\n\n      if (_.isSome(optionB)) {\n        out.push(optionB.value);\n      }\n    }\n\n    return out;\n  };\n};\n\nexports.filterMapWithIndex = filterMapWithIndex;\n/**\n * Maps an array with an iterating function that returns an `Option`\n * and it keeps only the `Some` values discarding the `None`s.\n *\n * @example\n * import { filterMap } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n * import { option } from \"fp-ts\";\n *\n * const f = (s: string) => s.length === 1 ? option.some(s.toUpperCase()) : option.none;\n * assert.deepStrictEqual(pipe([\"a\", \"no\", \"neither\", \"b\"], filterMap(f)), [\"A\", \"B\"]);\n *\n * @category Filterable\n * @since 2.0.0\n */\n\nvar filterMap = function filterMap(f) {\n  return exports.filterMapWithIndex(function (_, a) {\n    return f(a);\n  });\n};\n\nexports.filterMap = filterMap;\n/**\n * Compact an array of `Option`s discarding the `None` values and\n * keeping the `Some` values. It returns a new array containing the values of\n * the `Some` options.\n *\n * @example\n * import { compact } from 'fp-ts/Array'\n * import { option } from \"fp-ts\";\n *\n * assert.deepStrictEqual(compact([option.some(\"a\"), option.none, option.some(\"b\")]), [\"a\", \"b\"]);\n *\n * @category Compactable\n * @since 2.0.0\n */\n\nexports.compact = /*#__PURE__*/exports.filterMap(function_1.identity);\n/**\n * Separate an array of `Either`s into `Left`s and `Right`s, creating two new arrays:\n * one containing all the left values and one containing all the right values.\n *\n * @example\n * import { separate } from 'fp-ts/Array'\n * import { either } from \"fp-ts\";\n *\n * assert.deepStrictEqual(separate([either.right(\"r1\"), either.left(\"l1\"), either.right(\"r2\")]), {\n *   left: [\"l1\"],\n *   right: [\"r1\", \"r2\"],\n * });\n *\n * @category Compactable\n * @since 2.0.0\n */\n\nvar separate = function separate(fa) {\n  var left = [];\n  var right = [];\n\n  for (var _i = 0, fa_1 = fa; _i < fa_1.length; _i++) {\n    var e = fa_1[_i];\n\n    if (e._tag === 'Left') {\n      left.push(e.left);\n    } else {\n      right.push(e.right);\n    }\n  }\n\n  return Separated_1.separated(left, right);\n};\n\nexports.separate = separate;\n/**\n * Given an iterating function that is a `Predicate` or a `Refinement`,\n * `filter` creates a new `Array` containing the elements of the original\n * `Array` for which the iterating function is `true`.\n *\n * @example\n * import { filter } from 'fp-ts/Array'\n * import { isString } from \"fp-ts/lib/string\";\n *\n * assert.deepStrictEqual(filter(isString)([\"a\", 1, {}, \"b\", 5]), [\"a\", \"b\"]);\n * assert.deepStrictEqual(filter((x:number) => x > 0)([-3, 1, -2, 5]), [1, 5]);\n *\n * @category Filterable\n * @since 2.0.0\n */\n\nvar filter = function filter(predicate) {\n  return function (as) {\n    return as.filter(predicate);\n  };\n};\n\nexports.filter = filter;\n/**\n * Given an iterating function that is a `Predicate` or a `Refinement`,\n * `partition` creates two new `Array`s: `right` containing the elements of the original\n * `Array` for which the iterating function is `true`, `left` containing the elements\n * for which it is false.\n *\n * @example\n * import { partition } from 'fp-ts/Array'\n * import { isString } from \"fp-ts/lib/string\";\n *\n * assert.deepStrictEqual(partition(isString)([\"a\", 1, {}, \"b\", 5]), { left: [1, {}, 5], right: [\"a\", \"b\"] });\n * assert.deepStrictEqual(partition((x: number) => x > 0)([-3, 1, -2, 5]), { left: [-3, -2], right: [1, 5] });\n *\n * @category Filterable\n * @since 2.0.0\n */\n\nvar partition = function partition(predicate) {\n  return exports.partitionWithIndex(function (_, a) {\n    return predicate(a);\n  });\n};\n\nexports.partition = partition;\n/**\n * Same as [`partition`](#partition), but passing also the index to the iterating function.\n *\n * @example\n * import { partitionWithIndex } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(partitionWithIndex((index, x: number) => index < 3 && x > 0)([-2, 5, 6, 7]), {\n *   left: [-2, 7],\n *   right: [5, 6],\n * });\n *\n * @category FilterableWithIndex\n * @since 2.0.0\n */\n\nvar partitionWithIndex = function partitionWithIndex(predicateWithIndex) {\n  return function (as) {\n    var left = [];\n    var right = [];\n\n    for (var i = 0; i < as.length; i++) {\n      var b = as[i];\n\n      if (predicateWithIndex(i, b)) {\n        right.push(b);\n      } else {\n        left.push(b);\n      }\n    }\n\n    return Separated_1.separated(left, right);\n  };\n};\n\nexports.partitionWithIndex = partitionWithIndex;\n/**\n * Given an iterating function that returns an `Either`,\n * `partitionMap` applies the iterating function to each element and it creates two `Array`s:\n * `right` containing the values of `Right` results, `left` containing the values of `Left` results.\n *\n * @example\n * import { partitionMap } from 'fp-ts/Array'\n * import { Either, left, right } from \"fp-ts/lib/Either\";\n *\n * const upperIfString = <B>(x: B): Either<B, string> =>\n *   typeof x === \"string\" ? right(x.toUpperCase()) : left(x);\n * assert.deepStrictEqual(partitionMap(upperIfString)([-2, \"hello\", 6, 7, \"world\"]), {\n *   left: [-2, 6, 7],\n *   right: [ 'HELLO', 'WORLD' ],\n * });\n *\n * @category Filterable\n * @since 2.0.0\n */\n\nvar partitionMap = function partitionMap(f) {\n  return exports.partitionMapWithIndex(function (_, a) {\n    return f(a);\n  });\n};\n\nexports.partitionMap = partitionMap;\n/**\n * Same as [`partitionMap`](#partitionMap), but passing also the index to the iterating function.\n *\n * @example\n * import { partitionMapWithIndex } from 'fp-ts/Array'\n * import { Either, left, right } from \"fp-ts/lib/Either\";\n *\n * const upperIfStringBefore3 = <B>(index: number, x: B): Either<B, string> =>\n *   index < 3 && typeof x === \"string\" ? right(x.toUpperCase()) : left(x);\n * assert.deepStrictEqual(partitionMapWithIndex(upperIfStringBefore3)([-2, \"hello\", 6, 7, \"world\"]), {\n *   left: [-2, 6, 7, \"world\"],\n *   right: [\"HELLO\"],\n * });\n *\n * @category FilterableWithIndex\n * @since 2.0.0\n */\n\nvar partitionMapWithIndex = function partitionMapWithIndex(f) {\n  return function (fa) {\n    var left = [];\n    var right = [];\n\n    for (var i = 0; i < fa.length; i++) {\n      var e = f(i, fa[i]);\n\n      if (e._tag === 'Left') {\n        left.push(e.left);\n      } else {\n        right.push(e.right);\n      }\n    }\n\n    return Separated_1.separated(left, right);\n  };\n};\n\nexports.partitionMapWithIndex = partitionMapWithIndex;\n/**\n * Less strict version of [`alt`](#alt), it can concatenate `Array`s of different base types.\n *\n * @example\n * import { altW } from 'fp-ts/Array';\n *\n * assert.deepStrictEqual(altW(() => [2, 3, 4])([\"a\"]), [\"a\", 2, 3, 4]);\n *\n * @category Alt\n * @since 2.9.0\n */\n\nvar altW = function altW(that) {\n  return function (fa) {\n    return fa.concat(that());\n  };\n};\n\nexports.altW = altW;\n/**\n * `alt` implements the `Alt` iterface by concatenation of `Array`s.\n * `Alt` interface is similar to `Semigroup` for higher-kinded types such\n * as `Array` and `Option`: the example below shows both `Alt`'s `alt` and\n * `Semigroup`'s `concat` functions.\n *\n * @example\n * import { alt, concat } from 'fp-ts/Array';\n *\n * assert.deepStrictEqual(alt(() => [2, 3, 4])([1]), [1, 2, 3, 4]);\n * assert.deepStrictEqual(concat([2, 3, 4])([1]), [1, 2, 3, 4]);\n *\n * @category Alt\n * @since 2.0.0\n */\n\nexports.alt = exports.altW;\n/**\n * Same as [`filter`](#filter), but passing also the index to the iterating function.\n *\n * @example\n * import { filterWithIndex } from 'fp-ts/Array';\n *\n * const f = (index: number, x: number) => x > 0 && index <= 2;\n * assert.deepStrictEqual(filterWithIndex(f)([-3, 1, -2, 5]), [1]);\n *\n * @category FilterableWithIndex\n * @since 2.0.0\n */\n\nvar filterWithIndex = function filterWithIndex(predicateWithIndex) {\n  return function (as) {\n    return as.filter(function (b, i) {\n      return predicateWithIndex(i, b);\n    });\n  };\n};\n\nexports.filterWithIndex = filterWithIndex;\n/**\n * Given an iterating function that takes `Array<A>` as input, `extend` returns\n * an array containing the results of the iterating function applied to the whole input\n * `Array`, then to the input `Array` without the first element, then to the input\n * `Array` without the first two elements, etc.\n *\n * @example\n * import { extend } from 'fp-ts/Array'\n *\n * const f = (a: string[]) => a.join(\",\");\n * assert.deepStrictEqual(extend(f)([\"a\", \"b\", \"c\"]), [\"a,b,c\", \"b,c\", \"c\"]);\n *\n * @category Extend\n * @since 2.0.0\n */\n\nvar extend = function extend(f) {\n  return function (wa) {\n    return wa.map(function (_, i) {\n      return f(wa.slice(i));\n    });\n  };\n};\n\nexports.extend = extend;\n/**\n * `duplicate` returns an array containing the whole input `Array`,\n * then to the input `Array` dropping the first element, then to the input\n * `Array` dropping the first two elements, etc.\n * Derivable from `Extend`.\n *\n * @example\n * import { duplicate } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(duplicate([\"a\", \"b\", \"c\"]), [[\"a\", \"b\", \"c\"], [\"b\", \"c\"], [\"c\"]]);\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexports.duplicate = /*#__PURE__*/exports.extend(function_1.identity);\n/**\n * Map and fold an `Array`.\n * Map the `Array` passing each value to the iterating function.\n * Then fold the results using the provided `Monoid`.\n *\n * @example\n * import { foldMap } from 'fp-ts/Array'\n *\n * const monoid = { concat: (a: string, b: string) => a + b, empty: \"\" };\n * const f = (s: string) => s.toUpperCase()\n * assert.deepStrictEqual(foldMap(monoid)(f)([\"a\", \"b\", \"c\"]), \"ABC\");\n *\n * @category Foldable\n * @since 2.0.0\n */\n\nexports.foldMap = RA.foldMap;\n/**\n * Same as [`foldMap`](#foldMap) but passing also the index to the iterating function.\n *\n * @example\n * import { foldMapWithIndex } from 'fp-ts/Array'\n *\n * const monoid = { concat: (a: string, b: string) => a + b, empty: \"\" };\n * const f = (index:number, s: string) => `${s.toUpperCase()}(${index})`\n * assert.deepStrictEqual(foldMapWithIndex(monoid)(f)([\"a\", \"b\", \"c\"]), \"A(0)B(1)C(2)\");\n *\n * @category FoldableWithIndex\n * @since 2.0.0\n */\n\nexports.foldMapWithIndex = RA.foldMapWithIndex;\n/**\n * Reduces an `Array`.\n *\n * `reduce` executes the supplied iterating function on each element of the array,\n * in order, passing in the element and the return value from the calculation on the preceding element.\n *\n * The first time that the iterating function is called there is no \"return value of the\n * previous calculation\", the initial value is used in its place.\n *\n * @example\n * import { reduce } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(reduce(5, (acc: number, cur: number) => acc * cur)([2, 3]), 5 * 2 * 3);\n *\n * @category Foldable\n * @since 2.0.0\n */\n\nexports.reduce = RA.reduce;\n/**\n * Same as [`reduce`](#reduce) but passing also the index to the iterating function.\n *\n * @example\n * import { reduceWithIndex } from 'fp-ts/Array'\n *\n * const f = (index: number, acc: string, cur: unknown) =>\n *   acc + (typeof cur === \"string\" ? cur.toUpperCase() + index : \"\");\n * assert.deepStrictEqual(reduceWithIndex(\"\", f)([2, \"a\", \"b\", null]), \"A1B2\");\n *\n * @category FoldableWithIndex\n * @since 2.0.0\n */\n\nexports.reduceWithIndex = RA.reduceWithIndex;\n/**\n * Same as [`reduce`](#reduce) but applied from the end to the start.\n *\n * *Note*: the iterating function in this case takes the accumulator as the last argument.\n *\n * @example\n * import { reduceRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(reduceRight(\"\", (cur: string, acc: string) => acc + cur)([\"a\", \"b\", \"c\"]), \"cba\");\n *\n * @category Foldable\n * @since 2.0.0\n */\n\nexports.reduceRight = RA.reduceRight;\n/**\n * Same as [`reduceRight`](#reduceRight) but passing also the index to the iterating function.\n *\n * @example\n * import { reduceRightWithIndex } from 'fp-ts/Array'\n *\n * const f = (index: number, cur: unknown, acc: string) =>\n *   acc + (typeof cur === \"string\" ? cur.toUpperCase() + index : \"\");\n * assert.deepStrictEqual(reduceRightWithIndex(\"\", f)([2, \"a\", \"b\", null]), \"B2A1\");\n *\n * @category FoldableWithIndex\n * @since 2.0.0\n */\n\nexports.reduceRightWithIndex = RA.reduceRightWithIndex;\n/**\n * Given an iterating function that returns a `HKT` (higher kinded type), `traverse`\n * applies the iterating function to each element of the `Array` and then [`sequence`](#sequence)-s\n * the results using the provided `Applicative`.\n *\n * E.g. suppose you have an `Array` and you want to format each element with a function\n * that returns a result or an error as `f = (a: A) => Either<Error, B>`, using `traverse`\n * you can apply `f` to all elements and directly obtain as a result an `Either<Error,Array<B>>`\n * i.e. an `Array<B>` if all the results are `B`, or an `Error` if some of the results\n * are `Error`s.\n *\n * @example\n * import { traverse } from 'fp-ts/Array'\n * import { Applicative, left, right } from \"fp-ts/lib/Either\";\n *\n * const f = (x: unknown) =>\n *   typeof x === \"string\" ? right(x.toUpperCase()) : left(new Error(\"not a string\"));\n * assert.deepStrictEqual(traverse(Applicative)(f)([\"a\", \"b\"]), right([\"A\", \"B\"]));\n * assert.deepStrictEqual(traverse(Applicative)(f)([\"a\", 5]), left(new Error(\"not a string\")));\n *\n * @category Traversable\n * @since 2.6.3\n */\n\nvar traverse = function traverse(F) {\n  var traverseWithIndexF = exports.traverseWithIndex(F);\n  return function (f) {\n    return traverseWithIndexF(function (_, a) {\n      return f(a);\n    });\n  };\n};\n\nexports.traverse = traverse;\n/**\n * `sequence` takes an `Array` where elements are `HKT<A>` (higher kinded type) and,\n * using an applicative of that `HKT`, returns an `HKT` of `Array<A>`.\n * E.g. it can turn an `Array<Either<Error, string>>` into an `Either<Error, Array<string>>`.\n *\n * `sequence` requires an `Applicative` of the `HKT` you are targeting, e.g. to turn an\n * `Array<Either<E, A>>` into an `Either<E, Array<A>>`, it needs an\n * `Applicative` for `Either`, to to turn an `Array<Option<A>>` into an `Option<Array<A>>`,\n * it needs an `Applicative` for `Option`.\n *\n * @example\n * import { sequence } from 'fp-ts/Array'\n * import { Applicative, left, right } from \"fp-ts/lib/Either\";\n *\n * assert.deepStrictEqual(sequence(Applicative)([right(\"a\"), right(\"b\")]), right([\"a\", \"b\"]));\n * assert.deepStrictEqual(\n *   sequence(Applicative)([right(\"a\"), left(new Error(\"not a string\"))]),\n *   left(new Error(\"not a string\"))\n * );\n *\n * @category Traversable\n * @since 2.6.3\n */\n\nvar sequence = function sequence(F) {\n  return function (ta) {\n    return _reduce(ta, F.of(exports.zero()), function (fas, fa) {\n      return F.ap(F.map(fas, function (as) {\n        return function (a) {\n          return function_1.pipe(as, exports.append(a));\n        };\n      }), fa);\n    });\n  };\n};\n\nexports.sequence = sequence;\n/**\n * Same as [`traverse`](#traverse) but passing also the index to the iterating function.\n *\n * @example\n * import { traverseWithIndex } from 'fp-ts/Array'\n * import { Applicative, left, right } from \"fp-ts/lib/Either\";\n *\n * const f = (index:number, x:unknown) =>\n *   typeof x === \"string\" ? right(x.toUpperCase() + index) : left(new Error(\"not a string\"));\n * assert.deepStrictEqual(traverseWithIndex(Applicative)(f)([\"a\", \"b\"]), right([\"A0\", \"B1\"]));\n * assert.deepStrictEqual(traverseWithIndex(Applicative)(f)([\"a\", 5]), left(new Error(\"not a string\")));\n *\n * @category TraversableWithIndex\n * @since 2.6.3\n */\n\nvar traverseWithIndex = function traverseWithIndex(F) {\n  return function (f) {\n    return exports.reduceWithIndex(F.of(exports.zero()), function (i, fbs, a) {\n      return F.ap(F.map(fbs, function (bs) {\n        return function (b) {\n          return function_1.pipe(bs, exports.append(b));\n        };\n      }), f(i, a));\n    });\n  };\n};\n\nexports.traverseWithIndex = traverseWithIndex;\n/**\n * @category Witherable\n * @since 2.6.5\n */\n\nvar wither = function wither(F) {\n  var _witherF = _wither(F);\n\n  return function (f) {\n    return function (fa) {\n      return _witherF(fa, f);\n    };\n  };\n};\n\nexports.wither = wither;\n/**\n * @category Witherable\n * @since 2.6.5\n */\n\nvar wilt = function wilt(F) {\n  var _wiltF = _wilt(F);\n\n  return function (f) {\n    return function (fa) {\n      return _wiltF(fa, f);\n    };\n  };\n};\n\nexports.wilt = wilt;\n/**\n * `unfold` takes a function `f` which returns an `Option` of a tuple containing an outcome\n * value and an input for the following iteration.\n * `unfold` applies `f` to the initial value `b` and then recursively to the second\n * element of the tuple contained in the returned `option` of the previous\n * calculation until `f` returns `Option.none`.\n *\n * @example\n * import { unfold } from 'fp-ts/Array'\n * import { option } from 'fp-ts'\n *\n * const f = (n: number) => {\n *   if (n <= 0) return option.none;\n *   const returnValue = n * 2;\n *   const inputForNextRound = n - 1;\n *   return option.some([returnValue, inputForNextRound] as const);\n * };\n * assert.deepStrictEqual(unfold(5, f), [10, 8, 6, 4, 2]);\n *\n * @category Unfoldable\n * @since 2.6.6\n */\n\nvar unfold = function unfold(b, f) {\n  var out = [];\n  var bb = b;\n\n  while (true) {\n    var mt = f(bb);\n\n    if (_.isSome(mt)) {\n      var _a = mt.value,\n          a = _a[0],\n          b_1 = _a[1];\n      out.push(a);\n      bb = b_1;\n    } else {\n      break;\n    }\n  }\n\n  return out;\n};\n\nexports.unfold = unfold; // -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n\n/**\n * @category instances\n * @since 2.0.0\n */\n\nexports.URI = 'Array';\n/**\n * `getShow` makes a `Show` for an `Array<A>` from a `Show` for\n * an `A`.\n *\n * @example\n * import { getShow } from 'fp-ts/Array'\n *\n * const numShow = { show: (n: number) => (n >= 0 ? `${n}` : `(${-n})`) };\n * assert.deepStrictEqual(getShow(numShow).show([-2, -1, 0, 1]), \"[(2), (1), 0, 1]\");\n *\n * @category instances\n * @since 2.0.0\n */\n\nexports.getShow = RA.getShow;\n/**\n * Get a `Semigroup` based on the concatenation of `Array`s.\n * See also [`getMonoid`](#getMonoid).\n *\n * @example\n * import { getSemigroup } from 'fp-ts/Array'\n *\n * const S = getSemigroup<number>();\n * assert.deepStrictEqual(S.concat([1, 2], [2, 3]), [1, 2, 2, 3]);\n *\n * @category instances\n * @since 2.10.0\n */\n\nvar getSemigroup = function getSemigroup() {\n  return {\n    concat: function concat(first, second) {\n      return first.concat(second);\n    }\n  };\n};\n\nexports.getSemigroup = getSemigroup;\n/**\n * Returns a `Monoid` for `Array<A>` based on the concatenation of `Array`s.\n *\n * @example\n * import { getMonoid } from 'fp-ts/Array'\n *\n * const M = getMonoid<number>()\n * assert.deepStrictEqual(M.concat([1, 2], [3, 4]), [1, 2, 3, 4])\n *\n * @category instances\n * @since 2.0.0\n */\n\nvar getMonoid = function getMonoid() {\n  return {\n    concat: exports.getSemigroup().concat,\n    empty: []\n  };\n};\n\nexports.getMonoid = getMonoid;\n/**\n * Derives an `Eq` over the `Array` of a given element type from the `Eq` of that type. The derived `Eq` defines two\n * arrays as equal if all elements of both arrays are compared equal pairwise with the given `E`. In case of arrays of\n * different lengths, the result is non equality.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { getEq } from 'fp-ts/Array'\n *\n * const E = getEq(S.Eq)\n * assert.strictEqual(E.equals(['a', 'b'], ['a', 'b']), true)\n * assert.strictEqual(E.equals(['a'], []), false)\n *\n * @category instances\n * @since 2.0.0\n */\n\nexports.getEq = RA.getEq;\n/**\n * Derives an `Ord` over the `Array` of a given element type from the `Ord` of that type. The ordering between two such\n * arrays is equal to: the first non equal comparison of each arrays elements taken pairwise in increasing order, in\n * case of equality over all the pairwise elements; the longest array is considered the greatest, if both arrays have\n * the same length, the result is equality.\n *\n * @example\n * import { getOrd } from 'fp-ts/Array'\n * import * as S from 'fp-ts/string'\n *\n * const O = getOrd(S.Ord)\n * assert.strictEqual(O.compare(['b'], ['a']), 1)\n * assert.strictEqual(O.compare(['a'], ['a']), 0)\n * assert.strictEqual(O.compare(['a'], ['b']), -1)\n *\n * @category instances\n * @since 2.0.0\n */\n\nexports.getOrd = RA.getOrd;\n/**\n * Get a `Semigroup` based on the union of the elements of `Array`s.\n * Elements which equal according to the provided `Eq` are included\n * only once in the result.\n * See also [`getUnionMonoid`](#getUnionMonoid).\n *\n * @example\n * import { getUnionSemigroup } from 'fp-ts/Array';\n * import { Eq } from 'fp-ts/number';\n *\n * const S = getUnionSemigroup<number>(Eq);\n * assert.deepStrictEqual(S.concat([1, 2], [2, 3]), [1, 2, 3]);\n *\n * @category instances\n * @since 2.11.0\n */\n\nvar getUnionSemigroup = function getUnionSemigroup(E) {\n  var unionE = union(E);\n  return {\n    concat: function concat(first, second) {\n      return unionE(second)(first);\n    }\n  };\n};\n\nexports.getUnionSemigroup = getUnionSemigroup;\n/**\n * Get a `Monoid` based on the union of the elements of `Array`s.\n * Elements which equal according to the provided `Eq` are included\n * only once in the result.\n *\n * @example\n * import { getUnionMonoid } from 'fp-ts/Array'\n * import { Eq } from 'fp-ts/number';\n *\n * const M = getUnionMonoid<number>(Eq);\n * assert.deepStrictEqual(M.concat([1, 2], [2, 3]), [1, 2, 3]);\n * assert.deepStrictEqual(M.empty,[]);\n *\n * @category instances\n * @since 2.11.0\n */\n\nvar getUnionMonoid = function getUnionMonoid(E) {\n  return {\n    concat: exports.getUnionSemigroup(E).concat,\n    empty: []\n  };\n};\n\nexports.getUnionMonoid = getUnionMonoid;\n/**\n * Get a `Semigroup` based on the intersection of the elements of `Array`s.\n * Only elements present in the two arrays which are equal according to the\n * provided `Eq` are included in the result.\n *\n * @example\n * import { getIntersectionSemigroup } from 'fp-ts/Array'\n * import { Eq } from 'fp-ts/number';\n *\n * const S = getIntersectionSemigroup<number>(Eq);\n * assert.deepStrictEqual(S.concat([1, 2], [2, 3]), [2]);\n *\n * @category instances\n * @since 2.11.0\n */\n\nvar getIntersectionSemigroup = function getIntersectionSemigroup(E) {\n  var intersectionE = intersection(E);\n  return {\n    concat: function concat(first, second) {\n      return intersectionE(second)(first);\n    }\n  };\n};\n\nexports.getIntersectionSemigroup = getIntersectionSemigroup;\n/**\n * Get a `Magma` for `Array` where the `concat` function is the differnce between\n * the first and the second array, i.e. the result contains all the elements of the\n * first array for which their is no equal element in the second array according\n * to the `Eq` provided.\n *\n *\n * @example\n * import { getDifferenceMagma } from 'fp-ts/Array'\n * import { Eq } from 'fp-ts/number';\n *\n * const S = getDifferenceMagma<number>(Eq);\n * assert.deepStrictEqual(S.concat([1, 2], [2, 3]), [1]);\n *\n * @category instances\n * @since 2.11.0\n */\n\nvar getDifferenceMagma = function getDifferenceMagma(E) {\n  var differenceE = difference(E);\n  return {\n    concat: function concat(first, second) {\n      return differenceE(second)(first);\n    }\n  };\n};\n\nexports.getDifferenceMagma = getDifferenceMagma;\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Functor = {\n  URI: exports.URI,\n  map: _map\n};\n/**\n * Given an input an `Array` of functions, `flap` returns an `Array` containing\n * the results of applying each function to the given input.\n *\n * @example\n * import { flap } from 'fp-ts/Array'\n *\n * const funs = [\n *   (n: number) => `Double: ${n * 2}`,\n *   (n: number) => `Triple: ${n * 3}`,\n *   (n: number) => `Square: ${n * n}`,\n * ];\n * assert.deepStrictEqual(flap(4)(funs), ['Double: 8', 'Triple: 12', 'Square: 16']);\n *\n * @category combinators\n * @since 2.10.0\n */\n\nexports.flap = /*#__PURE__*/Functor_1.flap(exports.Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\n\nexports.Pointed = {\n  URI: exports.URI,\n  of: exports.of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.FunctorWithIndex = {\n  URI: exports.URI,\n  map: _map,\n  mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\n\nexports.Apply = {\n  URI: exports.URI,\n  map: _map,\n  ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexports.apFirst = /*#__PURE__*/Apply_1.apFirst(exports.Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexports.apSecond = /*#__PURE__*/Apply_1.apSecond(exports.Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Applicative = {\n  URI: exports.URI,\n  map: _map,\n  ap: _ap,\n  of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\n\nexports.Chain = {\n  URI: exports.URI,\n  map: _map,\n  ap: _ap,\n  chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexports.chainFirst = /*#__PURE__*/Chain_1.chainFirst(exports.Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Monad = {\n  URI: exports.URI,\n  map: _map,\n  ap: _ap,\n  of: exports.of,\n  chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Unfoldable = {\n  URI: exports.URI,\n  unfold: exports.unfold\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Alt = {\n  URI: exports.URI,\n  map: _map,\n  alt: _alt\n};\n/**\n * @category instances\n * @since 2.11.0\n */\n\nexports.Zero = {\n  URI: exports.URI,\n  zero: exports.zero\n};\n/**\n * @category constructors\n * @since 2.11.0\n */\n\nexports.guard = /*#__PURE__*/Zero_1.guard(exports.Zero, exports.Pointed);\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Alternative = {\n  URI: exports.URI,\n  map: _map,\n  ap: _ap,\n  of: exports.of,\n  alt: _alt,\n  zero: exports.zero\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Extend = {\n  URI: exports.URI,\n  map: _map,\n  extend: _extend\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Compactable = {\n  URI: exports.URI,\n  compact: exports.compact,\n  separate: exports.separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Filterable = {\n  URI: exports.URI,\n  map: _map,\n  compact: exports.compact,\n  separate: exports.separate,\n  filter: _filter,\n  filterMap: _filterMap,\n  partition: _partition,\n  partitionMap: _partitionMap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.FilterableWithIndex = {\n  URI: exports.URI,\n  map: _map,\n  mapWithIndex: _mapWithIndex,\n  compact: exports.compact,\n  separate: exports.separate,\n  filter: _filter,\n  filterMap: _filterMap,\n  partition: _partition,\n  partitionMap: _partitionMap,\n  partitionMapWithIndex: _partitionMapWithIndex,\n  partitionWithIndex: _partitionWithIndex,\n  filterMapWithIndex: _filterMapWithIndex,\n  filterWithIndex: _filterWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Foldable = {\n  URI: exports.URI,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.FoldableWithIndex = {\n  URI: exports.URI,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  reduceWithIndex: _reduceWithIndex,\n  foldMapWithIndex: _foldMapWithIndex,\n  reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Traversable = {\n  URI: exports.URI,\n  map: _map,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  traverse: _traverse,\n  sequence: exports.sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.TraversableWithIndex = {\n  URI: exports.URI,\n  map: _map,\n  mapWithIndex: _mapWithIndex,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  reduceWithIndex: _reduceWithIndex,\n  foldMapWithIndex: _foldMapWithIndex,\n  reduceRightWithIndex: _reduceRightWithIndex,\n  traverse: _traverse,\n  sequence: exports.sequence,\n  traverseWithIndex: _traverseWithIndex\n};\n\nvar _wither = /*#__PURE__*/Witherable_1.witherDefault(exports.Traversable, exports.Compactable);\n\nvar _wilt = /*#__PURE__*/Witherable_1.wiltDefault(exports.Traversable, exports.Compactable);\n/**\n * @category instances\n * @since 2.7.0\n */\n\n\nexports.Witherable = {\n  URI: exports.URI,\n  map: _map,\n  compact: exports.compact,\n  separate: exports.separate,\n  filter: _filter,\n  filterMap: _filterMap,\n  partition: _partition,\n  partitionMap: _partitionMap,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  traverse: _traverse,\n  sequence: exports.sequence,\n  wither: _wither,\n  wilt: _wilt\n};\n/**\n * @category ChainRec\n * @since 2.11.0\n */\n\nexports.chainRecDepthFirst = RA.chainRecDepthFirst;\n/**\n * @category instances\n * @since 2.11.0\n */\n\nexports.ChainRecDepthFirst = {\n  URI: exports.URI,\n  map: _map,\n  ap: _ap,\n  chain: _chain,\n  chainRec: _chainRecDepthFirst\n};\n/**\n * @category ChainRec\n * @since 2.11.0\n */\n\nexports.chainRecBreadthFirst = RA.chainRecBreadthFirst;\n/**\n * @category instances\n * @since 2.11.0\n */\n\nexports.ChainRecBreadthFirst = {\n  URI: exports.URI,\n  map: _map,\n  ap: _ap,\n  chain: _chain,\n  chainRec: _chainRecBreadthFirst\n};\n/**\n * Filter values inside a context.\n *\n * @since 2.11.0\n */\n\nexports.filterE = /*#__PURE__*/Witherable_1.filterE(exports.Witherable);\n/**\n * @category instances\n * @since 2.11.0\n */\n\nexports.FromEither = {\n  URI: exports.URI,\n  fromEither: exports.fromEither\n};\n/**\n * @category combinators\n * @since 2.11.0\n */\n\nexports.fromEitherK = /*#__PURE__*/FromEither_1.fromEitherK(exports.FromEither); // -------------------------------------------------------------------------------------\n// unsafe\n// -------------------------------------------------------------------------------------\n\n/**\n * @category unsafe\n * @since 2.0.0\n */\n\nexports.unsafeInsertAt = NEA.unsafeInsertAt;\n/**\n * @category unsafe\n * @since 2.0.0\n */\n\nvar unsafeUpdateAt = function unsafeUpdateAt(i, a, as) {\n  return exports.isNonEmpty(as) ? NEA.unsafeUpdateAt(i, a, as) : [];\n};\n\nexports.unsafeUpdateAt = unsafeUpdateAt;\n/**\n * @category unsafe\n * @since 2.0.0\n */\n\nvar unsafeDeleteAt = function unsafeDeleteAt(i, as) {\n  var xs = as.slice();\n  xs.splice(i, 1);\n  return xs;\n};\n\nexports.unsafeDeleteAt = unsafeDeleteAt; // -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n\n/**\n * `every` tells if the provided predicate holds true for every element in the `Array`.\n *\n * @example\n * import { every } from 'fp-ts/Array'\n *\n * assert.equal(every((x: number) => x >= 0)([1, 2, 3]), true);\n * assert.equal(every((x: number) => x >= 0)([-1, 2, 3]), false);\n *\n * @since 2.9.0\n */\n\nexports.every = RA.every;\n/**\n * `some` tells if the provided predicate holds true at least for one element in the `Array`.\n *\n * @example\n * import { some } from 'fp-ts/Array'\n *\n * assert.equal(some((x: number) => x >= 0)([1, 2, 3]), true);\n * assert.equal(some((x: number) => x >= 10)([1, 2, 3]), false);\n *\n * @since 2.9.0\n */\n\nvar some = function some(predicate) {\n  return function (as) {\n    return as.some(predicate);\n  };\n};\n\nexports.some = some;\n/**\n * Alias of [`some`](#some)\n *\n * @since 2.11.0\n */\n\nexports.exists = exports.some; // -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n\n/**\n * @since 2.9.0\n */\n\nexports.Do = /*#__PURE__*/exports.of(_.emptyRecord);\n/**\n * @since 2.8.0\n */\n\nexports.bindTo = /*#__PURE__*/Functor_1.bindTo(exports.Functor);\n/**\n * @since 2.8.0\n */\n\nexports.bind = /*#__PURE__*/Chain_1.bind(exports.Chain); // -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n\n/**\n * @since 2.8.0\n */\n\nexports.apS = /*#__PURE__*/Apply_1.apS(exports.Apply); // -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n// tslint:disable: deprecation\n\n/**\n * Use `NonEmptyArray` module instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\n\nexports.range = NEA.range;\n/**\n * Use a new `[]` instead.\n *\n * @since 2.0.0\n * @deprecated\n */\n\nexports.empty = [];\n/**\n * Use `prepend` instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\n\nexports.cons = NEA.cons;\n/**\n * Use `append` instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\n\nexports.snoc = NEA.snoc;\n/**\n * Use `prependAll` instead\n *\n * @category combinators\n * @since 2.9.0\n * @deprecated\n */\n\nexports.prependToAll = exports.prependAll;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nexports.array = {\n  URI: exports.URI,\n  compact: exports.compact,\n  separate: exports.separate,\n  map: _map,\n  ap: _ap,\n  of: exports.of,\n  chain: _chain,\n  filter: _filter,\n  filterMap: _filterMap,\n  partition: _partition,\n  partitionMap: _partitionMap,\n  mapWithIndex: _mapWithIndex,\n  partitionMapWithIndex: _partitionMapWithIndex,\n  partitionWithIndex: _partitionWithIndex,\n  filterMapWithIndex: _filterMapWithIndex,\n  filterWithIndex: _filterWithIndex,\n  alt: _alt,\n  zero: exports.zero,\n  unfold: exports.unfold,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  traverse: _traverse,\n  sequence: exports.sequence,\n  reduceWithIndex: _reduceWithIndex,\n  foldMapWithIndex: _foldMapWithIndex,\n  reduceRightWithIndex: _reduceRightWithIndex,\n  traverseWithIndex: _traverseWithIndex,\n  extend: _extend,\n  wither: _wither,\n  wilt: _wilt\n};","\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {\n    to[j] = from[i];\n  }\n\n  return to;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mapWithIndex = exports.map = exports.flatten = exports.duplicate = exports.extend = exports.chain = exports.ap = exports.alt = exports.altW = exports.chunksOf = exports.splitAt = exports.chop = exports.chainWithIndex = exports.foldMap = exports.foldMapWithIndex = exports.intersperse = exports.prependAll = exports.unzip = exports.zip = exports.zipWith = exports.of = exports.copy = exports.modifyAt = exports.updateAt = exports.insertAt = exports.sort = exports.groupBy = exports.group = exports.reverse = exports.concat = exports.concatW = exports.unappend = exports.unprepend = exports.range = exports.replicate = exports.makeBy = exports.fromArray = exports.fromReadonlyNonEmptyArray = exports.rotate = exports.union = exports.sortBy = exports.uniq = exports.unsafeUpdateAt = exports.unsafeInsertAt = exports.append = exports.appendW = exports.prepend = exports.prependW = exports.isOutOfBound = exports.isNonEmpty = void 0;\nexports.filterWithIndex = exports.filter = exports.groupSort = exports.updateLast = exports.modifyLast = exports.updateHead = exports.modifyHead = exports.matchRight = exports.matchLeft = exports.concatAll = exports.max = exports.min = exports.init = exports.last = exports.tail = exports.head = exports.apS = exports.bind = exports.bindTo = exports.Do = exports.Comonad = exports.Alt = exports.TraversableWithIndex = exports.Traversable = exports.FoldableWithIndex = exports.Foldable = exports.Monad = exports.chainFirst = exports.Chain = exports.Applicative = exports.apSecond = exports.apFirst = exports.Apply = exports.FunctorWithIndex = exports.Pointed = exports.flap = exports.Functor = exports.getUnionSemigroup = exports.getEq = exports.getSemigroup = exports.getShow = exports.URI = exports.extract = exports.traverseWithIndex = exports.sequence = exports.traverse = exports.reduceRightWithIndex = exports.reduceRight = exports.reduceWithIndex = exports.reduce = void 0;\nexports.nonEmptyArray = exports.fold = exports.prependToAll = exports.snoc = exports.cons = exports.unsnoc = exports.uncons = void 0;\n\nvar Apply_1 = require(\"./Apply\");\n\nvar Chain_1 = require(\"./Chain\");\n\nvar function_1 = require(\"./function\");\n\nvar Functor_1 = require(\"./Functor\");\n\nvar _ = __importStar(require(\"./internal\"));\n\nvar Ord_1 = require(\"./Ord\");\n\nvar RNEA = __importStar(require(\"./ReadonlyNonEmptyArray\")); // -------------------------------------------------------------------------------------\n// internal\n// -------------------------------------------------------------------------------------\n\n/**\n * @internal\n */\n\n\nvar isNonEmpty = function isNonEmpty(as) {\n  return as.length > 0;\n};\n\nexports.isNonEmpty = isNonEmpty;\n/**\n * @internal\n */\n\nvar isOutOfBound = function isOutOfBound(i, as) {\n  return i < 0 || i >= as.length;\n};\n\nexports.isOutOfBound = isOutOfBound;\n/**\n * @internal\n */\n\nvar prependW = function prependW(head) {\n  return function (tail) {\n    return __spreadArray([head], tail);\n  };\n};\n\nexports.prependW = prependW;\n/**\n * @internal\n */\n\nexports.prepend = exports.prependW;\n/**\n * @internal\n */\n\nvar appendW = function appendW(end) {\n  return function (init) {\n    return __spreadArray(__spreadArray([], init), [end]);\n  };\n};\n\nexports.appendW = appendW;\n/**\n * @internal\n */\n\nexports.append = exports.appendW;\n/**\n * @internal\n */\n\nvar unsafeInsertAt = function unsafeInsertAt(i, a, as) {\n  if (exports.isNonEmpty(as)) {\n    var xs = exports.fromReadonlyNonEmptyArray(as);\n    xs.splice(i, 0, a);\n    return xs;\n  }\n\n  return [a];\n};\n\nexports.unsafeInsertAt = unsafeInsertAt;\n/**\n * @internal\n */\n\nvar unsafeUpdateAt = function unsafeUpdateAt(i, a, as) {\n  var xs = exports.fromReadonlyNonEmptyArray(as);\n  xs[i] = a;\n  return xs;\n};\n\nexports.unsafeUpdateAt = unsafeUpdateAt;\n/**\n * Remove duplicates from a `NonEmptyArray`, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/NonEmptyArray'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])\n *\n * @category combinators\n * @since 2.11.0\n */\n\nvar uniq = function uniq(E) {\n  return function (as) {\n    if (as.length === 1) {\n      return exports.copy(as);\n    }\n\n    var out = [exports.head(as)];\n    var rest = exports.tail(as);\n\n    var _loop_1 = function _loop_1(a) {\n      if (out.every(function (o) {\n        return !E.equals(o, a);\n      })) {\n        out.push(a);\n      }\n    };\n\n    for (var _i = 0, rest_1 = rest; _i < rest_1.length; _i++) {\n      var a = rest_1[_i];\n\n      _loop_1(a);\n    }\n\n    return out;\n  };\n};\n\nexports.uniq = uniq;\n/**\n * Sort the elements of a `NonEmptyArray` in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import * as NEA from 'fp-ts/NonEmptyArray'\n * import { contramap } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Person {\n *   name: string\n *   age: number\n * }\n *\n * const byName = pipe(S.Ord, contramap((p: Person) => p.name))\n *\n * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))\n *\n * const sortByNameByAge = NEA.sortBy([byName, byAge])\n *\n * const persons: NEA.NonEmptyArray<Person> = [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 },\n *   { name: 'b', age: 2 }\n * ]\n *\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @category combinators\n * @since 2.11.0\n */\n\nvar sortBy = function sortBy(ords) {\n  if (exports.isNonEmpty(ords)) {\n    var M = Ord_1.getMonoid();\n    return exports.sort(ords.reduce(M.concat, M.empty));\n  }\n\n  return exports.copy;\n};\n\nexports.sortBy = sortBy;\n/**\n * @category combinators\n * @since 2.11.0\n */\n\nvar union = function union(E) {\n  var uniqE = exports.uniq(E);\n  return function (second) {\n    return function (first) {\n      return uniqE(function_1.pipe(first, concat(second)));\n    };\n  };\n};\n\nexports.union = union;\n/**\n * Rotate a `NonEmptyArray` by `n` steps.\n *\n * @example\n * import { rotate } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n * assert.deepStrictEqual(rotate(-2)([1, 2, 3, 4, 5]), [3, 4, 5, 1, 2])\n *\n * @category combinators\n * @since 2.11.0\n */\n\nvar rotate = function rotate(n) {\n  return function (as) {\n    var len = as.length;\n    var m = Math.round(n) % len;\n\n    if (exports.isOutOfBound(Math.abs(m), as) || m === 0) {\n      return exports.copy(as);\n    }\n\n    if (m < 0) {\n      var _a = exports.splitAt(-m)(as),\n          f = _a[0],\n          s = _a[1];\n\n      return function_1.pipe(s, concat(f));\n    } else {\n      return exports.rotate(m - len)(as);\n    }\n  };\n};\n\nexports.rotate = rotate; // -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n\n/**\n * @category constructors\n * @since 2.10.0\n */\n\nexports.fromReadonlyNonEmptyArray = _.fromReadonlyNonEmptyArray;\n/**\n * Builds a `NonEmptyArray` from an `Array` returning `none` if `as` is an empty array\n *\n * @category constructors\n * @since 2.0.0\n */\n\nvar fromArray = function fromArray(as) {\n  return exports.isNonEmpty(as) ? _.some(as) : _.none;\n};\n\nexports.fromArray = fromArray;\n/**\n * Return a `NonEmptyArray` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to a natural number.\n *\n * @example\n * import { makeBy } from 'fp-ts/NonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(pipe(5, makeBy(double)), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.11.0\n */\n\nvar makeBy = function makeBy(f) {\n  return function (n) {\n    var j = Math.max(0, Math.floor(n));\n    var out = [f(0)];\n\n    for (var i = 1; i < j; i++) {\n      out.push(f(i));\n    }\n\n    return out;\n  };\n};\n\nexports.makeBy = makeBy;\n/**\n * Create a `NonEmptyArray` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to a natural number.\n *\n * @example\n * import { replicate } from 'fp-ts/NonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(3, replicate('a')), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.11.0\n */\n\nvar replicate = function replicate(a) {\n  return exports.makeBy(function () {\n    return a;\n  });\n};\n\nexports.replicate = replicate;\n/**\n * Create a `NonEmptyArray` containing a range of integers, including both endpoints.\n *\n * @example\n * import { range } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(range(1, 5), [1, 2, 3, 4, 5])\n *\n * @category constructors\n * @since 2.11.0\n */\n\nvar range = function range(start, end) {\n  return start <= end ? exports.makeBy(function (i) {\n    return start + i;\n  })(end - start + 1) : [start];\n};\n\nexports.range = range; // -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n\n/**\n * Return the tuple of the `head` and the `tail`.\n *\n * @example\n * import { unprepend } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(unprepend([1, 2, 3]), [1, [2, 3]])\n *\n * @category destructors\n * @since 2.9.0\n */\n\nvar unprepend = function unprepend(as) {\n  return [exports.head(as), exports.tail(as)];\n};\n\nexports.unprepend = unprepend;\n/**\n * Return the tuple of the `init` and the `last`.\n *\n * @example\n * import { unappend } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(unappend([1, 2, 3, 4]), [[1, 2, 3], 4])\n *\n * @category destructors\n * @since 2.9.0\n */\n\nvar unappend = function unappend(as) {\n  return [exports.init(as), exports.last(as)];\n};\n\nexports.unappend = unappend;\n\nfunction concatW(second) {\n  return function (first) {\n    return first.concat(second);\n  };\n}\n\nexports.concatW = concatW;\n\nfunction concat(x, y) {\n  return y ? x.concat(y) : function (y) {\n    return y.concat(x);\n  };\n}\n\nexports.concat = concat;\n/**\n * @category combinators\n * @since 2.0.0\n */\n\nvar reverse = function reverse(as) {\n  return __spreadArray([exports.last(as)], as.slice(0, -1).reverse());\n};\n\nexports.reverse = reverse;\n\nfunction group(E) {\n  return function (as) {\n    var len = as.length;\n\n    if (len === 0) {\n      return [];\n    }\n\n    var out = [];\n    var head = as[0];\n    var nea = [head];\n\n    for (var i = 1; i < len; i++) {\n      var a = as[i];\n\n      if (E.equals(a, head)) {\n        nea.push(a);\n      } else {\n        out.push(nea);\n        head = a;\n        nea = [head];\n      }\n    }\n\n    out.push(nea);\n    return out;\n  };\n}\n\nexports.group = group;\n/**\n * Splits an array into sub-non-empty-arrays stored in an object, based on the result of calling a `string`-returning\n * function on each element, and grouping the results according to values returned\n *\n * @example\n * import { groupBy } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(groupBy((s: string) => String(s.length))(['a', 'b', 'ab']), {\n *   '1': ['a', 'b'],\n *   '2': ['ab']\n * })\n *\n * @category combinators\n * @since 2.0.0\n */\n\nvar groupBy = function groupBy(f) {\n  return function (as) {\n    var out = {};\n\n    for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n      var a = as_1[_i];\n      var k = f(a);\n\n      if (out.hasOwnProperty(k)) {\n        out[k].push(a);\n      } else {\n        out[k] = [a];\n      }\n    }\n\n    return out;\n  };\n};\n\nexports.groupBy = groupBy;\n/**\n * @category combinators\n * @since 2.0.0\n */\n\nvar sort = function sort(O) {\n  return function (as) {\n    return as.slice().sort(O.compare);\n  };\n};\n\nexports.sort = sort;\n/**\n * @category combinators\n * @since 2.0.0\n */\n\nvar insertAt = function insertAt(i, a) {\n  return function (as) {\n    return i < 0 || i > as.length ? _.none : _.some(exports.unsafeInsertAt(i, a, as));\n  };\n};\n\nexports.insertAt = insertAt;\n/**\n * @category combinators\n * @since 2.0.0\n */\n\nvar updateAt = function updateAt(i, a) {\n  return exports.modifyAt(i, function () {\n    return a;\n  });\n};\n\nexports.updateAt = updateAt;\n/**\n * @category combinators\n * @since 2.0.0\n */\n\nvar modifyAt = function modifyAt(i, f) {\n  return function (as) {\n    return exports.isOutOfBound(i, as) ? _.none : _.some(exports.unsafeUpdateAt(i, f(as[i]), as));\n  };\n};\n\nexports.modifyAt = modifyAt;\n/**\n * @category combinators\n * @since 2.0.0\n */\n\nexports.copy = exports.fromReadonlyNonEmptyArray;\n/**\n * @category Pointed\n * @since 2.0.0\n */\n\nvar of = function of(a) {\n  return [a];\n};\n\nexports.of = of;\n/**\n * @category combinators\n * @since 2.5.1\n */\n\nvar zipWith = function zipWith(as, bs, f) {\n  var cs = [f(as[0], bs[0])];\n  var len = Math.min(as.length, bs.length);\n\n  for (var i = 1; i < len; i++) {\n    cs[i] = f(as[i], bs[i]);\n  }\n\n  return cs;\n};\n\nexports.zipWith = zipWith;\n\nfunction zip(as, bs) {\n  if (bs === undefined) {\n    return function (bs) {\n      return zip(bs, as);\n    };\n  }\n\n  return exports.zipWith(as, bs, function (a, b) {\n    return [a, b];\n  });\n}\n\nexports.zip = zip;\n/**\n * @category combinators\n * @since 2.5.1\n */\n\nvar unzip = function unzip(abs) {\n  var fa = [abs[0][0]];\n  var fb = [abs[0][1]];\n\n  for (var i = 1; i < abs.length; i++) {\n    fa[i] = abs[i][0];\n    fb[i] = abs[i][1];\n  }\n\n  return [fa, fb];\n};\n\nexports.unzip = unzip;\n/**\n * Prepend an element to every member of an array\n *\n * @example\n * import { prependAll } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.10.0\n */\n\nvar prependAll = function prependAll(middle) {\n  return function (as) {\n    var out = [middle, as[0]];\n\n    for (var i = 1; i < as.length; i++) {\n      out.push(middle, as[i]);\n    }\n\n    return out;\n  };\n};\n\nexports.prependAll = prependAll;\n/**\n * Places an element in between members of an array\n *\n * @example\n * import { intersperse } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\n\nvar intersperse = function intersperse(middle) {\n  return function (as) {\n    var rest = exports.tail(as);\n    return exports.isNonEmpty(rest) ? function_1.pipe(rest, exports.prependAll(middle), exports.prepend(exports.head(as))) : exports.copy(as);\n  };\n};\n\nexports.intersperse = intersperse;\n/**\n * @category combinators\n * @since 2.0.0\n */\n\nexports.foldMapWithIndex = RNEA.foldMapWithIndex;\n/**\n * @category combinators\n * @since 2.0.0\n */\n\nexports.foldMap = RNEA.foldMap;\n/**\n * @category combinators\n * @since 2.10.0\n */\n\nvar chainWithIndex = function chainWithIndex(f) {\n  return function (as) {\n    var out = exports.fromReadonlyNonEmptyArray(f(0, exports.head(as)));\n\n    for (var i = 1; i < as.length; i++) {\n      out.push.apply(out, f(i, as[i]));\n    }\n\n    return out;\n  };\n};\n\nexports.chainWithIndex = chainWithIndex;\n/**\n * @category combinators\n * @since 2.10.0\n */\n\nvar chop = function chop(f) {\n  return function (as) {\n    var _a = f(as),\n        b = _a[0],\n        rest = _a[1];\n\n    var out = [b];\n    var next = rest;\n\n    while (exports.isNonEmpty(next)) {\n      var _b = f(next),\n          b_1 = _b[0],\n          rest_2 = _b[1];\n\n      out.push(b_1);\n      next = rest_2;\n    }\n\n    return out;\n  };\n};\n\nexports.chop = chop;\n/**\n * Splits a `NonEmptyArray` into two pieces, the first piece has max `n` elements.\n *\n * @category combinators\n * @since 2.10.0\n */\n\nvar splitAt = function splitAt(n) {\n  return function (as) {\n    var m = Math.max(1, n);\n    return m >= as.length ? [exports.copy(as), []] : [function_1.pipe(as.slice(1, m), exports.prepend(exports.head(as))), as.slice(m)];\n  };\n};\n\nexports.splitAt = splitAt;\n/**\n * @category combinators\n * @since 2.10.0\n */\n\nvar chunksOf = function chunksOf(n) {\n  return exports.chop(exports.splitAt(n));\n};\n\nexports.chunksOf = chunksOf; // -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n\n/* istanbul ignore next */\n\nvar _map = function _map(fa, f) {\n  return function_1.pipe(fa, exports.map(f));\n};\n/* istanbul ignore next */\n\n\nvar _mapWithIndex = function _mapWithIndex(fa, f) {\n  return function_1.pipe(fa, exports.mapWithIndex(f));\n};\n/* istanbul ignore next */\n\n\nvar _ap = function _ap(fab, fa) {\n  return function_1.pipe(fab, exports.ap(fa));\n};\n/* istanbul ignore next */\n\n\nvar _chain = function _chain(ma, f) {\n  return function_1.pipe(ma, exports.chain(f));\n};\n/* istanbul ignore next */\n\n\nvar _extend = function _extend(wa, f) {\n  return function_1.pipe(wa, exports.extend(f));\n};\n/* istanbul ignore next */\n\n\nvar _reduce = function _reduce(fa, b, f) {\n  return function_1.pipe(fa, exports.reduce(b, f));\n};\n/* istanbul ignore next */\n\n\nvar _foldMap = function _foldMap(M) {\n  var foldMapM = exports.foldMap(M);\n  return function (fa, f) {\n    return function_1.pipe(fa, foldMapM(f));\n  };\n};\n/* istanbul ignore next */\n\n\nvar _reduceRight = function _reduceRight(fa, b, f) {\n  return function_1.pipe(fa, exports.reduceRight(b, f));\n};\n/* istanbul ignore next */\n\n\nvar _traverse = function _traverse(F) {\n  var traverseF = exports.traverse(F);\n  return function (ta, f) {\n    return function_1.pipe(ta, traverseF(f));\n  };\n};\n/* istanbul ignore next */\n\n\nvar _alt = function _alt(fa, that) {\n  return function_1.pipe(fa, exports.alt(that));\n};\n/* istanbul ignore next */\n\n\nvar _reduceWithIndex = function _reduceWithIndex(fa, b, f) {\n  return function_1.pipe(fa, exports.reduceWithIndex(b, f));\n};\n/* istanbul ignore next */\n\n\nvar _foldMapWithIndex = function _foldMapWithIndex(M) {\n  var foldMapWithIndexM = exports.foldMapWithIndex(M);\n  return function (fa, f) {\n    return function_1.pipe(fa, foldMapWithIndexM(f));\n  };\n};\n/* istanbul ignore next */\n\n\nvar _reduceRightWithIndex = function _reduceRightWithIndex(fa, b, f) {\n  return function_1.pipe(fa, exports.reduceRightWithIndex(b, f));\n};\n/* istanbul ignore next */\n\n\nvar _traverseWithIndex = function _traverseWithIndex(F) {\n  var traverseWithIndexF = exports.traverseWithIndex(F);\n  return function (ta, f) {\n    return function_1.pipe(ta, traverseWithIndexF(f));\n  };\n}; // -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\n\n\nvar altW = function altW(that) {\n  return function (as) {\n    return function_1.pipe(as, concatW(that()));\n  };\n};\n\nexports.altW = altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.6.2\n */\n\nexports.alt = exports.altW;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.0.0\n */\n\nvar ap = function ap(as) {\n  return exports.chain(function (f) {\n    return function_1.pipe(as, exports.map(f));\n  });\n};\n\nexports.ap = ap;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.0.0\n */\n\nvar chain = function chain(f) {\n  return exports.chainWithIndex(function (_, a) {\n    return f(a);\n  });\n};\n\nexports.chain = chain;\n/**\n * @category Extend\n * @since 2.0.0\n */\n\nvar extend = function extend(f) {\n  return function (as) {\n    var next = exports.tail(as);\n    var out = [f(as)];\n\n    while (exports.isNonEmpty(next)) {\n      out.push(f(next));\n      next = exports.tail(next);\n    }\n\n    return out;\n  };\n};\n\nexports.extend = extend;\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexports.duplicate = /*#__PURE__*/exports.extend(function_1.identity);\n/**\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexports.flatten = /*#__PURE__*/exports.chain(function_1.identity);\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.0.0\n */\n\nvar map = function map(f) {\n  return exports.mapWithIndex(function (_, a) {\n    return f(a);\n  });\n};\n\nexports.map = map;\n/**\n * @category FunctorWithIndex\n * @since 2.0.0\n */\n\nvar mapWithIndex = function mapWithIndex(f) {\n  return function (as) {\n    var out = [f(0, exports.head(as))];\n\n    for (var i = 1; i < as.length; i++) {\n      out.push(f(i, as[i]));\n    }\n\n    return out;\n  };\n};\n\nexports.mapWithIndex = mapWithIndex;\n/**\n * @category Foldable\n * @since 2.0.0\n */\n\nexports.reduce = RNEA.reduce;\n/**\n * @category FoldableWithIndex\n * @since 2.0.0\n */\n\nexports.reduceWithIndex = RNEA.reduceWithIndex;\n/**\n * @category Foldable\n * @since 2.0.0\n */\n\nexports.reduceRight = RNEA.reduceRight;\n/**\n * @category FoldableWithIndex\n * @since 2.0.0\n */\n\nexports.reduceRightWithIndex = RNEA.reduceRightWithIndex;\n/**\n * @since 2.6.3\n */\n\nvar traverse = function traverse(F) {\n  var traverseWithIndexF = exports.traverseWithIndex(F);\n  return function (f) {\n    return traverseWithIndexF(function (_, a) {\n      return f(a);\n    });\n  };\n};\n\nexports.traverse = traverse;\n/**\n * @since 2.6.3\n */\n\nvar sequence = function sequence(F) {\n  return exports.traverseWithIndex(F)(function (_, a) {\n    return a;\n  });\n};\n\nexports.sequence = sequence;\n/**\n * @since 2.6.3\n */\n\nvar traverseWithIndex = function traverseWithIndex(F) {\n  return function (f) {\n    return function (as) {\n      var out = F.map(f(0, exports.head(as)), exports.of);\n\n      for (var i = 1; i < as.length; i++) {\n        out = F.ap(F.map(out, function (bs) {\n          return function (b) {\n            return function_1.pipe(bs, exports.append(b));\n          };\n        }), f(i, as[i]));\n      }\n\n      return out;\n    };\n  };\n};\n\nexports.traverseWithIndex = traverseWithIndex;\n/**\n * @since 2.7.0\n */\n\nexports.extract = RNEA.head; // -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n\n/**\n * @category instances\n * @since 2.0.0\n */\n\nexports.URI = 'NonEmptyArray';\n/**\n * @category instances\n * @since 2.0.0\n */\n\nexports.getShow = RNEA.getShow;\n/**\n * Builds a `Semigroup` instance for `NonEmptyArray`\n *\n * @category instances\n * @since 2.0.0\n */\n\nvar getSemigroup = function getSemigroup() {\n  return {\n    concat: concat\n  };\n};\n\nexports.getSemigroup = getSemigroup;\n/**\n * @example\n * import { getEq } from 'fp-ts/NonEmptyArray'\n * import * as N from 'fp-ts/number'\n *\n * const E = getEq(N.Eq)\n * assert.strictEqual(E.equals([1, 2], [1, 2]), true)\n * assert.strictEqual(E.equals([1, 2], [1, 3]), false)\n *\n * @category instances\n * @since 2.0.0\n */\n\nexports.getEq = RNEA.getEq;\n/**\n * @category combinators\n * @since 2.11.0\n */\n\nvar getUnionSemigroup = function getUnionSemigroup(E) {\n  var unionE = exports.union(E);\n  return {\n    concat: function concat(first, second) {\n      return unionE(second)(first);\n    }\n  };\n};\n\nexports.getUnionSemigroup = getUnionSemigroup;\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Functor = {\n  URI: exports.URI,\n  map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\n\nexports.flap = /*#__PURE__*/Functor_1.flap(exports.Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\n\nexports.Pointed = {\n  URI: exports.URI,\n  of: exports.of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.FunctorWithIndex = {\n  URI: exports.URI,\n  map: _map,\n  mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\n\nexports.Apply = {\n  URI: exports.URI,\n  map: _map,\n  ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexports.apFirst = /*#__PURE__*/Apply_1.apFirst(exports.Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexports.apSecond = /*#__PURE__*/Apply_1.apSecond(exports.Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Applicative = {\n  URI: exports.URI,\n  map: _map,\n  ap: _ap,\n  of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\n\nexports.Chain = {\n  URI: exports.URI,\n  map: _map,\n  ap: _ap,\n  chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexports.chainFirst = /*#__PURE__*/Chain_1.chainFirst(exports.Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Monad = {\n  URI: exports.URI,\n  map: _map,\n  ap: _ap,\n  of: exports.of,\n  chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Foldable = {\n  URI: exports.URI,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.FoldableWithIndex = {\n  URI: exports.URI,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  reduceWithIndex: _reduceWithIndex,\n  foldMapWithIndex: _foldMapWithIndex,\n  reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Traversable = {\n  URI: exports.URI,\n  map: _map,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  traverse: _traverse,\n  sequence: exports.sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.TraversableWithIndex = {\n  URI: exports.URI,\n  map: _map,\n  mapWithIndex: _mapWithIndex,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  traverse: _traverse,\n  sequence: exports.sequence,\n  reduceWithIndex: _reduceWithIndex,\n  foldMapWithIndex: _foldMapWithIndex,\n  reduceRightWithIndex: _reduceRightWithIndex,\n  traverseWithIndex: _traverseWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Alt = {\n  URI: exports.URI,\n  map: _map,\n  alt: _alt\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Comonad = {\n  URI: exports.URI,\n  map: _map,\n  extend: _extend,\n  extract: exports.extract\n}; // -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n\n/**\n * @since 2.9.0\n */\n\nexports.Do = /*#__PURE__*/exports.of(_.emptyRecord);\n/**\n * @since 2.8.0\n */\n\nexports.bindTo = /*#__PURE__*/Functor_1.bindTo(exports.Functor);\n/**\n * @since 2.8.0\n */\n\nexports.bind = /*#__PURE__*/Chain_1.bind(exports.Chain); // -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n\n/**\n * @since 2.8.0\n */\n\nexports.apS = /*#__PURE__*/Apply_1.apS(exports.Apply); // -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n\n/**\n * @since 2.0.0\n */\n\nexports.head = RNEA.head;\n/**\n * @since 2.0.0\n */\n\nvar tail = function tail(as) {\n  return as.slice(1);\n};\n\nexports.tail = tail;\n/**\n * @since 2.0.0\n */\n\nexports.last = RNEA.last;\n/**\n * Get all but the last element of a non empty array, creating a new array.\n *\n * @example\n * import { init } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), [1, 2])\n * assert.deepStrictEqual(init([1]), [])\n *\n * @since 2.2.0\n */\n\nvar init = function init(as) {\n  return as.slice(0, -1);\n};\n\nexports.init = init;\n/**\n * @since 2.0.0\n */\n\nexports.min = RNEA.min;\n/**\n * @since 2.0.0\n */\n\nexports.max = RNEA.max;\n/**\n * @since 2.10.0\n */\n\nvar concatAll = function concatAll(S) {\n  return function (as) {\n    return as.reduce(S.concat);\n  };\n};\n\nexports.concatAll = concatAll;\n/**\n * Break an `Array` into its first element and remaining elements.\n *\n * @category destructors\n * @since 2.11.0\n */\n\nvar matchLeft = function matchLeft(f) {\n  return function (as) {\n    return f(exports.head(as), exports.tail(as));\n  };\n};\n\nexports.matchLeft = matchLeft;\n/**\n * Break an `Array` into its initial elements and the last element.\n *\n * @category destructors\n * @since 2.11.0\n */\n\nvar matchRight = function matchRight(f) {\n  return function (as) {\n    return f(exports.init(as), exports.last(as));\n  };\n};\n\nexports.matchRight = matchRight;\n/**\n * Apply a function to the head, creating a new `NonEmptyArray`.\n *\n * @since 2.11.0\n */\n\nvar modifyHead = function modifyHead(f) {\n  return function (as) {\n    return __spreadArray([f(exports.head(as))], exports.tail(as));\n  };\n};\n\nexports.modifyHead = modifyHead;\n/**\n * Change the head, creating a new `NonEmptyArray`.\n *\n * @category combinators\n * @since 2.11.0\n */\n\nvar updateHead = function updateHead(a) {\n  return exports.modifyHead(function () {\n    return a;\n  });\n};\n\nexports.updateHead = updateHead;\n/**\n * Apply a function to the last element, creating a new `NonEmptyArray`.\n *\n * @since 2.11.0\n */\n\nvar modifyLast = function modifyLast(f) {\n  return function (as) {\n    return function_1.pipe(exports.init(as), exports.append(f(exports.last(as))));\n  };\n};\n\nexports.modifyLast = modifyLast;\n/**\n * Change the last element, creating a new `NonEmptyArray`.\n *\n * @category combinators\n * @since 2.11.0\n */\n\nvar updateLast = function updateLast(a) {\n  return exports.modifyLast(function () {\n    return a;\n  });\n};\n\nexports.updateLast = updateLast;\n\nfunction groupSort(O) {\n  var sortO = exports.sort(O);\n  var groupO = group(O);\n  return function (as) {\n    return exports.isNonEmpty(as) ? groupO(sortO(as)) : [];\n  };\n}\n\nexports.groupSort = groupSort;\n\nfunction filter(predicate) {\n  return exports.filterWithIndex(function (_, a) {\n    return predicate(a);\n  });\n}\n\nexports.filter = filter;\n/**\n * Use [`filterWithIndex`](./Array.ts.html#filterwithindex) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\n\nvar filterWithIndex = function filterWithIndex(predicate) {\n  return function (as) {\n    return exports.fromArray(as.filter(function (a, i) {\n      return predicate(i, a);\n    }));\n  };\n};\n\nexports.filterWithIndex = filterWithIndex;\n/**\n * Use [`unprepend`](#unprepend) instead.\n *\n * @category destructors\n * @since 2.9.0\n * @deprecated\n */\n\nexports.uncons = exports.unprepend;\n/**\n * Use [`unappend`](#unappend) instead.\n *\n * @category destructors\n * @since 2.9.0\n * @deprecated\n */\n\nexports.unsnoc = exports.unappend;\n\nfunction cons(head, tail) {\n  return tail === undefined ? exports.prepend(head) : function_1.pipe(tail, exports.prepend(head));\n}\n\nexports.cons = cons;\n/**\n * Use [`append`](./Array.ts.html#append) instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\n\nvar snoc = function snoc(init, end) {\n  return function_1.pipe(init, exports.append(end));\n};\n\nexports.snoc = snoc;\n/**\n * Use [`prependAll`](#prependall) instead.\n *\n * @category combinators\n * @since 2.9.0\n * @deprecated\n */\n\nexports.prependToAll = exports.prependAll;\n/**\n * Use [`concatAll`](#concatall) instead.\n *\n * @since 2.5.0\n * @deprecated\n */\n\nexports.fold = RNEA.concatAll;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nexports.nonEmptyArray = {\n  URI: exports.URI,\n  of: exports.of,\n  map: _map,\n  mapWithIndex: _mapWithIndex,\n  ap: _ap,\n  chain: _chain,\n  extend: _extend,\n  extract: exports.extract,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  traverse: _traverse,\n  sequence: exports.sequence,\n  reduceWithIndex: _reduceWithIndex,\n  foldMapWithIndex: _foldMapWithIndex,\n  reduceRightWithIndex: _reduceRightWithIndex,\n  traverseWithIndex: _traverseWithIndex,\n  alt: _alt\n};","\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {\n    to[j] = from[i];\n  }\n\n  return to;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sort = exports.lefts = exports.rights = exports.reverse = exports.modifyAt = exports.deleteAt = exports.updateAt = exports.insertAt = exports.findLastIndex = exports.findLastMap = exports.findLast = exports.findFirstMap = exports.findFirst = exports.findIndex = exports.dropLeftWhile = exports.dropRight = exports.dropLeft = exports.spanLeft = exports.takeLeftWhile = exports.takeRight = exports.takeLeft = exports.init = exports.tail = exports.last = exports.head = exports.lookup = exports.isOutOfBound = exports.size = exports.scanRight = exports.scanLeft = exports.chainWithIndex = exports.foldRight = exports.matchRight = exports.matchRightW = exports.foldLeft = exports.matchLeft = exports.matchLeftW = exports.match = exports.matchW = exports.fromEither = exports.fromOption = exports.fromPredicate = exports.replicate = exports.makeBy = exports.appendW = exports.append = exports.prependW = exports.prepend = exports.isNonEmpty = exports.isEmpty = void 0;\nexports.sequence = exports.traverse = exports.reduceRightWithIndex = exports.reduceRight = exports.reduceWithIndex = exports.foldMap = exports.reduce = exports.foldMapWithIndex = exports.duplicate = exports.extend = exports.filterWithIndex = exports.partitionMapWithIndex = exports.partitionMap = exports.partitionWithIndex = exports.partition = exports.compact = exports.filterMap = exports.filterMapWithIndex = exports.filter = exports.separate = exports.mapWithIndex = exports.map = exports.flatten = exports.chain = exports.ap = exports.alt = exports.altW = exports.zero = exports.of = exports._chainRecBreadthFirst = exports._chainRecDepthFirst = exports.difference = exports.intersection = exports.union = exports.concat = exports.concatW = exports.comprehension = exports.fromOptionK = exports.chunksOf = exports.splitAt = exports.chop = exports.sortBy = exports.uniq = exports.elem = exports.rotate = exports.intersperse = exports.prependAll = exports.unzip = exports.zip = exports.zipWith = void 0;\nexports.toArray = exports.unsafeDeleteAt = exports.unsafeUpdateAt = exports.unsafeInsertAt = exports.fromEitherK = exports.FromEither = exports.filterE = exports.Witherable = exports.ChainRecBreadthFirst = exports.chainRecBreadthFirst = exports.ChainRecDepthFirst = exports.chainRecDepthFirst = exports.TraversableWithIndex = exports.Traversable = exports.FoldableWithIndex = exports.Foldable = exports.FilterableWithIndex = exports.Filterable = exports.Compactable = exports.Extend = exports.Alternative = exports.guard = exports.Zero = exports.Alt = exports.Unfoldable = exports.chainFirst = exports.Monad = exports.Chain = exports.Applicative = exports.apSecond = exports.apFirst = exports.Apply = exports.FunctorWithIndex = exports.Pointed = exports.flap = exports.Functor = exports.getDifferenceMagma = exports.getIntersectionSemigroup = exports.getUnionMonoid = exports.getUnionSemigroup = exports.getOrd = exports.getEq = exports.getMonoid = exports.getSemigroup = exports.getShow = exports.URI = exports.unfold = exports.wilt = exports.wither = exports.traverseWithIndex = void 0;\nexports.readonlyArray = exports.prependToAll = exports.snoc = exports.cons = exports.range = exports.apS = exports.bind = exports.bindTo = exports.Do = exports.exists = exports.some = exports.every = exports.empty = exports.fromArray = void 0;\n\nvar Apply_1 = require(\"./Apply\");\n\nvar Chain_1 = require(\"./Chain\");\n\nvar Eq_1 = require(\"./Eq\");\n\nvar FromEither_1 = require(\"./FromEither\");\n\nvar function_1 = require(\"./function\");\n\nvar Functor_1 = require(\"./Functor\");\n\nvar _ = __importStar(require(\"./internal\"));\n\nvar N = __importStar(require(\"./number\"));\n\nvar Ord_1 = require(\"./Ord\");\n\nvar RNEA = __importStar(require(\"./ReadonlyNonEmptyArray\"));\n\nvar Separated_1 = require(\"./Separated\");\n\nvar Witherable_1 = require(\"./Witherable\");\n\nvar Zero_1 = require(\"./Zero\"); // -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n\n/**\n * Test whether a `ReadonlyArray` is empty.\n *\n * @example\n * import { isEmpty } from 'fp-ts/ReadonlyArray'\n *\n * assert.strictEqual(isEmpty([]), true)\n *\n * @category refinements\n * @since 2.5.0\n */\n\n\nvar isEmpty = function isEmpty(as) {\n  return as.length === 0;\n};\n\nexports.isEmpty = isEmpty;\n/**\n * Test whether a `ReadonlyArray` is non empty.\n *\n * @category refinements\n * @since 2.5.0\n */\n\nexports.isNonEmpty = RNEA.isNonEmpty; // -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n\n/**\n * Prepend an element to the front of a `ReadonlyArray`, creating a new `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { prepend } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([2, 3, 4], prepend(1)), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.10.0\n */\n\nexports.prepend = RNEA.prepend;\n/**\n * Less strict version of [`prepend`](#prepend).\n *\n * @category constructors\n * @since 2.11.0\n */\n\nexports.prependW = RNEA.prependW;\n/**\n * Append an element to the end of a `ReadonlyArray`, creating a new `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { append } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], append(4)), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.10.0\n */\n\nexports.append = RNEA.append;\n/**\n * Less strict version of [`append`](#append).\n *\n * @category constructors\n * @since 2.11.0\n */\n\nexports.appendW = RNEA.appendW;\n/**\n * Return a `ReadonlyArray` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { makeBy } from 'fp-ts/ReadonlyArray'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(makeBy(5, double), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.5.0\n */\n\nvar makeBy = function makeBy(n, f) {\n  return n <= 0 ? exports.empty : RNEA.makeBy(f)(n);\n};\n\nexports.makeBy = makeBy;\n/**\n * Create a `ReadonlyArray` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { replicate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(replicate(3, 'a'), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.5.0\n */\n\nvar replicate = function replicate(n, a) {\n  return exports.makeBy(n, function () {\n    return a;\n  });\n};\n\nexports.replicate = replicate;\n\nfunction fromPredicate(predicate) {\n  return function (a) {\n    return predicate(a) ? [a] : exports.empty;\n  };\n}\n\nexports.fromPredicate = fromPredicate; // -------------------------------------------------------------------------------------\n// natural transformations\n// -------------------------------------------------------------------------------------\n\n/**\n * @category natural transformations\n * @since 2.11.0\n */\n\nvar fromOption = function fromOption(ma) {\n  return _.isNone(ma) ? exports.empty : [ma.value];\n};\n\nexports.fromOption = fromOption;\n/**\n * Transforms an `Either` to a `ReadonlyArray`.\n *\n * @category natural transformations\n * @since 2.11.0\n */\n\nvar fromEither = function fromEither(e) {\n  return _.isLeft(e) ? exports.empty : [e.right];\n};\n\nexports.fromEither = fromEither; // -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n\n/**\n * Less strict version of [`match`](#match).\n *\n * @category destructors\n * @since 2.11.0\n */\n\nvar matchW = function matchW(onEmpty, onNonEmpty) {\n  return function (as) {\n    return exports.isNonEmpty(as) ? onNonEmpty(as) : onEmpty();\n  };\n};\n\nexports.matchW = matchW;\n/**\n * @category destructors\n * @since 2.11.0\n */\n\nexports.match = exports.matchW;\n/**\n * Less strict version of [`matchLeft`](#matchleft).\n *\n * @category destructors\n * @since 2.11.0\n */\n\nvar matchLeftW = function matchLeftW(onEmpty, onNonEmpty) {\n  return function (as) {\n    return exports.isNonEmpty(as) ? onNonEmpty(RNEA.head(as), RNEA.tail(as)) : onEmpty();\n  };\n};\n\nexports.matchLeftW = matchLeftW;\n/**\n * Break a `ReadonlyArray` into its first element and remaining elements.\n *\n * @example\n * import { matchLeft } from 'fp-ts/ReadonlyArray'\n *\n * const len: <A>(as: ReadonlyArray<A>) => number = matchLeft(() => 0, (_, tail) => 1 + len(tail))\n * assert.strictEqual(len([1, 2, 3]), 3)\n *\n * @category destructors\n * @since 2.10.0\n */\n\nexports.matchLeft = exports.matchLeftW;\n/**\n * Alias of [`matchLeft`](#matchleft).\n *\n * @category destructors\n * @since 2.5.0\n */\n\nexports.foldLeft = exports.matchLeft;\n/**\n * Less strict version of [`matchRight`](#matchright).\n *\n * @category destructors\n * @since 2.11.0\n */\n\nvar matchRightW = function matchRightW(onEmpty, onNonEmpty) {\n  return function (as) {\n    return exports.isNonEmpty(as) ? onNonEmpty(RNEA.init(as), RNEA.last(as)) : onEmpty();\n  };\n};\n\nexports.matchRightW = matchRightW;\n/**\n * Break a `ReadonlyArray` into its initial elements and the last element.\n *\n * @category destructors\n * @since 2.10.0\n */\n\nexports.matchRight = exports.matchRightW;\n/**\n * Alias of [`matchRight`](#matchright).\n *\n * @category destructors\n * @since 2.5.0\n */\n\nexports.foldRight = exports.matchRight; // -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n\n/**\n * @category combinators\n * @since 2.7.0\n */\n\nvar chainWithIndex = function chainWithIndex(f) {\n  return function (as) {\n    if (exports.isEmpty(as)) {\n      return exports.empty;\n    }\n\n    var out = [];\n\n    for (var i = 0; i < as.length; i++) {\n      out.push.apply(out, f(i, as[i]));\n    }\n\n    return out;\n  };\n};\n\nexports.chainWithIndex = chainWithIndex;\n/**\n * Same as `reduce` but it carries over the intermediate steps.\n *\n * @example\n * import { scanLeft } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(scanLeft(10, (b, a: number) => b - a)([1, 2, 3]), [10, 9, 7, 4])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nvar scanLeft = function scanLeft(b, f) {\n  return function (as) {\n    var len = as.length;\n    var out = new Array(len + 1);\n    out[0] = b;\n\n    for (var i = 0; i < len; i++) {\n      out[i + 1] = f(out[i], as[i]);\n    }\n\n    return out;\n  };\n};\n\nexports.scanLeft = scanLeft;\n/**\n * Fold an array from the right, keeping all intermediate results instead of only the final result\n *\n * @example\n * import { scanRight } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(scanRight(10, (a: number, b) => b - a)([1, 2, 3]), [4, 5, 7, 10])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nvar scanRight = function scanRight(b, f) {\n  return function (as) {\n    var len = as.length;\n    var out = new Array(len + 1);\n    out[len] = b;\n\n    for (var i = len - 1; i >= 0; i--) {\n      out[i] = f(as[i], out[i + 1]);\n    }\n\n    return out;\n  };\n};\n\nexports.scanRight = scanRight;\n/**\n * Calculate the number of elements in a `ReadonlyArray`.\n *\n * @since 2.10.0\n */\n\nvar size = function size(as) {\n  return as.length;\n};\n\nexports.size = size;\n/**\n * Test whether an array contains a particular index\n *\n * @since 2.5.0\n */\n\nexports.isOutOfBound = RNEA.isOutOfBound;\n\nfunction lookup(i, as) {\n  return as === undefined ? function (as) {\n    return lookup(i, as);\n  } : exports.isOutOfBound(i, as) ? _.none : _.some(as[i]);\n}\n\nexports.lookup = lookup;\n/**\n * Get the first element in an array, or `None` if the array is empty\n *\n * @example\n * import { head } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(head([1, 2, 3]), some(1))\n * assert.deepStrictEqual(head([]), none)\n *\n * @since 2.5.0\n */\n\nvar head = function head(as) {\n  return exports.isNonEmpty(as) ? _.some(RNEA.head(as)) : _.none;\n};\n\nexports.head = head;\n/**\n * Get the last element in an array, or `None` if the array is empty\n *\n * @example\n * import { last } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(last([1, 2, 3]), some(3))\n * assert.deepStrictEqual(last([]), none)\n *\n * @since 2.5.0\n */\n\nvar last = function last(as) {\n  return exports.isNonEmpty(as) ? _.some(RNEA.last(as)) : _.none;\n};\n\nexports.last = last;\n/**\n * Get all but the first element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { tail } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(tail([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(tail([]), none)\n *\n * @since 2.5.0\n */\n\nvar tail = function tail(as) {\n  return exports.isNonEmpty(as) ? _.some(RNEA.tail(as)) : _.none;\n};\n\nexports.tail = tail;\n/**\n * Get all but the last element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { init } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), some([1, 2]))\n * assert.deepStrictEqual(init([]), none)\n *\n * @since 2.5.0\n */\n\nvar init = function init(as) {\n  return exports.isNonEmpty(as) ? _.some(RNEA.init(as)) : _.none;\n};\n\nexports.init = init;\n/**\n * Keep only a max number of elements from the start of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.takeLeft(2)), [1, 2])\n *\n * // out of bounds\n * assert.strictEqual(pipe(input, RA.takeLeft(4)), input)\n * assert.strictEqual(pipe(input, RA.takeLeft(-1)), input)\n *\n * @category combinators\n * @since 2.5.0\n */\n\nvar takeLeft = function takeLeft(n) {\n  return function (as) {\n    return exports.isOutOfBound(n, as) ? as : n === 0 ? exports.empty : as.slice(0, n);\n  };\n};\n\nexports.takeLeft = takeLeft;\n/**\n * Keep only a max number of elements from the end of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.takeRight(2)), [2, 3])\n *\n * // out of bounds\n * assert.strictEqual(pipe(input, RA.takeRight(4)), input)\n * assert.strictEqual(pipe(input, RA.takeRight(-1)), input)\n *\n * @category combinators\n * @since 2.5.0\n */\n\nvar takeRight = function takeRight(n) {\n  return function (as) {\n    return exports.isOutOfBound(n, as) ? as : n === 0 ? exports.empty : as.slice(-n);\n  };\n};\n\nexports.takeRight = takeRight;\n\nfunction takeLeftWhile(predicate) {\n  return function (as) {\n    var out = [];\n\n    for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n      var a = as_1[_i];\n\n      if (!predicate(a)) {\n        break;\n      }\n\n      out.push(a);\n    }\n\n    var len = out.length;\n    return len === as.length ? as : len === 0 ? exports.empty : out;\n  };\n}\n\nexports.takeLeftWhile = takeLeftWhile;\n\nvar spanLeftIndex = function spanLeftIndex(as, predicate) {\n  var l = as.length;\n  var i = 0;\n\n  for (; i < l; i++) {\n    if (!predicate(as[i])) {\n      break;\n    }\n  }\n\n  return i;\n};\n\nfunction spanLeft(predicate) {\n  return function (as) {\n    var _a = exports.splitAt(spanLeftIndex(as, predicate))(as),\n        init = _a[0],\n        rest = _a[1];\n\n    return {\n      init: init,\n      rest: rest\n    };\n  };\n}\n\nexports.spanLeft = spanLeft;\n/**\n * Drop a max number of elements from the start of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.dropLeft(2)), [3])\n * assert.strictEqual(pipe(input, RA.dropLeft(0)), input)\n * assert.strictEqual(pipe(input, RA.dropLeft(-1)), input)\n *\n * @category combinators\n * @since 2.5.0\n */\n\nvar dropLeft = function dropLeft(n) {\n  return function (as) {\n    return n <= 0 || exports.isEmpty(as) ? as : n >= as.length ? exports.empty : as.slice(n, as.length);\n  };\n};\n\nexports.dropLeft = dropLeft;\n/**\n * Drop a max number of elements from the end of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.dropRight(2)), [1])\n * assert.strictEqual(pipe(input, RA.dropRight(0)), input)\n * assert.strictEqual(pipe(input, RA.dropRight(-1)), input)\n *\n * @category combinators\n * @since 2.5.0\n */\n\nvar dropRight = function dropRight(n) {\n  return function (as) {\n    return n <= 0 || exports.isEmpty(as) ? as : n >= as.length ? exports.empty : as.slice(0, as.length - n);\n  };\n};\n\nexports.dropRight = dropRight;\n\nfunction dropLeftWhile(predicate) {\n  return function (as) {\n    var i = spanLeftIndex(as, predicate);\n    return i === 0 ? as : i === as.length ? exports.empty : as.slice(i);\n  };\n}\n\nexports.dropLeftWhile = dropLeftWhile;\n/**\n * Find the first index for which a predicate holds\n *\n * @example\n * import { findIndex } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([1, 2, 3]), some(1))\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([]), none)\n *\n * @since 2.5.0\n */\n\nvar findIndex = function findIndex(predicate) {\n  return function (as) {\n    for (var i = 0; i < as.length; i++) {\n      if (predicate(as[i])) {\n        return _.some(i);\n      }\n    }\n\n    return _.none;\n  };\n};\n\nexports.findIndex = findIndex;\n\nfunction findFirst(predicate) {\n  return function (as) {\n    for (var i = 0; i < as.length; i++) {\n      if (predicate(as[i])) {\n        return _.some(as[i]);\n      }\n    }\n\n    return _.none;\n  };\n}\n\nexports.findFirst = findFirst;\n/**\n * Find the first element returned by an option based selector function\n *\n * @example\n * import { findFirstMap } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age?: number\n * }\n *\n * const persons: ReadonlyArray<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the first person that has an age\n * assert.deepStrictEqual(findFirstMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Mary'))\n *\n * @since 2.5.0\n */\n\nvar findFirstMap = function findFirstMap(f) {\n  return function (as) {\n    for (var i = 0; i < as.length; i++) {\n      var out = f(as[i]);\n\n      if (_.isSome(out)) {\n        return out;\n      }\n    }\n\n    return _.none;\n  };\n};\n\nexports.findFirstMap = findFirstMap;\n\nfunction findLast(predicate) {\n  return function (as) {\n    for (var i = as.length - 1; i >= 0; i--) {\n      if (predicate(as[i])) {\n        return _.some(as[i]);\n      }\n    }\n\n    return _.none;\n  };\n}\n\nexports.findLast = findLast;\n/**\n * Find the last element returned by an option based selector function\n *\n * @example\n * import { findLastMap } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age?: number\n * }\n *\n * const persons: ReadonlyArray<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the last person that has an age\n * assert.deepStrictEqual(findLastMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Joey'))\n *\n * @since 2.5.0\n */\n\nvar findLastMap = function findLastMap(f) {\n  return function (as) {\n    for (var i = as.length - 1; i >= 0; i--) {\n      var out = f(as[i]);\n\n      if (_.isSome(out)) {\n        return out;\n      }\n    }\n\n    return _.none;\n  };\n};\n\nexports.findLastMap = findLastMap;\n/**\n * Returns the index of the last element of the list which matches the predicate\n *\n * @example\n * import { findLastIndex } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface X {\n *   readonly a: number\n *   readonly b: number\n * }\n * const xs: ReadonlyArray<X> = [{ a: 1, b: 0 }, { a: 1, b: 1 }]\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 1)(xs), some(1))\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 4)(xs), none)\n *\n *\n * @since 2.5.0\n */\n\nvar findLastIndex = function findLastIndex(predicate) {\n  return function (as) {\n    for (var i = as.length - 1; i >= 0; i--) {\n      if (predicate(as[i])) {\n        return _.some(i);\n      }\n    }\n\n    return _.none;\n  };\n};\n\nexports.findLastIndex = findLastIndex;\n/**\n * Insert an element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { insertAt } from 'fp-ts/ReadonlyArray'\n * import { some } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(insertAt(2, 5)([1, 2, 3, 4]), some([1, 2, 5, 3, 4]))\n *\n * @since 2.5.0\n */\n\nvar insertAt = function insertAt(i, a) {\n  return function (as) {\n    return i < 0 || i > as.length ? _.none : _.some(RNEA.unsafeInsertAt(i, a, as));\n  };\n};\n\nexports.insertAt = insertAt;\n/**\n * Change the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { updateAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(updateAt(1, 1)([1, 2, 3]), some([1, 1, 3]))\n * assert.deepStrictEqual(updateAt(1, 1)([]), none)\n *\n * @since 2.5.0\n */\n\nvar updateAt = function updateAt(i, a) {\n  return exports.modifyAt(i, function () {\n    return a;\n  });\n};\n\nexports.updateAt = updateAt;\n/**\n * Delete the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { deleteAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(deleteAt(0)([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(deleteAt(1)([]), none)\n *\n * @since 2.5.0\n */\n\nvar deleteAt = function deleteAt(i) {\n  return function (as) {\n    return exports.isOutOfBound(i, as) ? _.none : _.some(exports.unsafeDeleteAt(i, as));\n  };\n};\n\nexports.deleteAt = deleteAt;\n/**\n * Apply a function to the element at the specified index, creating a new array, or returning `None` if the index is out\n * of bounds\n *\n * @example\n * import { modifyAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * const double = (x: number): number => x * 2\n * assert.deepStrictEqual(modifyAt(1, double)([1, 2, 3]), some([1, 4, 3]))\n * assert.deepStrictEqual(modifyAt(1, double)([]), none)\n *\n * @since 2.5.0\n */\n\nvar modifyAt = function modifyAt(i, f) {\n  return function (as) {\n    return exports.isOutOfBound(i, as) ? _.none : _.some(exports.unsafeUpdateAt(i, f(as[i]), as));\n  };\n};\n\nexports.modifyAt = modifyAt;\n/**\n * Reverse an array, creating a new array\n *\n * @example\n * import { reverse } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(reverse([1, 2, 3]), [3, 2, 1])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nvar reverse = function reverse(as) {\n  return as.length <= 1 ? as : as.slice().reverse();\n};\n\nexports.reverse = reverse;\n/**\n * Extracts from an array of `Either` all the `Right` elements. All the `Right` elements are extracted in order\n *\n * @example\n * import { rights } from 'fp-ts/ReadonlyArray'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(rights([right(1), left('foo'), right(2)]), [1, 2])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nvar rights = function rights(as) {\n  var r = [];\n\n  for (var i = 0; i < as.length; i++) {\n    var a = as[i];\n\n    if (a._tag === 'Right') {\n      r.push(a.right);\n    }\n  }\n\n  return r;\n};\n\nexports.rights = rights;\n/**\n * Extracts from an array of `Either` all the `Left` elements. All the `Left` elements are extracted in order\n *\n * @example\n * import { lefts } from 'fp-ts/ReadonlyArray'\n * import { left, right } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(lefts([right(1), left('foo'), right(2)]), ['foo'])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nvar lefts = function lefts(as) {\n  var r = [];\n\n  for (var i = 0; i < as.length; i++) {\n    var a = as[i];\n\n    if (a._tag === 'Left') {\n      r.push(a.left);\n    }\n  }\n\n  return r;\n};\n\nexports.lefts = lefts;\n/**\n * Sort the elements of an array in increasing order, creating a new array\n *\n * @example\n * import { sort } from 'fp-ts/ReadonlyArray'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(sort(N.Ord)([3, 2, 1]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nvar sort = function sort(O) {\n  return function (as) {\n    return as.length <= 1 ? as : as.slice().sort(O.compare);\n  };\n};\n\nexports.sort = sort; // TODO: curry and make data-last in v3\n\n/**\n * Apply a function to pairs of elements at the same index in two arrays, collecting the results in a new array. If one\n * input array is short, excess elements of the longer array are discarded.\n *\n * @example\n * import { zipWith } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(zipWith([1, 2, 3], ['a', 'b', 'c', 'd'], (n, s) => s + n), ['a1', 'b2', 'c3'])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nvar zipWith = function zipWith(fa, fb, f) {\n  var fc = [];\n  var len = Math.min(fa.length, fb.length);\n\n  for (var i = 0; i < len; i++) {\n    fc[i] = f(fa[i], fb[i]);\n  }\n\n  return fc;\n};\n\nexports.zipWith = zipWith;\n\nfunction zip(as, bs) {\n  if (bs === undefined) {\n    return function (bs) {\n      return zip(bs, as);\n    };\n  }\n\n  return exports.zipWith(as, bs, function (a, b) {\n    return [a, b];\n  });\n}\n\nexports.zip = zip;\n/**\n * The function is reverse of `zip`. Takes an array of pairs and return two corresponding arrays\n *\n * @example\n * import { unzip } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(unzip([[1, 'a'], [2, 'b'], [3, 'c']]), [[1, 2, 3], ['a', 'b', 'c']])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nvar unzip = function unzip(as) {\n  var fa = [];\n  var fb = [];\n\n  for (var i = 0; i < as.length; i++) {\n    fa[i] = as[i][0];\n    fb[i] = as[i][1];\n  }\n\n  return [fa, fb];\n};\n\nexports.unzip = unzip;\n/**\n * Prepend an element to every member of an array\n *\n * @example\n * import { prependAll } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.10.0\n */\n\nvar prependAll = function prependAll(middle) {\n  var f = RNEA.prependAll(middle);\n  return function (as) {\n    return exports.isNonEmpty(as) ? f(as) : as;\n  };\n};\n\nexports.prependAll = prependAll;\n/**\n * Places an element in between members of an array\n *\n * @example\n * import { intersperse } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\n\nvar intersperse = function intersperse(middle) {\n  var f = RNEA.intersperse(middle);\n  return function (as) {\n    return exports.isNonEmpty(as) ? f(as) : as;\n  };\n};\n\nexports.intersperse = intersperse;\n/**\n * Rotate a `ReadonlyArray` by `n` steps.\n *\n * @example\n * import { rotate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nvar rotate = function rotate(n) {\n  var f = RNEA.rotate(n);\n  return function (as) {\n    return exports.isNonEmpty(as) ? f(as) : as;\n  };\n};\n\nexports.rotate = rotate;\n\nfunction elem(E) {\n  return function (a, as) {\n    if (as === undefined) {\n      var elemE_1 = elem(E);\n      return function (as) {\n        return elemE_1(a, as);\n      };\n    }\n\n    var predicate = function predicate(element) {\n      return E.equals(element, a);\n    };\n\n    var i = 0;\n\n    for (; i < as.length; i++) {\n      if (predicate(as[i])) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n}\n\nexports.elem = elem;\n/**\n * Remove duplicates from an array, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/ReadonlyArray'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nvar uniq = function uniq(E) {\n  var f = RNEA.uniq(E);\n  return function (as) {\n    return exports.isNonEmpty(as) ? f(as) : as;\n  };\n};\n\nexports.uniq = uniq;\n/**\n * Sort the elements of an array in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import { sortBy } from 'fp-ts/ReadonlyArray'\n * import { contramap } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age: number\n * }\n * const byName = pipe(S.Ord, contramap((p: Person) => p.name))\n * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))\n *\n * const sortByNameByAge = sortBy([byName, byAge])\n *\n * const persons = [{ name: 'a', age: 1 }, { name: 'b', age: 3 }, { name: 'c', age: 2 }, { name: 'b', age: 2 }]\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nvar sortBy = function sortBy(ords) {\n  var f = RNEA.sortBy(ords);\n  return function (as) {\n    return exports.isNonEmpty(as) ? f(as) : as;\n  };\n};\n\nexports.sortBy = sortBy;\n/**\n * A useful recursion pattern for processing a `ReadonlyArray` to produce a new `ReadonlyArray`, often used for \"chopping\" up the input\n * `ReadonlyArray`. Typically `chop` is called with some function that will consume an initial prefix of the `ReadonlyArray` and produce a\n * value and the tail of the `ReadonlyArray`.\n *\n * @example\n * import { Eq } from 'fp-ts/Eq'\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * const group = <A>(S: Eq<A>): ((as: ReadonlyArray<A>) => ReadonlyArray<ReadonlyArray<A>>) => {\n *   return RA.chop(as => {\n *     const { init, rest } = pipe(as, RA.spanLeft((a: A) => S.equals(a, as[0])))\n *     return [init, rest]\n *   })\n * }\n * assert.deepStrictEqual(group(N.Eq)([1, 1, 2, 3, 3, 4]), [[1, 1], [2], [3, 3], [4]])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nvar chop = function chop(f) {\n  var g = RNEA.chop(f);\n  return function (as) {\n    return exports.isNonEmpty(as) ? g(as) : exports.empty;\n  };\n};\n\nexports.chop = chop;\n/**\n * Splits a `ReadonlyArray` into two pieces, the first piece has max `n` elements.\n *\n * @example\n * import { splitAt } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(splitAt(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4, 5]])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nvar splitAt = function splitAt(n) {\n  return function (as) {\n    return n >= 1 && exports.isNonEmpty(as) ? RNEA.splitAt(n)(as) : exports.isEmpty(as) ? [as, exports.empty] : [exports.empty, as];\n  };\n};\n\nexports.splitAt = splitAt;\n/**\n * Splits a `ReadonlyArray` into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the `ReadonlyArray`. Note that `chunksOf(n)([])` is `[]`, not `[[]]`. This is intentional, and is consistent with a recursive\n * definition of `chunksOf`; it satisfies the property that:\n *\n * ```ts\n * chunksOf(n)(xs).concat(chunksOf(n)(ys)) == chunksOf(n)(xs.concat(ys)))\n * ```\n *\n * whenever `n` evenly divides the length of `as`.\n *\n * @example\n * import { chunksOf } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(chunksOf(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4], [5]])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nvar chunksOf = function chunksOf(n) {\n  var f = RNEA.chunksOf(n);\n  return function (as) {\n    return exports.isNonEmpty(as) ? f(as) : exports.empty;\n  };\n};\n\nexports.chunksOf = chunksOf;\n/**\n * @category combinators\n * @since 2.11.0\n */\n\nvar fromOptionK = function fromOptionK(f) {\n  return function () {\n    var a = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      a[_i] = arguments[_i];\n    }\n\n    return exports.fromOption(f.apply(void 0, a));\n  };\n};\n\nexports.fromOptionK = fromOptionK;\n\nfunction comprehension(input, f, g) {\n  if (g === void 0) {\n    g = function g() {\n      return true;\n    };\n  }\n\n  var go = function go(scope, input) {\n    return exports.isNonEmpty(input) ? function_1.pipe(RNEA.head(input), exports.chain(function (x) {\n      return go(function_1.pipe(scope, exports.append(x)), RNEA.tail(input));\n    })) : g.apply(void 0, scope) ? [f.apply(void 0, scope)] : exports.empty;\n  };\n\n  return go(exports.empty, input);\n}\n\nexports.comprehension = comprehension;\n/**\n * @category combinators\n * @since 2.11.0\n */\n\nvar concatW = function concatW(second) {\n  return function (first) {\n    return exports.isEmpty(first) ? second : exports.isEmpty(second) ? first : first.concat(second);\n  };\n};\n\nexports.concatW = concatW;\n/**\n * @category combinators\n * @since 2.11.0\n */\n\nexports.concat = exports.concatW;\n\nfunction union(E) {\n  var unionE = RNEA.union(E);\n  return function (first, second) {\n    if (second === undefined) {\n      var unionE_1 = union(E);\n      return function (second) {\n        return unionE_1(second, first);\n      };\n    }\n\n    return exports.isNonEmpty(first) && exports.isNonEmpty(second) ? unionE(second)(first) : exports.isNonEmpty(first) ? first : second;\n  };\n}\n\nexports.union = union;\n\nfunction intersection(E) {\n  var elemE = elem(E);\n  return function (xs, ys) {\n    if (ys === undefined) {\n      var intersectionE_1 = intersection(E);\n      return function (ys) {\n        return intersectionE_1(ys, xs);\n      };\n    }\n\n    return xs.filter(function (a) {\n      return elemE(a, ys);\n    });\n  };\n}\n\nexports.intersection = intersection;\n\nfunction difference(E) {\n  var elemE = elem(E);\n  return function (xs, ys) {\n    if (ys === undefined) {\n      var differenceE_1 = difference(E);\n      return function (ys) {\n        return differenceE_1(ys, xs);\n      };\n    }\n\n    return xs.filter(function (a) {\n      return !elemE(a, ys);\n    });\n  };\n}\n\nexports.difference = difference; // -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n\nvar _map = function _map(fa, f) {\n  return function_1.pipe(fa, exports.map(f));\n};\n\nvar _mapWithIndex = function _mapWithIndex(fa, f) {\n  return function_1.pipe(fa, exports.mapWithIndex(f));\n};\n\nvar _ap = function _ap(fab, fa) {\n  return function_1.pipe(fab, exports.ap(fa));\n};\n\nvar _chain = function _chain(ma, f) {\n  return function_1.pipe(ma, exports.chain(f));\n};\n\nvar _filter = function _filter(fa, predicate) {\n  return function_1.pipe(fa, exports.filter(predicate));\n};\n\nvar _filterMap = function _filterMap(fa, f) {\n  return function_1.pipe(fa, exports.filterMap(f));\n};\n\nvar _partition = function _partition(fa, predicate) {\n  return function_1.pipe(fa, exports.partition(predicate));\n};\n\nvar _partitionMap = function _partitionMap(fa, f) {\n  return function_1.pipe(fa, exports.partitionMap(f));\n};\n\nvar _partitionWithIndex = function _partitionWithIndex(fa, predicateWithIndex) {\n  return function_1.pipe(fa, exports.partitionWithIndex(predicateWithIndex));\n};\n\nvar _partitionMapWithIndex = function _partitionMapWithIndex(fa, f) {\n  return function_1.pipe(fa, exports.partitionMapWithIndex(f));\n};\n\nvar _alt = function _alt(fa, that) {\n  return function_1.pipe(fa, exports.alt(that));\n};\n\nvar _reduce = function _reduce(fa, b, f) {\n  return function_1.pipe(fa, exports.reduce(b, f));\n};\n\nvar _foldMap = function _foldMap(M) {\n  var foldMapM = exports.foldMap(M);\n  return function (fa, f) {\n    return function_1.pipe(fa, foldMapM(f));\n  };\n};\n\nvar _reduceRight = function _reduceRight(fa, b, f) {\n  return function_1.pipe(fa, exports.reduceRight(b, f));\n};\n\nvar _reduceWithIndex = function _reduceWithIndex(fa, b, f) {\n  return function_1.pipe(fa, exports.reduceWithIndex(b, f));\n};\n\nvar _foldMapWithIndex = function _foldMapWithIndex(M) {\n  var foldMapWithIndexM = exports.foldMapWithIndex(M);\n  return function (fa, f) {\n    return function_1.pipe(fa, foldMapWithIndexM(f));\n  };\n};\n\nvar _reduceRightWithIndex = function _reduceRightWithIndex(fa, b, f) {\n  return function_1.pipe(fa, exports.reduceRightWithIndex(b, f));\n};\n\nvar _filterMapWithIndex = function _filterMapWithIndex(fa, f) {\n  return function_1.pipe(fa, exports.filterMapWithIndex(f));\n};\n\nvar _filterWithIndex = function _filterWithIndex(fa, predicateWithIndex) {\n  return function_1.pipe(fa, exports.filterWithIndex(predicateWithIndex));\n};\n\nvar _extend = function _extend(fa, f) {\n  return function_1.pipe(fa, exports.extend(f));\n};\n\nvar _traverse = function _traverse(F) {\n  var traverseF = exports.traverse(F);\n  return function (ta, f) {\n    return function_1.pipe(ta, traverseF(f));\n  };\n};\n/* istanbul ignore next */\n\n\nvar _traverseWithIndex = function _traverseWithIndex(F) {\n  var traverseWithIndexF = exports.traverseWithIndex(F);\n  return function (ta, f) {\n    return function_1.pipe(ta, traverseWithIndexF(f));\n  };\n};\n/** @internal */\n\n\nvar _chainRecDepthFirst = function _chainRecDepthFirst(a, f) {\n  return function_1.pipe(a, exports.chainRecDepthFirst(f));\n};\n\nexports._chainRecDepthFirst = _chainRecDepthFirst;\n/** @internal */\n\nvar _chainRecBreadthFirst = function _chainRecBreadthFirst(a, f) {\n  return function_1.pipe(a, exports.chainRecBreadthFirst(f));\n};\n\nexports._chainRecBreadthFirst = _chainRecBreadthFirst; // -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n\n/**\n * @category Pointed\n * @since 2.5.0\n */\n\nexports.of = RNEA.of;\n/**\n * @category Zero\n * @since 2.7.0\n */\n\nvar zero = function zero() {\n  return exports.empty;\n};\n\nexports.zero = zero;\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\n\nvar altW = function altW(that) {\n  return function (fa) {\n    return fa.concat(that());\n  };\n};\n\nexports.altW = altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.5.0\n */\n\nexports.alt = exports.altW;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.5.0\n */\n\nvar ap = function ap(fa) {\n  return exports.chain(function (f) {\n    return function_1.pipe(fa, exports.map(f));\n  });\n};\n\nexports.ap = ap;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.5.0\n */\n\nvar chain = function chain(f) {\n  return function (ma) {\n    return function_1.pipe(ma, exports.chainWithIndex(function (_, a) {\n      return f(a);\n    }));\n  };\n};\n\nexports.chain = chain;\n/**\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexports.flatten = /*#__PURE__*/exports.chain(function_1.identity);\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.5.0\n */\n\nvar map = function map(f) {\n  return function (fa) {\n    return fa.map(function (a) {\n      return f(a);\n    });\n  };\n};\n\nexports.map = map;\n/**\n * @category FunctorWithIndex\n * @since 2.5.0\n */\n\nvar mapWithIndex = function mapWithIndex(f) {\n  return function (fa) {\n    return fa.map(function (a, i) {\n      return f(i, a);\n    });\n  };\n};\n\nexports.mapWithIndex = mapWithIndex;\n/**\n * @category Compactable\n * @since 2.5.0\n */\n\nvar separate = function separate(fa) {\n  var left = [];\n  var right = [];\n\n  for (var _i = 0, fa_1 = fa; _i < fa_1.length; _i++) {\n    var e = fa_1[_i];\n\n    if (e._tag === 'Left') {\n      left.push(e.left);\n    } else {\n      right.push(e.right);\n    }\n  }\n\n  return Separated_1.separated(left, right);\n};\n\nexports.separate = separate;\n/**\n * @category Filterable\n * @since 2.5.0\n */\n\nvar filter = function filter(predicate) {\n  return function (as) {\n    return as.filter(predicate);\n  };\n};\n\nexports.filter = filter;\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\n\nvar filterMapWithIndex = function filterMapWithIndex(f) {\n  return function (fa) {\n    var out = [];\n\n    for (var i = 0; i < fa.length; i++) {\n      var optionB = f(i, fa[i]);\n\n      if (_.isSome(optionB)) {\n        out.push(optionB.value);\n      }\n    }\n\n    return out;\n  };\n};\n\nexports.filterMapWithIndex = filterMapWithIndex;\n/**\n * @category Filterable\n * @since 2.5.0\n */\n\nvar filterMap = function filterMap(f) {\n  return exports.filterMapWithIndex(function (_, a) {\n    return f(a);\n  });\n};\n\nexports.filterMap = filterMap;\n/**\n * @category Compactable\n * @since 2.5.0\n */\n\nexports.compact = /*#__PURE__*/exports.filterMap(function_1.identity);\n/**\n * @category Filterable\n * @since 2.5.0\n */\n\nvar partition = function partition(predicate) {\n  return exports.partitionWithIndex(function (_, a) {\n    return predicate(a);\n  });\n};\n\nexports.partition = partition;\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\n\nvar partitionWithIndex = function partitionWithIndex(predicateWithIndex) {\n  return function (as) {\n    var left = [];\n    var right = [];\n\n    for (var i = 0; i < as.length; i++) {\n      var a = as[i];\n\n      if (predicateWithIndex(i, a)) {\n        right.push(a);\n      } else {\n        left.push(a);\n      }\n    }\n\n    return Separated_1.separated(left, right);\n  };\n};\n\nexports.partitionWithIndex = partitionWithIndex;\n/**\n * @category Filterable\n * @since 2.5.0\n */\n\nvar partitionMap = function partitionMap(f) {\n  return exports.partitionMapWithIndex(function (_, a) {\n    return f(a);\n  });\n};\n\nexports.partitionMap = partitionMap;\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\n\nvar partitionMapWithIndex = function partitionMapWithIndex(f) {\n  return function (fa) {\n    var left = [];\n    var right = [];\n\n    for (var i = 0; i < fa.length; i++) {\n      var e = f(i, fa[i]);\n\n      if (e._tag === 'Left') {\n        left.push(e.left);\n      } else {\n        right.push(e.right);\n      }\n    }\n\n    return Separated_1.separated(left, right);\n  };\n};\n\nexports.partitionMapWithIndex = partitionMapWithIndex;\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\n\nvar filterWithIndex = function filterWithIndex(predicateWithIndex) {\n  return function (as) {\n    return as.filter(function (a, i) {\n      return predicateWithIndex(i, a);\n    });\n  };\n};\n\nexports.filterWithIndex = filterWithIndex;\n/**\n * @category Extend\n * @since 2.5.0\n */\n\nvar extend = function extend(f) {\n  return function (wa) {\n    return wa.map(function (_, i) {\n      return f(wa.slice(i));\n    });\n  };\n};\n\nexports.extend = extend;\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexports.duplicate = /*#__PURE__*/exports.extend(function_1.identity);\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\n\nvar foldMapWithIndex = function foldMapWithIndex(M) {\n  return function (f) {\n    return function (fa) {\n      return fa.reduce(function (b, a, i) {\n        return M.concat(b, f(i, a));\n      }, M.empty);\n    };\n  };\n};\n\nexports.foldMapWithIndex = foldMapWithIndex;\n/**\n * @category Foldable\n * @since 2.5.0\n */\n\nvar reduce = function reduce(b, f) {\n  return exports.reduceWithIndex(b, function (_, b, a) {\n    return f(b, a);\n  });\n};\n\nexports.reduce = reduce;\n/**\n * @category Foldable\n * @since 2.5.0\n */\n\nvar foldMap = function foldMap(M) {\n  var foldMapWithIndexM = exports.foldMapWithIndex(M);\n  return function (f) {\n    return foldMapWithIndexM(function (_, a) {\n      return f(a);\n    });\n  };\n};\n\nexports.foldMap = foldMap;\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\n\nvar reduceWithIndex = function reduceWithIndex(b, f) {\n  return function (fa) {\n    var len = fa.length;\n    var out = b;\n\n    for (var i = 0; i < len; i++) {\n      out = f(i, out, fa[i]);\n    }\n\n    return out;\n  };\n};\n\nexports.reduceWithIndex = reduceWithIndex;\n/**\n * @category Foldable\n * @since 2.5.0\n */\n\nvar reduceRight = function reduceRight(b, f) {\n  return exports.reduceRightWithIndex(b, function (_, a, b) {\n    return f(a, b);\n  });\n};\n\nexports.reduceRight = reduceRight;\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\n\nvar reduceRightWithIndex = function reduceRightWithIndex(b, f) {\n  return function (fa) {\n    return fa.reduceRight(function (b, a, i) {\n      return f(i, a, b);\n    }, b);\n  };\n};\n\nexports.reduceRightWithIndex = reduceRightWithIndex;\n/**\n * @category Traversable\n * @since 2.6.3\n */\n\nvar traverse = function traverse(F) {\n  var traverseWithIndexF = exports.traverseWithIndex(F);\n  return function (f) {\n    return traverseWithIndexF(function (_, a) {\n      return f(a);\n    });\n  };\n};\n\nexports.traverse = traverse;\n/**\n * @category Traversable\n * @since 2.6.3\n */\n\nvar sequence = function sequence(F) {\n  return function (ta) {\n    return _reduce(ta, F.of(exports.zero()), function (fas, fa) {\n      return F.ap(F.map(fas, function (as) {\n        return function (a) {\n          return function_1.pipe(as, exports.append(a));\n        };\n      }), fa);\n    });\n  };\n};\n\nexports.sequence = sequence;\n/**\n * @category TraversableWithIndex\n * @since 2.6.3\n */\n\nvar traverseWithIndex = function traverseWithIndex(F) {\n  return function (f) {\n    return exports.reduceWithIndex(F.of(exports.zero()), function (i, fbs, a) {\n      return F.ap(F.map(fbs, function (bs) {\n        return function (b) {\n          return function_1.pipe(bs, exports.append(b));\n        };\n      }), f(i, a));\n    });\n  };\n};\n\nexports.traverseWithIndex = traverseWithIndex;\n/**\n * @category Witherable\n * @since 2.6.5\n */\n\nvar wither = function wither(F) {\n  var _witherF = _wither(F);\n\n  return function (f) {\n    return function (fa) {\n      return _witherF(fa, f);\n    };\n  };\n};\n\nexports.wither = wither;\n/**\n * @category Witherable\n * @since 2.6.5\n */\n\nvar wilt = function wilt(F) {\n  var _wiltF = _wilt(F);\n\n  return function (f) {\n    return function (fa) {\n      return _wiltF(fa, f);\n    };\n  };\n};\n\nexports.wilt = wilt;\n/**\n * @category Unfoldable\n * @since 2.6.6\n */\n\nvar unfold = function unfold(b, f) {\n  var out = [];\n  var bb = b;\n\n  while (true) {\n    var mt = f(bb);\n\n    if (_.isSome(mt)) {\n      var _a = mt.value,\n          a = _a[0],\n          b_1 = _a[1];\n      out.push(a);\n      bb = b_1;\n    } else {\n      break;\n    }\n  }\n\n  return out;\n};\n\nexports.unfold = unfold; // -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n\n/**\n * @category instances\n * @since 2.5.0\n */\n\nexports.URI = 'ReadonlyArray';\n/**\n * @category instances\n * @since 2.5.0\n */\n\nvar getShow = function getShow(S) {\n  return {\n    show: function show(as) {\n      return \"[\" + as.map(S.show).join(', ') + \"]\";\n    }\n  };\n};\n\nexports.getShow = getShow;\n/**\n * @category instances\n * @since 2.5.0\n */\n\nvar getSemigroup = function getSemigroup() {\n  return {\n    concat: function concat(first, second) {\n      return exports.isEmpty(first) ? second : exports.isEmpty(second) ? first : first.concat(second);\n    }\n  };\n};\n\nexports.getSemigroup = getSemigroup;\n/**\n * Returns a `Monoid` for `ReadonlyArray<A>`.\n *\n * @example\n * import { getMonoid } from 'fp-ts/ReadonlyArray'\n *\n * const M = getMonoid<number>()\n * assert.deepStrictEqual(M.concat([1, 2], [3, 4]), [1, 2, 3, 4])\n *\n * @category instances\n * @since 2.5.0\n */\n\nvar getMonoid = function getMonoid() {\n  return {\n    concat: exports.getSemigroup().concat,\n    empty: exports.empty\n  };\n};\n\nexports.getMonoid = getMonoid;\n/**\n * Derives an `Eq` over the `ReadonlyArray` of a given element type from the `Eq` of that type. The derived `Eq` defines two\n * arrays as equal if all elements of both arrays are compared equal pairwise with the given `E`. In case of arrays of\n * different lengths, the result is non equality.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { getEq } from 'fp-ts/ReadonlyArray'\n *\n * const E = getEq(S.Eq)\n * assert.strictEqual(E.equals(['a', 'b'], ['a', 'b']), true)\n * assert.strictEqual(E.equals(['a'], []), false)\n *\n * @category instances\n * @since 2.5.0\n */\n\nvar getEq = function getEq(E) {\n  return Eq_1.fromEquals(function (xs, ys) {\n    return xs.length === ys.length && xs.every(function (x, i) {\n      return E.equals(x, ys[i]);\n    });\n  });\n};\n\nexports.getEq = getEq;\n/**\n * Derives an `Ord` over the `ReadonlyArray` of a given element type from the `Ord` of that type. The ordering between two such\n * arrays is equal to: the first non equal comparison of each arrays elements taken pairwise in increasing order, in\n * case of equality over all the pairwise elements; the longest array is considered the greatest, if both arrays have\n * the same length, the result is equality.\n *\n * @example\n * import { getOrd } from 'fp-ts/ReadonlyArray'\n * import * as S from 'fp-ts/string'\n *\n * const O = getOrd(S.Ord)\n * assert.strictEqual(O.compare(['b'], ['a']), 1)\n * assert.strictEqual(O.compare(['a'], ['a']), 0)\n * assert.strictEqual(O.compare(['a'], ['b']), -1)\n *\n *\n * @category instances\n * @since 2.5.0\n */\n\nvar getOrd = function getOrd(O) {\n  return Ord_1.fromCompare(function (a, b) {\n    var aLen = a.length;\n    var bLen = b.length;\n    var len = Math.min(aLen, bLen);\n\n    for (var i = 0; i < len; i++) {\n      var ordering = O.compare(a[i], b[i]);\n\n      if (ordering !== 0) {\n        return ordering;\n      }\n    }\n\n    return N.Ord.compare(aLen, bLen);\n  });\n};\n\nexports.getOrd = getOrd;\n/**\n * @category instances\n * @since 2.11.0\n */\n\nvar getUnionSemigroup = function getUnionSemigroup(E) {\n  var unionE = union(E);\n  return {\n    concat: function concat(first, second) {\n      return unionE(second)(first);\n    }\n  };\n};\n\nexports.getUnionSemigroup = getUnionSemigroup;\n/**\n * @category instances\n * @since 2.11.0\n */\n\nvar getUnionMonoid = function getUnionMonoid(E) {\n  return {\n    concat: exports.getUnionSemigroup(E).concat,\n    empty: exports.empty\n  };\n};\n\nexports.getUnionMonoid = getUnionMonoid;\n/**\n * @category instances\n * @since 2.11.0\n */\n\nvar getIntersectionSemigroup = function getIntersectionSemigroup(E) {\n  var intersectionE = intersection(E);\n  return {\n    concat: function concat(first, second) {\n      return intersectionE(second)(first);\n    }\n  };\n};\n\nexports.getIntersectionSemigroup = getIntersectionSemigroup;\n/**\n * @category instances\n * @since 2.11.0\n */\n\nvar getDifferenceMagma = function getDifferenceMagma(E) {\n  var differenceE = difference(E);\n  return {\n    concat: function concat(first, second) {\n      return differenceE(second)(first);\n    }\n  };\n};\n\nexports.getDifferenceMagma = getDifferenceMagma;\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Functor = {\n  URI: exports.URI,\n  map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\n\nexports.flap = /*#__PURE__*/Functor_1.flap(exports.Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\n\nexports.Pointed = {\n  URI: exports.URI,\n  of: exports.of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.FunctorWithIndex = {\n  URI: exports.URI,\n  map: _map,\n  mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\n\nexports.Apply = {\n  URI: exports.URI,\n  map: _map,\n  ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexports.apFirst = /*#__PURE__*/Apply_1.apFirst(exports.Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexports.apSecond = /*#__PURE__*/Apply_1.apSecond(exports.Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Applicative = {\n  URI: exports.URI,\n  map: _map,\n  ap: _ap,\n  of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\n\nexports.Chain = {\n  URI: exports.URI,\n  map: _map,\n  ap: _ap,\n  chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Monad = {\n  URI: exports.URI,\n  map: _map,\n  ap: _ap,\n  of: exports.of,\n  chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexports.chainFirst = /*#__PURE__*/Chain_1.chainFirst(exports.Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Unfoldable = {\n  URI: exports.URI,\n  unfold: exports.unfold\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Alt = {\n  URI: exports.URI,\n  map: _map,\n  alt: _alt\n};\n/**\n * @category instances\n * @since 2.11.0\n */\n\nexports.Zero = {\n  URI: exports.URI,\n  zero: exports.zero\n};\n/**\n * @category constructors\n * @since 2.11.0\n */\n\nexports.guard = /*#__PURE__*/Zero_1.guard(exports.Zero, exports.Pointed);\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Alternative = {\n  URI: exports.URI,\n  map: _map,\n  ap: _ap,\n  of: exports.of,\n  alt: _alt,\n  zero: exports.zero\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Extend = {\n  URI: exports.URI,\n  map: _map,\n  extend: _extend\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Compactable = {\n  URI: exports.URI,\n  compact: exports.compact,\n  separate: exports.separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Filterable = {\n  URI: exports.URI,\n  map: _map,\n  compact: exports.compact,\n  separate: exports.separate,\n  filter: _filter,\n  filterMap: _filterMap,\n  partition: _partition,\n  partitionMap: _partitionMap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.FilterableWithIndex = {\n  URI: exports.URI,\n  map: _map,\n  mapWithIndex: _mapWithIndex,\n  compact: exports.compact,\n  separate: exports.separate,\n  filter: _filter,\n  filterMap: _filterMap,\n  partition: _partition,\n  partitionMap: _partitionMap,\n  partitionMapWithIndex: _partitionMapWithIndex,\n  partitionWithIndex: _partitionWithIndex,\n  filterMapWithIndex: _filterMapWithIndex,\n  filterWithIndex: _filterWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Foldable = {\n  URI: exports.URI,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.FoldableWithIndex = {\n  URI: exports.URI,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  reduceWithIndex: _reduceWithIndex,\n  foldMapWithIndex: _foldMapWithIndex,\n  reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Traversable = {\n  URI: exports.URI,\n  map: _map,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  traverse: _traverse,\n  sequence: exports.sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.TraversableWithIndex = {\n  URI: exports.URI,\n  map: _map,\n  mapWithIndex: _mapWithIndex,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  reduceWithIndex: _reduceWithIndex,\n  foldMapWithIndex: _foldMapWithIndex,\n  reduceRightWithIndex: _reduceRightWithIndex,\n  traverse: _traverse,\n  sequence: exports.sequence,\n  traverseWithIndex: _traverseWithIndex\n};\n/**\n * @category ChainRec\n * @since 2.11.0\n */\n\nvar chainRecDepthFirst = function chainRecDepthFirst(f) {\n  return function (a) {\n    var todo = __spreadArray([], f(a));\n\n    var out = [];\n\n    while (todo.length > 0) {\n      var e = todo.shift();\n\n      if (_.isLeft(e)) {\n        todo.unshift.apply(todo, f(e.left));\n      } else {\n        out.push(e.right);\n      }\n    }\n\n    return out;\n  };\n};\n\nexports.chainRecDepthFirst = chainRecDepthFirst;\n/**\n * @category instances\n * @since 2.11.0\n */\n\nexports.ChainRecDepthFirst = {\n  URI: exports.URI,\n  map: _map,\n  ap: _ap,\n  chain: _chain,\n  chainRec: exports._chainRecDepthFirst\n};\n/**\n * @category ChainRec\n * @since 2.11.0\n */\n\nvar chainRecBreadthFirst = function chainRecBreadthFirst(f) {\n  return function (a) {\n    var initial = f(a);\n    var todo = [];\n    var out = [];\n\n    function go(e) {\n      if (_.isLeft(e)) {\n        f(e.left).forEach(function (v) {\n          return todo.push(v);\n        });\n      } else {\n        out.push(e.right);\n      }\n    }\n\n    for (var _i = 0, initial_1 = initial; _i < initial_1.length; _i++) {\n      var e = initial_1[_i];\n      go(e);\n    }\n\n    while (todo.length > 0) {\n      go(todo.shift());\n    }\n\n    return out;\n  };\n};\n\nexports.chainRecBreadthFirst = chainRecBreadthFirst;\n/**\n * @category instances\n * @since 2.11.0\n */\n\nexports.ChainRecBreadthFirst = {\n  URI: exports.URI,\n  map: _map,\n  ap: _ap,\n  chain: _chain,\n  chainRec: exports._chainRecBreadthFirst\n};\n\nvar _wither = /*#__PURE__*/Witherable_1.witherDefault(exports.Traversable, exports.Compactable);\n\nvar _wilt = /*#__PURE__*/Witherable_1.wiltDefault(exports.Traversable, exports.Compactable);\n/**\n * @category instances\n * @since 2.7.0\n */\n\n\nexports.Witherable = {\n  URI: exports.URI,\n  map: _map,\n  compact: exports.compact,\n  separate: exports.separate,\n  filter: _filter,\n  filterMap: _filterMap,\n  partition: _partition,\n  partitionMap: _partitionMap,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  traverse: _traverse,\n  sequence: exports.sequence,\n  wither: _wither,\n  wilt: _wilt\n};\n/**\n * Filter values inside a context.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import * as T from 'fp-ts/Task'\n *\n * const filterE = RA.filterE(T.ApplicativePar)\n * async function test() {\n *   assert.deepStrictEqual(\n *     await pipe(\n *       [-1, 2, 3],\n *       filterE((n) => T.of(n > 0))\n *     )(),\n *     [2, 3]\n *   )\n * }\n * test()\n *\n * @since 2.11.0\n */\n\nexports.filterE = /*#__PURE__*/Witherable_1.filterE(exports.Witherable);\n/**\n * @category instances\n * @since 2.11.0\n */\n\nexports.FromEither = {\n  URI: exports.URI,\n  fromEither: exports.fromEither\n};\n/**\n * @category combinators\n * @since 2.11.0\n */\n\nexports.fromEitherK = /*#__PURE__*/FromEither_1.fromEitherK(exports.FromEither); // -------------------------------------------------------------------------------------\n// unsafe\n// -------------------------------------------------------------------------------------\n\n/**\n * @category unsafe\n * @since 2.5.0\n */\n\nexports.unsafeInsertAt = RNEA.unsafeInsertAt;\n/**\n * @category unsafe\n * @since 2.5.0\n */\n\nvar unsafeUpdateAt = function unsafeUpdateAt(i, a, as) {\n  return exports.isNonEmpty(as) ? RNEA.unsafeUpdateAt(i, a, as) : as;\n};\n\nexports.unsafeUpdateAt = unsafeUpdateAt;\n/**\n * @category unsafe\n * @since 2.5.0\n */\n\nvar unsafeDeleteAt = function unsafeDeleteAt(i, as) {\n  var xs = as.slice();\n  xs.splice(i, 1);\n  return xs;\n};\n\nexports.unsafeDeleteAt = unsafeDeleteAt; // -------------------------------------------------------------------------------------\n// interop\n// -------------------------------------------------------------------------------------\n\n/**\n * @category interop\n * @since 2.5.0\n */\n\nvar toArray = function toArray(as) {\n  return as.slice();\n};\n\nexports.toArray = toArray;\n/**\n * @category interop\n * @since 2.5.0\n */\n\nvar fromArray = function fromArray(as) {\n  return exports.isEmpty(as) ? exports.empty : as.slice();\n};\n\nexports.fromArray = fromArray; // -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n\n/**\n * An empty array\n *\n * @since 2.5.0\n */\n\nexports.empty = RNEA.empty;\n\nfunction every(predicate) {\n  return function (as) {\n    return as.every(predicate);\n  };\n}\n\nexports.every = every;\n/**\n * Check if a predicate holds true for any array member.\n *\n * @example\n * import { some } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const isPositive = (n: number): boolean => n > 0\n *\n * assert.deepStrictEqual(pipe([-1, -2, 3], some(isPositive)), true)\n * assert.deepStrictEqual(pipe([-1, -2, -3], some(isPositive)), false)\n *\n * @since 2.9.0\n */\n\nvar some = function some(predicate) {\n  return function (as) {\n    return as.some(predicate);\n  };\n};\n\nexports.some = some;\n/**\n * Alias of [`some`](#some)\n *\n * @since 2.11.0\n */\n\nexports.exists = exports.some; // -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n\n/**\n * @since 2.9.0\n */\n\nexports.Do = /*#__PURE__*/exports.of(_.emptyRecord);\n/**\n * @since 2.8.0\n */\n\nexports.bindTo = /*#__PURE__*/Functor_1.bindTo(exports.Functor);\n/**\n * @since 2.8.0\n */\n\nexports.bind = /*#__PURE__*/Chain_1.bind(exports.Chain); // -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n\n/**\n * @since 2.8.0\n */\n\nexports.apS = /*#__PURE__*/Apply_1.apS(exports.Apply); // -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n// tslint:disable: deprecation\n\n/**\n * Use `ReadonlyNonEmptyArray` module instead.\n *\n * @category constructors\n * @since 2.5.0\n * @deprecated\n */\n\nexports.range = RNEA.range;\n/**\n * Use [`prepend`](#prepend) instead.\n *\n * @category constructors\n * @since 2.5.0\n * @deprecated\n */\n\nexports.cons = RNEA.cons;\n/**\n * Use [`append`](#append) instead.\n *\n * @category constructors\n * @since 2.5.0\n * @deprecated\n */\n\nexports.snoc = RNEA.snoc;\n/**\n * Use [`prependAll`](#prependall) instead.\n *\n * @category combinators\n * @since 2.9.0\n * @deprecated\n */\n\nexports.prependToAll = exports.prependAll;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.5.0\n * @deprecated\n */\n\nexports.readonlyArray = {\n  URI: exports.URI,\n  compact: exports.compact,\n  separate: exports.separate,\n  map: _map,\n  ap: _ap,\n  of: exports.of,\n  chain: _chain,\n  filter: _filter,\n  filterMap: _filterMap,\n  partition: _partition,\n  partitionMap: _partitionMap,\n  mapWithIndex: _mapWithIndex,\n  partitionMapWithIndex: _partitionMapWithIndex,\n  partitionWithIndex: _partitionWithIndex,\n  filterMapWithIndex: _filterMapWithIndex,\n  filterWithIndex: _filterWithIndex,\n  alt: _alt,\n  zero: exports.zero,\n  unfold: exports.unfold,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  traverse: _traverse,\n  sequence: exports.sequence,\n  reduceWithIndex: _reduceWithIndex,\n  foldMapWithIndex: _foldMapWithIndex,\n  reduceRightWithIndex: _reduceRightWithIndex,\n  traverseWithIndex: _traverseWithIndex,\n  extend: _extend,\n  wither: _wither,\n  wilt: _wilt\n};","\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {\n    to[j] = from[i];\n  }\n\n  return to;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.reduceRight = exports.foldMap = exports.reduce = exports.mapWithIndex = exports.map = exports.flatten = exports.duplicate = exports.extend = exports.chain = exports.ap = exports.alt = exports.altW = exports.of = exports.chunksOf = exports.splitAt = exports.chop = exports.chainWithIndex = exports.intersperse = exports.prependAll = exports.unzip = exports.zip = exports.zipWith = exports.modifyAt = exports.updateAt = exports.sort = exports.groupBy = exports.group = exports.reverse = exports.concat = exports.concatW = exports.fromArray = exports.unappend = exports.unprepend = exports.range = exports.replicate = exports.makeBy = exports.fromReadonlyArray = exports.rotate = exports.union = exports.sortBy = exports.uniq = exports.unsafeUpdateAt = exports.unsafeInsertAt = exports.append = exports.appendW = exports.prepend = exports.prependW = exports.isOutOfBound = exports.isNonEmpty = exports.empty = void 0;\nexports.uncons = exports.filterWithIndex = exports.filter = exports.groupSort = exports.updateLast = exports.modifyLast = exports.updateHead = exports.modifyHead = exports.matchRight = exports.matchLeft = exports.concatAll = exports.max = exports.min = exports.init = exports.last = exports.tail = exports.head = exports.apS = exports.bind = exports.bindTo = exports.Do = exports.Comonad = exports.Alt = exports.TraversableWithIndex = exports.Traversable = exports.FoldableWithIndex = exports.Foldable = exports.Monad = exports.chainFirst = exports.Chain = exports.Applicative = exports.apSecond = exports.apFirst = exports.Apply = exports.FunctorWithIndex = exports.Pointed = exports.flap = exports.Functor = exports.getUnionSemigroup = exports.getEq = exports.getSemigroup = exports.getShow = exports.URI = exports.extract = exports.traverseWithIndex = exports.sequence = exports.traverse = exports.reduceRightWithIndex = exports.foldMapWithIndex = exports.reduceWithIndex = void 0;\nexports.readonlyNonEmptyArray = exports.fold = exports.prependToAll = exports.insertAt = exports.snoc = exports.cons = exports.unsnoc = void 0;\n\nvar Apply_1 = require(\"./Apply\");\n\nvar Chain_1 = require(\"./Chain\");\n\nvar Eq_1 = require(\"./Eq\");\n\nvar function_1 = require(\"./function\");\n\nvar Functor_1 = require(\"./Functor\");\n\nvar _ = __importStar(require(\"./internal\"));\n\nvar Ord_1 = require(\"./Ord\");\n\nvar Se = __importStar(require(\"./Semigroup\")); // -------------------------------------------------------------------------------------\n// internal\n// -------------------------------------------------------------------------------------\n\n/**\n * @internal\n */\n\n\nexports.empty = _.emptyReadonlyArray;\n/**\n * @internal\n */\n\nexports.isNonEmpty = _.isNonEmpty;\n/**\n * @internal\n */\n\nvar isOutOfBound = function isOutOfBound(i, as) {\n  return i < 0 || i >= as.length;\n};\n\nexports.isOutOfBound = isOutOfBound;\n/**\n * @internal\n */\n\nvar prependW = function prependW(head) {\n  return function (tail) {\n    return __spreadArray([head], tail);\n  };\n};\n\nexports.prependW = prependW;\n/**\n * @internal\n */\n\nexports.prepend = exports.prependW;\n/**\n * @internal\n */\n\nvar appendW = function appendW(end) {\n  return function (init) {\n    return __spreadArray(__spreadArray([], init), [end]);\n  };\n};\n\nexports.appendW = appendW;\n/**\n * @internal\n */\n\nexports.append = exports.appendW;\n/**\n * @internal\n */\n\nvar unsafeInsertAt = function unsafeInsertAt(i, a, as) {\n  if (exports.isNonEmpty(as)) {\n    var xs = _.fromReadonlyNonEmptyArray(as);\n\n    xs.splice(i, 0, a);\n    return xs;\n  }\n\n  return [a];\n};\n\nexports.unsafeInsertAt = unsafeInsertAt;\n/**\n * @internal\n */\n\nvar unsafeUpdateAt = function unsafeUpdateAt(i, a, as) {\n  if (as[i] === a) {\n    return as;\n  } else {\n    var xs = _.fromReadonlyNonEmptyArray(as);\n\n    xs[i] = a;\n    return xs;\n  }\n};\n\nexports.unsafeUpdateAt = unsafeUpdateAt;\n/**\n * Remove duplicates from a `ReadonlyNonEmptyArray`, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/ReadonlyNonEmptyArray'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])\n *\n * @category combinators\n * @since 2.11.0\n */\n\nvar uniq = function uniq(E) {\n  return function (as) {\n    if (as.length === 1) {\n      return as;\n    }\n\n    var out = [exports.head(as)];\n    var rest = exports.tail(as);\n\n    var _loop_1 = function _loop_1(a) {\n      if (out.every(function (o) {\n        return !E.equals(o, a);\n      })) {\n        out.push(a);\n      }\n    };\n\n    for (var _i = 0, rest_1 = rest; _i < rest_1.length; _i++) {\n      var a = rest_1[_i];\n\n      _loop_1(a);\n    }\n\n    return out;\n  };\n};\n\nexports.uniq = uniq;\n/**\n * Sort the elements of a `ReadonlyNonEmptyArray` in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import * as RNEA from 'fp-ts/ReadonlyNonEmptyArray'\n * import { contramap } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Person {\n *   name: string\n *   age: number\n * }\n *\n * const byName = pipe(S.Ord, contramap((p: Person) => p.name))\n *\n * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))\n *\n * const sortByNameByAge = RNEA.sortBy([byName, byAge])\n *\n * const persons: RNEA.ReadonlyNonEmptyArray<Person> = [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 },\n *   { name: 'b', age: 2 }\n * ]\n *\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @category combinators\n * @since 2.11.0\n */\n\nvar sortBy = function sortBy(ords) {\n  if (exports.isNonEmpty(ords)) {\n    var M = Ord_1.getMonoid();\n    return exports.sort(ords.reduce(M.concat, M.empty));\n  }\n\n  return function_1.identity;\n};\n\nexports.sortBy = sortBy;\n/**\n * @category combinators\n * @since 2.11.0\n */\n\nvar union = function union(E) {\n  var uniqE = exports.uniq(E);\n  return function (second) {\n    return function (first) {\n      return uniqE(function_1.pipe(first, concat(second)));\n    };\n  };\n};\n\nexports.union = union;\n/**\n * Rotate a `ReadonlyNonEmptyArray` by `n` steps.\n *\n * @example\n * import { rotate } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n * assert.deepStrictEqual(rotate(-2)([1, 2, 3, 4, 5]), [3, 4, 5, 1, 2])\n *\n * @category combinators\n * @since 2.11.0\n */\n\nvar rotate = function rotate(n) {\n  return function (as) {\n    var len = as.length;\n    var m = Math.round(n) % len;\n\n    if (exports.isOutOfBound(Math.abs(m), as) || m === 0) {\n      return as;\n    }\n\n    if (m < 0) {\n      var _a = exports.splitAt(-m)(as),\n          f = _a[0],\n          s = _a[1];\n\n      return function_1.pipe(s, concat(f));\n    } else {\n      return exports.rotate(m - len)(as);\n    }\n  };\n};\n\nexports.rotate = rotate; // -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n\n/**\n * Return a `ReadonlyNonEmptyArray` from a `ReadonlyArray` returning `none` if the input is empty.\n *\n * @category constructors\n * @since 2.5.0\n */\n\nvar fromReadonlyArray = function fromReadonlyArray(as) {\n  return exports.isNonEmpty(as) ? _.some(as) : _.none;\n};\n\nexports.fromReadonlyArray = fromReadonlyArray;\n/**\n * Return a `ReadonlyNonEmptyArray` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to a natural number.\n *\n * @example\n * import { makeBy } from 'fp-ts/ReadonlyNonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(pipe(5, makeBy(double)), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.11.0\n */\n\nvar makeBy = function makeBy(f) {\n  return function (n) {\n    var j = Math.max(0, Math.floor(n));\n    var out = [f(0)];\n\n    for (var i = 1; i < j; i++) {\n      out.push(f(i));\n    }\n\n    return out;\n  };\n};\n\nexports.makeBy = makeBy;\n/**\n * Create a `ReadonlyNonEmptyArray` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to a natural number.\n *\n * @example\n * import { replicate } from 'fp-ts/ReadonlyNonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(3, replicate('a')), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.11.0\n */\n\nvar replicate = function replicate(a) {\n  return exports.makeBy(function () {\n    return a;\n  });\n};\n\nexports.replicate = replicate;\n/**\n * Create a `ReadonlyNonEmptyArray` containing a range of integers, including both endpoints.\n *\n * @example\n * import { range } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(range(1, 5), [1, 2, 3, 4, 5])\n *\n * @category constructors\n * @since 2.11.0\n */\n\nvar range = function range(start, end) {\n  return start <= end ? exports.makeBy(function (i) {\n    return start + i;\n  })(end - start + 1) : [start];\n};\n\nexports.range = range; // -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n\n/**\n * Return the tuple of the `head` and the `tail`.\n *\n * @example\n * import { unprepend } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(unprepend([1, 2, 3, 4]), [1, [2, 3, 4]])\n *\n * @category destructors\n * @since 2.9.0\n */\n\nvar unprepend = function unprepend(as) {\n  return [exports.head(as), exports.tail(as)];\n};\n\nexports.unprepend = unprepend;\n/**\n * Return the tuple of the `init` and the `last`.\n *\n * @example\n * import { unappend } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(unappend([1, 2, 3, 4]), [[1, 2, 3], 4])\n *\n * @category destructors\n * @since 2.9.0\n */\n\nvar unappend = function unappend(as) {\n  return [exports.init(as), exports.last(as)];\n};\n\nexports.unappend = unappend; // -------------------------------------------------------------------------------------\n// interop\n// -------------------------------------------------------------------------------------\n\n/**\n * @category interop\n * @since 2.5.0\n */\n\nvar fromArray = function fromArray(as) {\n  return exports.fromReadonlyArray(as.slice());\n};\n\nexports.fromArray = fromArray;\n\nfunction concatW(second) {\n  return function (first) {\n    return first.concat(second);\n  };\n}\n\nexports.concatW = concatW;\n\nfunction concat(x, y) {\n  return y ? x.concat(y) : function (y) {\n    return y.concat(x);\n  };\n}\n\nexports.concat = concat;\n/**\n * @category combinators\n * @since 2.5.0\n */\n\nvar reverse = function reverse(as) {\n  return as.length === 1 ? as : __spreadArray([exports.last(as)], as.slice(0, -1).reverse());\n};\n\nexports.reverse = reverse;\n\nfunction group(E) {\n  return function (as) {\n    var len = as.length;\n\n    if (len === 0) {\n      return exports.empty;\n    }\n\n    var out = [];\n    var head = as[0];\n    var nea = [head];\n\n    for (var i = 1; i < len; i++) {\n      var a = as[i];\n\n      if (E.equals(a, head)) {\n        nea.push(a);\n      } else {\n        out.push(nea);\n        head = a;\n        nea = [head];\n      }\n    }\n\n    out.push(nea);\n    return out;\n  };\n}\n\nexports.group = group;\n/**\n * Splits an array into sub-non-empty-arrays stored in an object, based on the result of calling a `string`-returning\n * function on each element, and grouping the results according to values returned\n *\n * @example\n * import { groupBy } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(groupBy((s: string) => String(s.length))(['a', 'b', 'ab']), {\n *   '1': ['a', 'b'],\n *   '2': ['ab']\n * })\n *\n * @category combinators\n * @since 2.5.0\n */\n\nvar groupBy = function groupBy(f) {\n  return function (as) {\n    var out = {};\n\n    for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n      var a = as_1[_i];\n      var k = f(a);\n\n      if (out.hasOwnProperty(k)) {\n        out[k].push(a);\n      } else {\n        out[k] = [a];\n      }\n    }\n\n    return out;\n  };\n};\n\nexports.groupBy = groupBy;\n/**\n * @category combinators\n * @since 2.5.0\n */\n\nvar sort = function sort(O) {\n  return function (as) {\n    return as.length === 1 ? as : as.slice().sort(O.compare);\n  };\n};\n\nexports.sort = sort;\n/**\n * @category combinators\n * @since 2.5.0\n */\n\nvar updateAt = function updateAt(i, a) {\n  return exports.modifyAt(i, function () {\n    return a;\n  });\n};\n\nexports.updateAt = updateAt;\n/**\n * @category combinators\n * @since 2.5.0\n */\n\nvar modifyAt = function modifyAt(i, f) {\n  return function (as) {\n    return exports.isOutOfBound(i, as) ? _.none : _.some(exports.unsafeUpdateAt(i, f(as[i]), as));\n  };\n};\n\nexports.modifyAt = modifyAt;\n/**\n * @category combinators\n * @since 2.5.1\n */\n\nvar zipWith = function zipWith(as, bs, f) {\n  var cs = [f(as[0], bs[0])];\n  var len = Math.min(as.length, bs.length);\n\n  for (var i = 1; i < len; i++) {\n    cs[i] = f(as[i], bs[i]);\n  }\n\n  return cs;\n};\n\nexports.zipWith = zipWith;\n\nfunction zip(as, bs) {\n  if (bs === undefined) {\n    return function (bs) {\n      return zip(bs, as);\n    };\n  }\n\n  return exports.zipWith(as, bs, function (a, b) {\n    return [a, b];\n  });\n}\n\nexports.zip = zip;\n/**\n * @category combinators\n * @since 2.5.1\n */\n\nvar unzip = function unzip(abs) {\n  var fa = [abs[0][0]];\n  var fb = [abs[0][1]];\n\n  for (var i = 1; i < abs.length; i++) {\n    fa[i] = abs[i][0];\n    fb[i] = abs[i][1];\n  }\n\n  return [fa, fb];\n};\n\nexports.unzip = unzip;\n/**\n * Prepend an element to every member of a `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { prependAll } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.10.0\n */\n\nvar prependAll = function prependAll(middle) {\n  return function (as) {\n    var out = [middle, as[0]];\n\n    for (var i = 1; i < as.length; i++) {\n      out.push(middle, as[i]);\n    }\n\n    return out;\n  };\n};\n\nexports.prependAll = prependAll;\n/**\n * Places an element in between members of a `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { intersperse } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\n\nvar intersperse = function intersperse(middle) {\n  return function (as) {\n    var rest = exports.tail(as);\n    return exports.isNonEmpty(rest) ? function_1.pipe(rest, exports.prependAll(middle), exports.prepend(exports.head(as))) : as;\n  };\n};\n\nexports.intersperse = intersperse;\n/**\n * @category combinators\n * @since 2.10.0\n */\n\nvar chainWithIndex = function chainWithIndex(f) {\n  return function (as) {\n    var out = _.fromReadonlyNonEmptyArray(f(0, exports.head(as)));\n\n    for (var i = 1; i < as.length; i++) {\n      out.push.apply(out, f(i, as[i]));\n    }\n\n    return out;\n  };\n};\n\nexports.chainWithIndex = chainWithIndex;\n/**\n * A useful recursion pattern for processing a `ReadonlyNonEmptyArray` to produce a new `ReadonlyNonEmptyArray`, often used for \"chopping\" up the input\n * `ReadonlyNonEmptyArray`. Typically `chop` is called with some function that will consume an initial prefix of the `ReadonlyNonEmptyArray` and produce a\n * value and the tail of the `ReadonlyNonEmptyArray`.\n *\n * @category combinators\n * @since 2.10.0\n */\n\nvar chop = function chop(f) {\n  return function (as) {\n    var _a = f(as),\n        b = _a[0],\n        rest = _a[1];\n\n    var out = [b];\n    var next = rest;\n\n    while (exports.isNonEmpty(next)) {\n      var _b = f(next),\n          b_1 = _b[0],\n          rest_2 = _b[1];\n\n      out.push(b_1);\n      next = rest_2;\n    }\n\n    return out;\n  };\n};\n\nexports.chop = chop;\n/**\n * Splits a `ReadonlyNonEmptyArray` into two pieces, the first piece has max `n` elements.\n *\n * @category combinators\n * @since 2.10.0\n */\n\nvar splitAt = function splitAt(n) {\n  return function (as) {\n    var m = Math.max(1, n);\n    return m >= as.length ? [as, exports.empty] : [function_1.pipe(as.slice(1, m), exports.prepend(exports.head(as))), as.slice(m)];\n  };\n};\n\nexports.splitAt = splitAt;\n/**\n * Splits a `ReadonlyNonEmptyArray` into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the `ReadonlyNonEmptyArray`.\n *\n * @category combinators\n * @since 2.10.0\n */\n\nvar chunksOf = function chunksOf(n) {\n  return exports.chop(exports.splitAt(n));\n};\n\nexports.chunksOf = chunksOf; // -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n\nvar _map = function _map(fa, f) {\n  return function_1.pipe(fa, exports.map(f));\n};\n/* istanbul ignore next */\n\n\nvar _mapWithIndex = function _mapWithIndex(fa, f) {\n  return function_1.pipe(fa, exports.mapWithIndex(f));\n};\n\nvar _ap = function _ap(fab, fa) {\n  return function_1.pipe(fab, exports.ap(fa));\n};\n\nvar _chain = function _chain(ma, f) {\n  return function_1.pipe(ma, exports.chain(f));\n};\n/* istanbul ignore next */\n\n\nvar _extend = function _extend(wa, f) {\n  return function_1.pipe(wa, exports.extend(f));\n};\n/* istanbul ignore next */\n\n\nvar _reduce = function _reduce(fa, b, f) {\n  return function_1.pipe(fa, exports.reduce(b, f));\n};\n/* istanbul ignore next */\n\n\nvar _foldMap = function _foldMap(M) {\n  var foldMapM = exports.foldMap(M);\n  return function (fa, f) {\n    return function_1.pipe(fa, foldMapM(f));\n  };\n};\n/* istanbul ignore next */\n\n\nvar _reduceRight = function _reduceRight(fa, b, f) {\n  return function_1.pipe(fa, exports.reduceRight(b, f));\n};\n/* istanbul ignore next */\n\n\nvar _traverse = function _traverse(F) {\n  var traverseF = exports.traverse(F);\n  return function (ta, f) {\n    return function_1.pipe(ta, traverseF(f));\n  };\n};\n/* istanbul ignore next */\n\n\nvar _alt = function _alt(fa, that) {\n  return function_1.pipe(fa, exports.alt(that));\n};\n/* istanbul ignore next */\n\n\nvar _reduceWithIndex = function _reduceWithIndex(fa, b, f) {\n  return function_1.pipe(fa, exports.reduceWithIndex(b, f));\n};\n/* istanbul ignore next */\n\n\nvar _foldMapWithIndex = function _foldMapWithIndex(M) {\n  var foldMapWithIndexM = exports.foldMapWithIndex(M);\n  return function (fa, f) {\n    return function_1.pipe(fa, foldMapWithIndexM(f));\n  };\n};\n/* istanbul ignore next */\n\n\nvar _reduceRightWithIndex = function _reduceRightWithIndex(fa, b, f) {\n  return function_1.pipe(fa, exports.reduceRightWithIndex(b, f));\n};\n/* istanbul ignore next */\n\n\nvar _traverseWithIndex = function _traverseWithIndex(F) {\n  var traverseWithIndexF = exports.traverseWithIndex(F);\n  return function (ta, f) {\n    return function_1.pipe(ta, traverseWithIndexF(f));\n  };\n}; // -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n\n/**\n * @category Pointed\n * @since 2.5.0\n */\n\n\nexports.of = _.singleton;\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\n\nvar altW = function altW(that) {\n  return function (as) {\n    return function_1.pipe(as, concatW(that()));\n  };\n};\n\nexports.altW = altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.6.2\n */\n\nexports.alt = exports.altW;\n/**\n * @category Apply\n * @since 2.5.0\n */\n\nvar ap = function ap(as) {\n  return exports.chain(function (f) {\n    return function_1.pipe(as, exports.map(f));\n  });\n};\n\nexports.ap = ap;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.5.0\n */\n\nvar chain = function chain(f) {\n  return exports.chainWithIndex(function (_, a) {\n    return f(a);\n  });\n};\n\nexports.chain = chain;\n/**\n * @category Extend\n * @since 2.5.0\n */\n\nvar extend = function extend(f) {\n  return function (as) {\n    var next = exports.tail(as);\n    var out = [f(as)];\n\n    while (exports.isNonEmpty(next)) {\n      out.push(f(next));\n      next = exports.tail(next);\n    }\n\n    return out;\n  };\n};\n\nexports.extend = extend;\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexports.duplicate = /*#__PURE__*/exports.extend(function_1.identity);\n/**\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexports.flatten = /*#__PURE__*/exports.chain(function_1.identity);\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.5.0\n */\n\nvar map = function map(f) {\n  return exports.mapWithIndex(function (_, a) {\n    return f(a);\n  });\n};\n\nexports.map = map;\n/**\n * @category FunctorWithIndex\n * @since 2.5.0\n */\n\nvar mapWithIndex = function mapWithIndex(f) {\n  return function (as) {\n    var out = [f(0, exports.head(as))];\n\n    for (var i = 1; i < as.length; i++) {\n      out.push(f(i, as[i]));\n    }\n\n    return out;\n  };\n};\n\nexports.mapWithIndex = mapWithIndex;\n/**\n * @category Foldable\n * @since 2.5.0\n */\n\nvar reduce = function reduce(b, f) {\n  return exports.reduceWithIndex(b, function (_, b, a) {\n    return f(b, a);\n  });\n};\n\nexports.reduce = reduce;\n/**\n * **Note**. The constraint is relaxed: a `Semigroup` instead of a `Monoid`.\n *\n * @category Foldable\n * @since 2.5.0\n */\n\nvar foldMap = function foldMap(S) {\n  return function (f) {\n    return function (as) {\n      return as.slice(1).reduce(function (s, a) {\n        return S.concat(s, f(a));\n      }, f(as[0]));\n    };\n  };\n};\n\nexports.foldMap = foldMap;\n/**\n * @category Foldable\n * @since 2.5.0\n */\n\nvar reduceRight = function reduceRight(b, f) {\n  return exports.reduceRightWithIndex(b, function (_, b, a) {\n    return f(b, a);\n  });\n};\n\nexports.reduceRight = reduceRight;\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\n\nvar reduceWithIndex = function reduceWithIndex(b, f) {\n  return function (as) {\n    return as.reduce(function (b, a, i) {\n      return f(i, b, a);\n    }, b);\n  };\n};\n\nexports.reduceWithIndex = reduceWithIndex;\n/**\n * **Note**. The constraint is relaxed: a `Semigroup` instead of a `Monoid`.\n *\n * @category FoldableWithIndex\n * @since 2.5.0\n */\n\nvar foldMapWithIndex = function foldMapWithIndex(S) {\n  return function (f) {\n    return function (as) {\n      return as.slice(1).reduce(function (s, a, i) {\n        return S.concat(s, f(i + 1, a));\n      }, f(0, as[0]));\n    };\n  };\n};\n\nexports.foldMapWithIndex = foldMapWithIndex;\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\n\nvar reduceRightWithIndex = function reduceRightWithIndex(b, f) {\n  return function (as) {\n    return as.reduceRight(function (b, a, i) {\n      return f(i, a, b);\n    }, b);\n  };\n};\n\nexports.reduceRightWithIndex = reduceRightWithIndex;\n/**\n * @category Traversable\n * @since 2.6.3\n */\n\nvar traverse = function traverse(F) {\n  var traverseWithIndexF = exports.traverseWithIndex(F);\n  return function (f) {\n    return traverseWithIndexF(function (_, a) {\n      return f(a);\n    });\n  };\n};\n\nexports.traverse = traverse;\n/**\n * @category Traversable\n * @since 2.6.3\n */\n\nvar sequence = function sequence(F) {\n  return exports.traverseWithIndex(F)(function_1.SK);\n};\n\nexports.sequence = sequence;\n/**\n * @category TraversableWithIndex\n * @since 2.6.3\n */\n\nvar traverseWithIndex = function traverseWithIndex(F) {\n  return function (f) {\n    return function (as) {\n      var out = F.map(f(0, exports.head(as)), exports.of);\n\n      for (var i = 1; i < as.length; i++) {\n        out = F.ap(F.map(out, function (bs) {\n          return function (b) {\n            return function_1.pipe(bs, exports.append(b));\n          };\n        }), f(i, as[i]));\n      }\n\n      return out;\n    };\n  };\n};\n\nexports.traverseWithIndex = traverseWithIndex;\n/**\n * @category Comonad\n * @since 2.6.3\n */\n\nexports.extract = _.head; // -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n\n/**\n * @category instances\n * @since 2.5.0\n */\n\nexports.URI = 'ReadonlyNonEmptyArray';\n/**\n * @category instances\n * @since 2.5.0\n */\n\nvar getShow = function getShow(S) {\n  return {\n    show: function show(as) {\n      return \"[\" + as.map(S.show).join(', ') + \"]\";\n    }\n  };\n};\n\nexports.getShow = getShow;\n/**\n * Builds a `Semigroup` instance for `ReadonlyNonEmptyArray`\n *\n * @category instances\n * @since 2.5.0\n */\n\nvar getSemigroup = function getSemigroup() {\n  return {\n    concat: concat\n  };\n};\n\nexports.getSemigroup = getSemigroup;\n/**\n * @example\n * import { getEq } from 'fp-ts/ReadonlyNonEmptyArray'\n * import * as N from 'fp-ts/number'\n *\n * const E = getEq(N.Eq)\n * assert.strictEqual(E.equals([1, 2], [1, 2]), true)\n * assert.strictEqual(E.equals([1, 2], [1, 3]), false)\n *\n * @category instances\n * @since 2.5.0\n */\n\nvar getEq = function getEq(E) {\n  return Eq_1.fromEquals(function (xs, ys) {\n    return xs.length === ys.length && xs.every(function (x, i) {\n      return E.equals(x, ys[i]);\n    });\n  });\n};\n\nexports.getEq = getEq;\n/**\n * @category combinators\n * @since 2.11.0\n */\n\nvar getUnionSemigroup = function getUnionSemigroup(E) {\n  var unionE = exports.union(E);\n  return {\n    concat: function concat(first, second) {\n      return unionE(second)(first);\n    }\n  };\n};\n\nexports.getUnionSemigroup = getUnionSemigroup;\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Functor = {\n  URI: exports.URI,\n  map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\n\nexports.flap = /*#__PURE__*/Functor_1.flap(exports.Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\n\nexports.Pointed = {\n  URI: exports.URI,\n  of: exports.of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.FunctorWithIndex = {\n  URI: exports.URI,\n  map: _map,\n  mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\n\nexports.Apply = {\n  URI: exports.URI,\n  map: _map,\n  ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexports.apFirst = /*#__PURE__*/Apply_1.apFirst(exports.Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexports.apSecond = /*#__PURE__*/Apply_1.apSecond(exports.Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Applicative = {\n  URI: exports.URI,\n  map: _map,\n  ap: _ap,\n  of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\n\nexports.Chain = {\n  URI: exports.URI,\n  map: _map,\n  ap: _ap,\n  chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexports.chainFirst = /*#__PURE__*/Chain_1.chainFirst(exports.Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Monad = {\n  URI: exports.URI,\n  map: _map,\n  ap: _ap,\n  of: exports.of,\n  chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Foldable = {\n  URI: exports.URI,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.FoldableWithIndex = {\n  URI: exports.URI,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  reduceWithIndex: _reduceWithIndex,\n  foldMapWithIndex: _foldMapWithIndex,\n  reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Traversable = {\n  URI: exports.URI,\n  map: _map,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  traverse: _traverse,\n  sequence: exports.sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.TraversableWithIndex = {\n  URI: exports.URI,\n  map: _map,\n  mapWithIndex: _mapWithIndex,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  traverse: _traverse,\n  sequence: exports.sequence,\n  reduceWithIndex: _reduceWithIndex,\n  foldMapWithIndex: _foldMapWithIndex,\n  reduceRightWithIndex: _reduceRightWithIndex,\n  traverseWithIndex: _traverseWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Alt = {\n  URI: exports.URI,\n  map: _map,\n  alt: _alt\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Comonad = {\n  URI: exports.URI,\n  map: _map,\n  extend: _extend,\n  extract: exports.extract\n}; // -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n\n/**\n * @since 2.9.0\n */\n\nexports.Do = /*#__PURE__*/exports.of(_.emptyRecord);\n/**\n * @since 2.8.0\n */\n\nexports.bindTo = /*#__PURE__*/Functor_1.bindTo(exports.Functor);\n/**\n * @since 2.8.0\n */\n\nexports.bind = /*#__PURE__*/Chain_1.bind(exports.Chain); // -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n\n/**\n * @since 2.8.0\n */\n\nexports.apS = /*#__PURE__*/Apply_1.apS(exports.Apply); // -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n\n/**\n * @since 2.5.0\n */\n\nexports.head = exports.extract;\n/**\n * @since 2.5.0\n */\n\nexports.tail = _.tail;\n/**\n * @since 2.5.0\n */\n\nvar last = function last(as) {\n  return as[as.length - 1];\n};\n\nexports.last = last;\n/**\n * Get all but the last element of a non empty array, creating a new array.\n *\n * @example\n * import { init } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), [1, 2])\n * assert.deepStrictEqual(init([1]), [])\n *\n * @since 2.5.0\n */\n\nvar init = function init(as) {\n  return as.slice(0, -1);\n};\n\nexports.init = init;\n/**\n * @since 2.5.0\n */\n\nvar min = function min(O) {\n  var S = Se.min(O);\n  return function (as) {\n    return as.reduce(S.concat);\n  };\n};\n\nexports.min = min;\n/**\n * @since 2.5.0\n */\n\nvar max = function max(O) {\n  var S = Se.max(O);\n  return function (as) {\n    return as.reduce(S.concat);\n  };\n};\n\nexports.max = max;\n/**\n * @since 2.10.0\n */\n\nvar concatAll = function concatAll(S) {\n  return function (as) {\n    return as.reduce(S.concat);\n  };\n};\n\nexports.concatAll = concatAll;\n/**\n * Break a `ReadonlyArray` into its first element and remaining elements.\n *\n * @category destructors\n * @since 2.11.0\n */\n\nvar matchLeft = function matchLeft(f) {\n  return function (as) {\n    return f(exports.head(as), exports.tail(as));\n  };\n};\n\nexports.matchLeft = matchLeft;\n/**\n * Break a `ReadonlyArray` into its initial elements and the last element.\n *\n * @category destructors\n * @since 2.11.0\n */\n\nvar matchRight = function matchRight(f) {\n  return function (as) {\n    return f(exports.init(as), exports.last(as));\n  };\n};\n\nexports.matchRight = matchRight;\n/**\n * Apply a function to the head, creating a new `ReadonlyNonEmptyArray`.\n *\n * @since 2.11.0\n */\n\nvar modifyHead = function modifyHead(f) {\n  return function (as) {\n    return __spreadArray([f(exports.head(as))], exports.tail(as));\n  };\n};\n\nexports.modifyHead = modifyHead;\n/**\n * Change the head, creating a new `ReadonlyNonEmptyArray`.\n *\n * @category combinators\n * @since 2.11.0\n */\n\nvar updateHead = function updateHead(a) {\n  return exports.modifyHead(function () {\n    return a;\n  });\n};\n\nexports.updateHead = updateHead;\n/**\n * Apply a function to the last element, creating a new `ReadonlyNonEmptyArray`.\n *\n * @since 2.11.0\n */\n\nvar modifyLast = function modifyLast(f) {\n  return function (as) {\n    return function_1.pipe(exports.init(as), exports.append(f(exports.last(as))));\n  };\n};\n\nexports.modifyLast = modifyLast;\n/**\n * Change the last element, creating a new `ReadonlyNonEmptyArray`.\n *\n * @category combinators\n * @since 2.11.0\n */\n\nvar updateLast = function updateLast(a) {\n  return exports.modifyLast(function () {\n    return a;\n  });\n};\n\nexports.updateLast = updateLast;\n\nfunction groupSort(O) {\n  var sortO = exports.sort(O);\n  var groupO = group(O);\n  return function (as) {\n    return exports.isNonEmpty(as) ? groupO(sortO(as)) : exports.empty;\n  };\n}\n\nexports.groupSort = groupSort;\n\nfunction filter(predicate) {\n  return exports.filterWithIndex(function (_, a) {\n    return predicate(a);\n  });\n}\n\nexports.filter = filter;\n/**\n * Use [`filterWithIndex`](./ReadonlyArray.ts.html#filterwithindex) instead.\n *\n * @category combinators\n * @since 2.5.0\n * @deprecated\n */\n\nvar filterWithIndex = function filterWithIndex(predicate) {\n  return function (as) {\n    return exports.fromReadonlyArray(as.filter(function (a, i) {\n      return predicate(i, a);\n    }));\n  };\n};\n\nexports.filterWithIndex = filterWithIndex;\n/**\n * Use [`unprepend`](#unprepend) instead.\n *\n * @category destructors\n * @since 2.10.0\n * @deprecated\n */\n\nexports.uncons = exports.unprepend;\n/**\n * Use [`unappend`](#unappend) instead.\n *\n * @category destructors\n * @since 2.10.0\n * @deprecated\n */\n\nexports.unsnoc = exports.unappend;\n\nfunction cons(head, tail) {\n  return tail === undefined ? exports.prepend(head) : function_1.pipe(tail, exports.prepend(head));\n}\n\nexports.cons = cons;\n/**\n * Use [`append`](./ReadonlyArray.ts.html#append) instead.\n *\n * @category constructors\n * @since 2.5.0\n * @deprecated\n */\n\nvar snoc = function snoc(init, end) {\n  return function_1.pipe(init, concat([end]));\n};\n\nexports.snoc = snoc;\n/**\n * Use [`insertAt`](./ReadonlyArray.ts.html#insertat) instead.\n *\n * @category combinators\n * @since 2.5.0\n * @deprecated\n */\n\nvar insertAt = function insertAt(i, a) {\n  return function (as) {\n    return i < 0 || i > as.length ? _.none : _.some(exports.unsafeInsertAt(i, a, as));\n  };\n};\n\nexports.insertAt = insertAt;\n/**\n * Use [`prependAll`](#prependall) instead.\n *\n * @category combinators\n * @since 2.9.0\n * @deprecated\n */\n\nexports.prependToAll = exports.prependAll;\n/**\n * Use [`concatAll`](#concatall) instead.\n *\n * @since 2.5.0\n * @deprecated\n */\n\nexports.fold = exports.concatAll;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.5.0\n * @deprecated\n */\n\nexports.readonlyNonEmptyArray = {\n  URI: exports.URI,\n  of: exports.of,\n  map: _map,\n  mapWithIndex: _mapWithIndex,\n  ap: _ap,\n  chain: _chain,\n  extend: _extend,\n  extract: exports.extract,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  traverse: _traverse,\n  sequence: exports.sequence,\n  reduceWithIndex: _reduceWithIndex,\n  foldMapWithIndex: _foldMapWithIndex,\n  reduceRightWithIndex: _reduceRightWithIndex,\n  traverseWithIndex: _traverseWithIndex,\n  alt: _alt\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Field = exports.MonoidProduct = exports.MonoidSum = exports.SemigroupProduct = exports.SemigroupSum = exports.MagmaSub = exports.Show = exports.Bounded = exports.Ord = exports.Eq = exports.isNumber = void 0; // -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n\n/**\n * @category refinements\n * @since 2.11.0\n */\n\nvar isNumber = function isNumber(u) {\n  return typeof u === 'number';\n};\n\nexports.isNumber = isNumber; // -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n\n/**\n * @category instances\n * @since 2.10.0\n */\n\nexports.Eq = {\n  equals: function equals(first, second) {\n    return first === second;\n  }\n};\n/**\n * @category instances\n * @since 2.10.0\n */\n\nexports.Ord = {\n  equals: exports.Eq.equals,\n  compare: function compare(first, second) {\n    return first < second ? -1 : first > second ? 1 : 0;\n  }\n};\n/**\n * @category instances\n * @since 2.10.0\n */\n\nexports.Bounded = {\n  equals: exports.Eq.equals,\n  compare: exports.Ord.compare,\n  top: Infinity,\n  bottom: -Infinity\n};\n/**\n * @category instances\n * @since 2.10.0\n */\n\nexports.Show = {\n  show: function show(n) {\n    return JSON.stringify(n);\n  }\n};\n/**\n * @category instances\n * @since 2.11.0\n */\n\nexports.MagmaSub = {\n  concat: function concat(first, second) {\n    return first - second;\n  }\n};\n/**\n * `number` semigroup under addition.\n *\n * @example\n * import { SemigroupSum } from 'fp-ts/number'\n *\n * assert.deepStrictEqual(SemigroupSum.concat(2, 3), 5)\n *\n * @category instances\n * @since 2.10.0\n */\n\nexports.SemigroupSum = {\n  concat: function concat(first, second) {\n    return first + second;\n  }\n};\n/**\n * `number` semigroup under multiplication.\n *\n * @example\n * import { SemigroupProduct } from 'fp-ts/number'\n *\n * assert.deepStrictEqual(SemigroupProduct.concat(2, 3), 6)\n *\n * @category instances\n * @since 2.10.0\n */\n\nexports.SemigroupProduct = {\n  concat: function concat(first, second) {\n    return first * second;\n  }\n};\n/**\n * `number` monoid under addition.\n *\n * The `empty` value is `0`.\n *\n * @example\n * import { MonoidSum } from 'fp-ts/number'\n *\n * assert.deepStrictEqual(MonoidSum.concat(2, MonoidSum.empty), 2)\n *\n * @category instances\n * @since 2.10.0\n */\n\nexports.MonoidSum = {\n  concat: exports.SemigroupSum.concat,\n  empty: 0\n};\n/**\n * `number` monoid under multiplication.\n *\n * The `empty` value is `1`.\n *\n * @example\n * import { MonoidProduct } from 'fp-ts/number'\n *\n * assert.deepStrictEqual(MonoidProduct.concat(2, MonoidProduct.empty), 2)\n *\n * @category instances\n * @since 2.10.0\n */\n\nexports.MonoidProduct = {\n  concat: exports.SemigroupProduct.concat,\n  empty: 1\n};\n/**\n * @category instances\n * @since 2.10.0\n */\n\nexports.Field = {\n  add: exports.SemigroupSum.concat,\n  zero: 0,\n  mul: exports.SemigroupProduct.concat,\n  one: 1,\n  sub: exports.MagmaSub.concat,\n  degree: function degree(_) {\n    return 1;\n  },\n  div: function div(first, second) {\n    return first / second;\n  },\n  mod: function mod(first, second) {\n    return first % second;\n  }\n};","import { navigate } from 'gatsby';\nimport { useEffect } from 'react';\nimport { findFirst } from 'fp-ts/lib/Array';\nimport { identity, pipe } from 'fp-ts/lib/function';\nimport { match, fromNullable } from 'fp-ts/lib/Option';\n\nconst getDefaultLanguageOrElse = (defaultLanguage?: string) => pipe(\n  defaultLanguage,\n  fromNullable,\n  match(\n    () => 'ko',\n    identity,\n  ),\n);\n\nconst getTargetLanguages = (\n  languages: string[],\n  navigatorLanguage: string,\n  defaultLanguage?: string,\n) => pipe(\n  languages,\n  findFirst((lang: string) => lang.startsWith(navigatorLanguage)),\n  match(\n    () => getDefaultLanguageOrElse(defaultLanguage),\n    identity,\n  ),\n);\n\nexport function useLanguageNavigateEffect(languages: string[]) {\n  useEffect(() => {\n    const [navigatorLanguage] = window.navigator.language.split('-');\n    const targetLanguage = getTargetLanguages(languages, navigatorLanguage);\n\n    void navigate(`/${targetLanguage}/`, { replace: true });\n  }, [languages]);\n}\n","import * as React from 'react';\nimport * as A from 'fp-ts/lib/Array';\nimport { graphql } from 'gatsby';\nimport { pipe } from 'fp-ts/lib/function';\n\nimport { useLanguageNavigateEffect } from '~/src/utils/useLanguageNavigationEffect';\n\nimport type { PageProps } from 'gatsby';\n\ntype PageQueryData = { allTranslationData: { nodes: TranslationData[] } };\ntype IndexPageProps = PageProps<PageQueryData>;\n\nconst IndexPage: React.FC<IndexPageProps> = ({ data }) => {\n  const languages = pipe(\n    data.allTranslationData.nodes,\n    A.map((node) => node.language),\n  );\n\n  useLanguageNavigateEffect(languages);\n\n  return null;\n};\n\nexport default IndexPage;\n\nexport const query = graphql`\n  query IndexPage {\n    allTranslationData {\n      nodes {\n        language\n      }\n    }\n  }\n`;\n"],"names":["__createBinding","this","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__setModuleDefault","v","value","__importStar","mod","__esModule","result","prototype","hasOwnProperty","call","exports","lefts","rights","reverse","modifyAt","deleteAt","updateAt","insertAt","copy","findLastIndex","findLastMap","findLast","findFirstMap","findFirst","findIndex","dropLeftWhile","dropRight","dropLeft","spanLeft","takeLeftWhile","takeRight","takeLeft","init","tail","last","head","lookup","isOutOfBound","size","scanRight","scanLeft","chainWithIndex","foldRight","matchRight","matchRightW","foldLeft","matchLeft","matchLeftW","match","matchW","fromEither","fromOption","fromPredicate","replicate","makeBy","appendW","append","prependW","prepend","isNonEmpty","isEmpty","traverseWithIndex","sequence","traverse","reduceRightWithIndex","reduceRight","reduceWithIndex","reduce","foldMapWithIndex","foldMap","duplicate","extend","filterWithIndex","alt","altW","partitionMapWithIndex","partitionMap","partitionWithIndex","partition","filter","separate","compact","filterMap","filterMapWithIndex","mapWithIndex","flatten","chain","ap","map","zero","of","difference","intersection","union","concat","concatW","comprehension","fromOptionK","chunksOf","splitAt","chop","sortBy","uniq","elem","rotate","intersperse","prependAll","unzip","zip","zipWith","sort","some","every","unsafeDeleteAt","unsafeUpdateAt","unsafeInsertAt","fromEitherK","FromEither","filterE","ChainRecBreadthFirst","chainRecBreadthFirst","ChainRecDepthFirst","chainRecDepthFirst","Witherable","TraversableWithIndex","Traversable","FoldableWithIndex","Foldable","FilterableWithIndex","Filterable","Compactable","Extend","Alternative","guard","Zero","Alt","Unfoldable","Monad","chainFirst","Chain","Applicative","apSecond","apFirst","Apply","FunctorWithIndex","Pointed","flap","Functor","getDifferenceMagma","getIntersectionSemigroup","getUnionMonoid","getUnionSemigroup","getOrd","getEq","getMonoid","getSemigroup","getShow","URI","unfold","wilt","wither","array","prependToAll","snoc","cons","empty","range","apS","bind","bindTo","Do","exists","Apply_1","Chain_1","FromEither_1","function_1","Functor_1","_","NEA","RA","Separated_1","Witherable_1","Zero_1","as","length","n","f","a","predicate","ma","isNone","e","isLeft","right","onEmpty","onNonEmpty","out","i","push","apply","b","len","Array","none","slice","_i","as_1","spanLeftIndex","l","_a","rest","r","_tag","left","O","compare","fa","fb","fc","Math","min","bs","middle","E","ords","g","arguments","input","go","scope","pipe","x","unionE","first","second","unionE_1","elemE","xs","ys","intersectionE_1","differenceE_1","_map","_mapWithIndex","_ap","fab","_chain","_filter","_filterMap","_partition","_partitionMap","_partitionWithIndex","predicateWithIndex","_partitionMapWithIndex","_alt","that","_reduce","_foldMap","M","foldMapM","_reduceRight","_reduceWithIndex","_foldMapWithIndex","foldMapWithIndexM","_reduceRightWithIndex","_filterMapWithIndex","_filterWithIndex","_extend","_traverse","F","traverseF","ta","_traverseWithIndex","traverseWithIndexF","_chainRecDepthFirst","_chainRecBreadthFirst","identity","optionB","isSome","fa_1","separated","wa","fas","fbs","_witherF","_wither","_wiltF","_wilt","bb","mt","b_1","intersectionE","differenceE","witherDefault","wiltDefault","chainRec","splice","emptyRecord","__spreadArray","to","from","il","j","groupBy","group","unappend","unprepend","fromArray","fromReadonlyNonEmptyArray","groupSort","updateLast","modifyLast","updateHead","modifyHead","concatAll","max","Comonad","extract","nonEmptyArray","fold","unsnoc","uncons","Ord_1","RNEA","end","_loop_1","equals","rest_1","uniqE","round","abs","s","floor","start","y","nea","cs","next","_b","rest_2","S","sortO","groupO","toArray","readonlyArray","Eq_1","N","elemE_1","element","show","join","fromEquals","fromCompare","aLen","bLen","ordering","Ord","todo","shift","unshift","initial","forEach","initial_1","fromReadonlyArray","readonlyNonEmptyArray","Se","emptyReadonlyArray","singleton","SK","Field","MonoidProduct","MonoidSum","SemigroupProduct","SemigroupSum","MagmaSub","Show","Bounded","Eq","isNumber","u","top","Infinity","bottom","JSON","stringify","add","mul","one","sub","degree","div","getTargetLanguages","languages","navigatorLanguage","defaultLanguage","lang","startsWith","fromNullable","getDefaultLanguageOrElse","data","useEffect","window","navigator","language","split","targetLanguage","navigate","replace","useLanguageNavigateEffect","allTranslationData","nodes","A","node"],"sourceRoot":""}